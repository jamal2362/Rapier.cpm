<?xml version="1.0" encoding="UTF-8"?>
<window>
    <controls>
        <control type="group" id="2">
            <depth>DepthOSD+</depth>
            <visible>Skin.HasSetting(osd.useleftCodecStartupLogos)</visible>
            <left>23</left>
            <animation type="WindowOpen" condition="!Skin.HasSetting(osd.useOneSecondCodecLogos) + !Skin.HasSetting(osd.useTwoSecondsCodecLogos) + !Skin.HasSetting(osd.useThreeSecondsCodecLogos) + !Skin.HasSetting(osd.useFourSecondsCodecLogos) + !Skin.HasSetting(osd.useFiveSecondsCodecLogos) + !Skin.HasSetting(osd.useSixSecondsCodecLogos) + !Skin.HasSetting(osd.useSevenSecondsCodecLogos) + !Skin.HasSetting(osd.useEightSecondsCodecLogos) + !Skin.HasSetting(osd.useNineSecondsCodecLogos) + !Skin.HasSetting(osd.useTenSecondsCodecLogos) + !Skin.HasSetting(osd.useElevenSecondsCodecLogos) + !Skin.HasSetting(osd.useTwelveSecondsCodecLogos) + !Skin.HasSetting(osd.useThirteenSecondsCodecLogos) + !Skin.HasSetting(osd.useFourteenSecondsCodecLogos) + !Skin.HasSetting(osd.useFifteenSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="7000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useOneSecondCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="3000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useTwoSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="4000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useThreeSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="5000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useFourSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="6000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useFiveSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="7000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useSixSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="8000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useSevenSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="9000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useEightSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="10000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useNineSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="11000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useTenSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="12000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useElevenSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="13000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useTwelveSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="14000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useThirteenSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="15000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useFourteenSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="16000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useFifteenSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="17000" time="500" tween="sine" />
            </animation>
			
            <include content="Video_Audio_Background_Flag">
                <param name="groupId">46</param>
                <param name="imageId">47</param>
                <param name="visible">!String.IsEmpty(Player.Process(video.source.hdr.type.raw)) + !String.IsEmpty(VideoPlayer.AudioCodec)</param>
                <param name="texture">common/corner.png</param>
                <param name="colordiffuse">80FFFFFF</param>
            </include>
			
            <include content="Video_Background_Flag">
                <param name="groupId">48</param>
                <param name="imageId">49</param>
                <param name="visible">!String.IsEmpty(Player.Process(video.source.hdr.type.raw)) + String.IsEmpty(VideoPlayer.AudioCodec)</param>
                <param name="texture">common/corner_small.png</param>
                <param name="colordiffuse">80FFFFFF</param>
            </include>
			
            <include content="Audio_Background_Flag">
                <param name="groupId">50</param>
                <param name="imageId">51</param>
                <param name="visible">String.IsEmpty(Player.Process(video.source.hdr.type.raw)) + !String.IsEmpty(VideoPlayer.AudioCodec)</param>
                <param name="texture">common/corner_small.png</param>
                <param name="colordiffuse">80FFFFFF</param>
            </include>
			
            <include content="SDR_Bypass_Flag">
                <param name="groupId">52</param>
                <param name="imageId">53</param>
                <param name="visible">String.IsEqual(Player.Process(video.source.hdr.type.raw), 0) + String.Contains(Player.Process(amlogic.vs10.mode),Bypass)</param>
                <param name="texture">codecs/SDR.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="HDR10_Bypass_Flag">
                <param name="groupId">54</param>
                <param name="imageId">55</param>
                <param name="visible">String.IsEqual(Player.Process(video.source.hdr.type.raw), 1) + String.Contains(Player.Process(amlogic.vs10.mode),Bypass)</param>
                <param name="texture">codecs/HDR10.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="HDR10Plus_Bypass_Flag">
                <param name="groupId">56</param>
                <param name="imageId">57</param>
                <param name="visible">String.IsEqual(Player.Process(video.source.hdr.type.raw), 2) + String.Contains(Player.Process(amlogic.vs10.mode),Bypass)</param>
                <param name="texture">codecs/HDR10Plus.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="DV_Bypass_Flag">
                <param name="groupId">58</param>
                <param name="imageId">59</param>
                <param name="visible">String.IsEqual(Player.Process(video.source.hdr.type.raw), 3) + String.Contains(Player.Process(amlogic.vs10.mode),Bypass)</param>
                <param name="texture">codecs/Dolby_Vision.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="HLG_Bypass_Flag">
                <param name="groupId">60</param>
                <param name="imageId">61</param>
                <param name="visible">String.IsEqual(Player.Process(video.source.hdr.type.raw), 4) + String.Contains(Player.Process(amlogic.vs10.mode),Bypass)</param>
                <param name="texture">codecs/HLG.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="VS10_SDR_Flag">
                <param name="groupId">62</param>
                <param name="imageId">63</param>
                <param name="visible">String.Contains(Player.Process(amlogic.vs10.mode),SDR)</param>
                <param name="texture">codecs/SDR.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="VS10_HDR10_Flag">
                <param name="groupId">64</param>
                <param name="imageId">65</param>
                <param name="visible">String.Contains(Player.Process(amlogic.vs10.mode),HDR10)</param>
                <param name="texture">codecs/HDR10.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="VS10_HDR10Plus_Flag">
                <param name="groupId">66</param>
                <param name="imageId">67</param>
                <param name="visible">String.IsEqual(Player.Process(video.source.hdr.type.raw), 2) + !String.Contains(Player.Process(amlogic.vs10.mode),Dolby Vision) + !String.Contains(Player.Process(amlogic.vs10.mode),SDR) + !String.Contains(Player.Process(amlogic.vs10.mode),HLG)</param>
                <param name="texture">codecs/HDR10Plus.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="VS10_DV_Flag">
                <param name="groupId">68</param>
                <param name="imageId">69</param>
                <param name="visible">String.Contains(Player.Process(amlogic.vs10.mode),Dolby Vision)</param>
                <param name="texture">codecs/Dolby_Vision.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="VS10_HLG_Flag">
                <param name="groupId">70</param>
                <param name="imageId">71</param>
                <param name="visible">String.Contains(Player.Process(amlogic.vs10.mode),HLG)</param>
                <param name="texture">codecs/Dolby_Vision.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="Separation_Line_Flag">
                <param name="groupId">72</param>
                <param name="imageId">73</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,aac) | String.IsEqual(VideoPlayer.AudioCodec,aac_latm) | String.IsEqual(VideoPlayer.AudioCodec,ac3) | String.IsEqual(VideoPlayer.AudioCodec,dca) | String.IsEqual(VideoPlayer.AudioCodec,dolbydigital) | String.IsEqual(VideoPlayer.AudioCodec,dtshd) | String.IsEqual(VideoPlayer.AudioCodec,dtshd_ma) | String.IsEqual(VideoPlayer.AudioCodec,dtshd_hra) | String.IsEqual(VideoPlayer.AudioCodec,dtshd_ma_x) | String.IsEqual(VideoPlayer.AudioCodec,dtshd_ma_x_imax) | String.IsEqual(VideoPlayer.AudioCodec,eac3) | String.IsEqual(VideoPlayer.AudioCodec,eac3_ddp_atmos) | String.IsEqual(VideoPlayer.AudioCodec,mp3) | String.IsEqual(VideoPlayer.AudioCodec,mp3float) | String.IsEqual(VideoPlayer.AudioCodec,flac) | String.IsEqual(VideoPlayer.AudioCodec,opus) | String.IsEqual(VideoPlayer.AudioCodec,pcm) | String.IsEqual(VideoPlayer.AudioCodec,pcm_bluray) | String.IsEqual(VideoPlayer.AudioCodec,pcm_s16le) | String.IsEqual(VideoPlayer.AudioCodec,pcm_s24le) | String.IsEqual(VideoPlayer.AudioCodec,truehd) | String.IsEqual(VideoPlayer.AudioCodec,truehd_atmos)</param>
                <param name="texture">common/selectedwhite.png</param>
                <param name="colordiffuse">80FFFFFF</param>
            </include>
			
            <include content="PCM_Flag">
                <param name="groupId">74</param>
                <param name="imageId">75</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,pcm) | String.IsEqual(VideoPlayer.AudioCodec,pcm_bluray) | String.IsEqual(VideoPlayer.AudioCodec,pcm_s16le) | String.IsEqual(VideoPlayer.AudioCodec,pcm_s24le)</param>
                <param name="texture">codecs/PCM.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="AAC_Flag">
                <param name="groupId">76</param>
                <param name="imageId">77</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,aac) | String.IsEqual(VideoPlayer.AudioCodec,aac_latm)</param>
                <param name="texture">codecs/AAC.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="Dolby_Digital_Flag">
                <param name="groupId">78</param>
                <param name="imageId">79</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,dolbydigital) | String.IsEqual(VideoPlayer.AudioCodec,ac3)</param>
                <param name="texture">codecs/Dolby_Digital.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="Dolby_Digital_Plus_Flag">
                <param name="groupId">80</param>
                <param name="imageId">81</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,eac3)</param>
                <param name="texture">codecs/Dolby_Digital_Plus.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="Dolby_Atmos_Flag">
                <param name="groupId">82</param>
                <param name="imageId">83</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,truehd_atmos)</param>
                <param name="texture">codecs/Dolby_TrueHD_Atmos.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="Dolby_TrueHD_Flag">
                <param name="groupId">84</param>
                <param name="imageId">85</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,truehd)</param>
                <param name="texture">codecs/Dolby_TrueHD.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="Dolby_Atmos1_Flag">
                <param name="groupId">86</param>
                <param name="imageId">87</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,eac3_ddp_atmos)</param>
                <param name="texture">codecs/Dolby_Digital_Plus_Atmos.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="MP3_Flag">
                <param name="groupId">88</param>
                <param name="imageId">89</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,mp3) | String.IsEqual(VideoPlayer.AudioCodec,mp3float)</param>
                <param name="texture">codecs/MP3.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="DTS_Flag">
                <param name="groupId">90</param>
                <param name="imageId">91</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,dca)</param>
                <param name="texture">codecs/DTS.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="DTS_HD_MA_Flag">
                <param name="groupId">92</param>
                <param name="imageId">93</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,dtshd_ma)</param>
                <param name="texture">codecs/DTS-HD-MA.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="DTS_HD_HRA_Flag">
                <param name="groupId">94</param>
                <param name="imageId">95</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,dtshd_hra)</param>
                <param name="texture">codecs/DTS-HD-HRA.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="DTS_X_Flag">
                <param name="groupId">96</param>
                <param name="imageId">97</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,dtshd_ma_x)</param>
                <param name="texture">codecs/DTSX.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="IMAX_Flag">
                <param name="groupId">98</param>
                <param name="imageId">99</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,dtshd_ma_x_imax)</param>
                <param name="texture">codecs/IMAX.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="FLAC_Flag">
                <param name="groupId">100</param>
                <param name="imageId">101</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,flac)</param>
                <param name="texture">codecs/FLAC.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="OPUS_Flag">
                <param name="groupId">102</param>
                <param name="imageId">103</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,opus)</param>
                <param name="texture">codecs/OPUS.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="VS10_Indicator_Flag">
                <param name="groupId">104</param>
                <param name="imageId">105</param>
                <param name="visible">String.Contains(Player.Process(amlogic.vs10.mode),SDR) | String.Contains(Player.Process(amlogic.vs10.mode),HDR10) | String.Contains(Player.Process(amlogic.vs10.mode),Dolby Vision)</param>
                <param name="texture">codecs/VS10.png</param>
                <param name="colordiffuse">AB16A34A</param>
            </include>
        </control>
		
        <control type="group" id="3">
            <depth>DepthOSD+</depth>
            <visible>Skin.HasSetting(osd.usecenterCodecStartupLogos)</visible>
            <left>570</left>
            <animation type="WindowOpen" condition="!Skin.HasSetting(osd.useOneSecondCodecLogos) + !Skin.HasSetting(osd.useTwoSecondsCodecLogos) + !Skin.HasSetting(osd.useThreeSecondsCodecLogos) + !Skin.HasSetting(osd.useFourSecondsCodecLogos) + !Skin.HasSetting(osd.useFiveSecondsCodecLogos) + !Skin.HasSetting(osd.useSixSecondsCodecLogos) + !Skin.HasSetting(osd.useSevenSecondsCodecLogos) + !Skin.HasSetting(osd.useEightSecondsCodecLogos) + !Skin.HasSetting(osd.useNineSecondsCodecLogos) + !Skin.HasSetting(osd.useTenSecondsCodecLogos) + !Skin.HasSetting(osd.useElevenSecondsCodecLogos) + !Skin.HasSetting(osd.useTwelveSecondsCodecLogos) + !Skin.HasSetting(osd.useThirteenSecondsCodecLogos) + !Skin.HasSetting(osd.useFourteenSecondsCodecLogos) + !Skin.HasSetting(osd.useFifteenSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="7000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useOneSecondCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="3000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useTwoSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="4000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useThreeSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="5000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useFourSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="6000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useFiveSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="7000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useSixSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="8000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useSevenSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="9000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useEightSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="10000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useNineSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="11000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useTenSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="12000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useElevenSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="13000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useTwelveSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="14000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useThirteenSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="15000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useFourteenSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="16000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useFifteenSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="17000" time="500" tween="sine" />
            </animation>
			
            <include content="Video_Audio_Background_Flag">
                <param name="groupId">46</param>
                <param name="imageId">47</param>
                <param name="visible">!String.IsEmpty(Player.Process(video.source.hdr.type.raw)) + !String.IsEmpty(VideoPlayer.AudioCodec)</param>
                <param name="texture">common/corner.png</param>
                <param name="colordiffuse">80FFFFFF</param>
            </include>
			
            <include content="Video_Background_Flag">
                <param name="groupId">48</param>
                <param name="imageId">49</param>
                <param name="visible">!String.IsEmpty(Player.Process(video.source.hdr.type.raw)) + String.IsEmpty(VideoPlayer.AudioCodec)</param>
                <param name="texture">common/corner_small.png</param>
                <param name="colordiffuse">80FFFFFF</param>
            </include>
			
            <include content="Audio_Background_Flag">
                <param name="groupId">50</param>
                <param name="imageId">51</param>
                <param name="visible">String.IsEmpty(Player.Process(video.source.hdr.type.raw)) + !String.IsEmpty(VideoPlayer.AudioCodec)</param>
                <param name="texture">common/corner_small.png</param>
                <param name="colordiffuse">80FFFFFF</param>
            </include>
			
            <include content="SDR_Bypass_Flag">
                <param name="groupId">52</param>
                <param name="imageId">53</param>
                <param name="visible">String.IsEqual(Player.Process(video.source.hdr.type.raw), 0) + String.Contains(Player.Process(amlogic.vs10.mode),Bypass)</param>
                <param name="texture">codecs/SDR.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="HDR10_Bypass_Flag">
                <param name="groupId">54</param>
                <param name="imageId">55</param>
                <param name="visible">String.IsEqual(Player.Process(video.source.hdr.type.raw), 1) + String.Contains(Player.Process(amlogic.vs10.mode),Bypass)</param>
                <param name="texture">codecs/HDR10.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="HDR10Plus_Bypass_Flag">
                <param name="groupId">56</param>
                <param name="imageId">57</param>
                <param name="visible">String.IsEqual(Player.Process(video.source.hdr.type.raw), 2) + String.Contains(Player.Process(amlogic.vs10.mode),Bypass)</param>
                <param name="texture">codecs/HDR10Plus.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="DV_Bypass_Flag">
                <param name="groupId">58</param>
                <param name="imageId">59</param>
                <param name="visible">String.IsEqual(Player.Process(video.source.hdr.type.raw), 3) + String.Contains(Player.Process(amlogic.vs10.mode),Bypass)</param>
                <param name="texture">codecs/Dolby_Vision.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="HLG_Bypass_Flag">
                <param name="groupId">60</param>
                <param name="imageId">61</param>
                <param name="visible">String.IsEqual(Player.Process(video.source.hdr.type.raw), 4) + String.Contains(Player.Process(amlogic.vs10.mode),Bypass)</param>
                <param name="texture">codecs/HLG.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="VS10_SDR_Flag">
                <param name="groupId">62</param>
                <param name="imageId">63</param>
                <param name="visible">String.Contains(Player.Process(amlogic.vs10.mode),SDR)</param>
                <param name="texture">codecs/SDR.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="VS10_HDR10_Flag">
                <param name="groupId">64</param>
                <param name="imageId">65</param>
                <param name="visible">String.Contains(Player.Process(amlogic.vs10.mode),HDR10)</param>
                <param name="texture">codecs/HDR10.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="VS10_HDR10Plus_Flag">
                <param name="groupId">66</param>
                <param name="imageId">67</param>
                <param name="visible">String.IsEqual(Player.Process(video.source.hdr.type.raw), 2) + !String.Contains(Player.Process(amlogic.vs10.mode),Dolby Vision) + !String.Contains(Player.Process(amlogic.vs10.mode),SDR) + !String.Contains(Player.Process(amlogic.vs10.mode),HLG)</param>
                <param name="texture">codecs/HDR10Plus.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="VS10_DV_Flag">
                <param name="groupId">68</param>
                <param name="imageId">69</param>
                <param name="visible">String.Contains(Player.Process(amlogic.vs10.mode),Dolby Vision)</param>
                <param name="texture">codecs/Dolby_Vision.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="VS10_HLG_Flag">
                <param name="groupId">70</param>
                <param name="imageId">71</param>
                <param name="visible">String.Contains(Player.Process(amlogic.vs10.mode),HLG)</param>
                <param name="texture">codecs/Dolby_Vision.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="Separation_Line_Flag">
                <param name="groupId">72</param>
                <param name="imageId">73</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,aac) | String.IsEqual(VideoPlayer.AudioCodec,aac_latm) | String.IsEqual(VideoPlayer.AudioCodec,ac3) | String.IsEqual(VideoPlayer.AudioCodec,dca) | String.IsEqual(VideoPlayer.AudioCodec,dolbydigital) | String.IsEqual(VideoPlayer.AudioCodec,dtshd) | String.IsEqual(VideoPlayer.AudioCodec,dtshd_ma) | String.IsEqual(VideoPlayer.AudioCodec,dtshd_hra) | String.IsEqual(VideoPlayer.AudioCodec,dtshd_ma_x) | String.IsEqual(VideoPlayer.AudioCodec,dtshd_ma_x_imax) | String.IsEqual(VideoPlayer.AudioCodec,eac3) | String.IsEqual(VideoPlayer.AudioCodec,eac3_ddp_atmos) | String.IsEqual(VideoPlayer.AudioCodec,mp3) | String.IsEqual(VideoPlayer.AudioCodec,mp3float) | String.IsEqual(VideoPlayer.AudioCodec,flac) | String.IsEqual(VideoPlayer.AudioCodec,opus) | String.IsEqual(VideoPlayer.AudioCodec,pcm) | String.IsEqual(VideoPlayer.AudioCodec,pcm_bluray) | String.IsEqual(VideoPlayer.AudioCodec,pcm_s16le) | String.IsEqual(VideoPlayer.AudioCodec,pcm_s24le) | String.IsEqual(VideoPlayer.AudioCodec,truehd) | String.IsEqual(VideoPlayer.AudioCodec,truehd_atmos)</param>
                <param name="texture">common/selectedwhite.png</param>
                <param name="colordiffuse">80FFFFFF</param>
            </include>
			
            <include content="PCM_Flag">
                <param name="groupId">74</param>
                <param name="imageId">75</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,pcm) | String.IsEqual(VideoPlayer.AudioCodec,pcm_bluray) | String.IsEqual(VideoPlayer.AudioCodec,pcm_s16le) | String.IsEqual(VideoPlayer.AudioCodec,pcm_s24le)</param>
                <param name="texture">codecs/PCM.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="AAC_Flag">
                <param name="groupId">76</param>
                <param name="imageId">77</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,aac) | String.IsEqual(VideoPlayer.AudioCodec,aac_latm)</param>
                <param name="texture">codecs/AAC.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="Dolby_Digital_Flag">
                <param name="groupId">78</param>
                <param name="imageId">79</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,dolbydigital) | String.IsEqual(VideoPlayer.AudioCodec,ac3)</param>
                <param name="texture">codecs/Dolby_Digital.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="Dolby_Digital_Plus_Flag">
                <param name="groupId">80</param>
                <param name="imageId">81</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,eac3)</param>
                <param name="texture">codecs/Dolby_Digital_Plus.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="Dolby_Atmos_Flag">
                <param name="groupId">82</param>
                <param name="imageId">83</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,truehd_atmos)</param>
                <param name="texture">codecs/Dolby_TrueHD_Atmos.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="Dolby_TrueHD_Flag">
                <param name="groupId">84</param>
                <param name="imageId">85</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,truehd)</param>
                <param name="texture">codecs/Dolby_TrueHD.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="Dolby_Atmos1_Flag">
                <param name="groupId">86</param>
                <param name="imageId">87</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,eac3_ddp_atmos)</param>
                <param name="texture">codecs/Dolby_Digital_Plus_Atmos.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="MP3_Flag">
                <param name="groupId">88</param>
                <param name="imageId">89</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,mp3) | String.IsEqual(VideoPlayer.AudioCodec,mp3float)</param>
                <param name="texture">codecs/MP3.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="DTS_Flag">
                <param name="groupId">90</param>
                <param name="imageId">91</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,dca)</param>
                <param name="texture">codecs/DTS.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="DTS_HD_MA_Flag">
                <param name="groupId">92</param>
                <param name="imageId">93</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,dtshd_ma)</param>
                <param name="texture">codecs/DTS-HD-MA.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="DTS_HD_HRA_Flag">
                <param name="groupId">94</param>
                <param name="imageId">95</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,dtshd_hra)</param>
                <param name="texture">codecs/DTS-HD-HRA.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="DTS_X_Flag">
                <param name="groupId">96</param>
                <param name="imageId">97</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,dtshd_ma_x)</param>
                <param name="texture">codecs/DTSX.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="IMAX_Flag">
                <param name="groupId">98</param>
                <param name="imageId">99</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,dtshd_ma_x_imax)</param>
                <param name="texture">codecs/IMAX.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="FLAC_Flag">
                <param name="groupId">100</param>
                <param name="imageId">101</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,flac)</param>
                <param name="texture">codecs/FLAC.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="OPUS_Flag">
                <param name="groupId">102</param>
                <param name="imageId">103</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,opus)</param>
                <param name="texture">codecs/OPUS.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="VS10_Indicator_Flag">
                <param name="groupId">104</param>
                <param name="imageId">105</param>
                <param name="visible">String.Contains(Player.Process(amlogic.vs10.mode),SDR) | String.Contains(Player.Process(amlogic.vs10.mode),HDR10) | String.Contains(Player.Process(amlogic.vs10.mode),Dolby Vision)</param>
                <param name="texture">codecs/VS10.png</param>
                <param name="colordiffuse">AB16A34A</param>
            </include>
        </control>
		
        <control type="group" id="4">
            <depth>DepthOSD+</depth>
            <visible>Skin.HasSetting(osd.userightCodecStartupLogos)</visible>
            <left>1117</left>
            <animation type="WindowOpen" condition="!Skin.HasSetting(osd.useOneSecondCodecLogos) + !Skin.HasSetting(osd.useTwoSecondsCodecLogos) + !Skin.HasSetting(osd.useThreeSecondsCodecLogos) + !Skin.HasSetting(osd.useFourSecondsCodecLogos) + !Skin.HasSetting(osd.useFiveSecondsCodecLogos) + !Skin.HasSetting(osd.useSixSecondsCodecLogos) + !Skin.HasSetting(osd.useSevenSecondsCodecLogos) + !Skin.HasSetting(osd.useEightSecondsCodecLogos) + !Skin.HasSetting(osd.useNineSecondsCodecLogos) + !Skin.HasSetting(osd.useTenSecondsCodecLogos) + !Skin.HasSetting(osd.useElevenSecondsCodecLogos) + !Skin.HasSetting(osd.useTwelveSecondsCodecLogos) + !Skin.HasSetting(osd.useThirteenSecondsCodecLogos) + !Skin.HasSetting(osd.useFourteenSecondsCodecLogos) + !Skin.HasSetting(osd.useFifteenSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="7000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useOneSecondCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="3000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useTwoSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="4000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useThreeSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="5000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useFourSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="6000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useFiveSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="7000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useSixSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="8000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useSevenSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="9000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useEightSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="10000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useNineSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="11000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useTenSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="12000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useElevenSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="13000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useTwelveSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="14000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useThirteenSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="15000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useFourteenSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="16000" time="500" tween="sine" />
            </animation>
            <animation type="WindowOpen" condition="Skin.HasSetting(osd.useFifteenSecondsCodecLogos)">
                <effect type="fade" start="0" end="100" time="300" />
                <effect type="fade" start="100" end="0" delay="17000" time="500" tween="sine" />
            </animation>
			
            <include content="Video_Audio_Background_Flag">
                <param name="groupId">46</param>
                <param name="imageId">47</param>
                <param name="visible">!String.IsEmpty(Player.Process(video.source.hdr.type.raw)) + !String.IsEmpty(VideoPlayer.AudioCodec)</param>
                <param name="texture">common/corner.png</param>
                <param name="colordiffuse">80FFFFFF</param>
            </include>
			
            <include content="Video_Background_Flag">
                <param name="groupId">48</param>
                <param name="imageId">49</param>
                <param name="visible">!String.IsEmpty(Player.Process(video.source.hdr.type.raw)) + String.IsEmpty(VideoPlayer.AudioCodec)</param>
                <param name="texture">common/corner_small.png</param>
                <param name="colordiffuse">80FFFFFF</param>
            </include>
			
            <include content="Audio_Background_Flag">
                <param name="groupId">50</param>
                <param name="imageId">51</param>
                <param name="visible">String.IsEmpty(Player.Process(video.source.hdr.type.raw)) + !String.IsEmpty(VideoPlayer.AudioCodec)</param>
                <param name="texture">common/corner_small.png</param>
                <param name="colordiffuse">80FFFFFF</param>
            </include>
			
            <include content="SDR_Bypass_Flag">
                <param name="groupId">52</param>
                <param name="imageId">53</param>
                <param name="visible">String.IsEqual(Player.Process(video.source.hdr.type.raw), 0) + String.Contains(Player.Process(amlogic.vs10.mode),Bypass)</param>
                <param name="texture">codecs/SDR.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="HDR10_Bypass_Flag">
                <param name="groupId">54</param>
                <param name="imageId">55</param>
                <param name="visible">String.IsEqual(Player.Process(video.source.hdr.type.raw), 1) + String.Contains(Player.Process(amlogic.vs10.mode),Bypass)</param>
                <param name="texture">codecs/HDR10.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="HDR10Plus_Bypass_Flag">
                <param name="groupId">56</param>
                <param name="imageId">57</param>
                <param name="visible">String.IsEqual(Player.Process(video.source.hdr.type.raw), 2) + String.Contains(Player.Process(amlogic.vs10.mode),Bypass)</param>
                <param name="texture">codecs/HDR10Plus.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="DV_Bypass_Flag">
                <param name="groupId">58</param>
                <param name="imageId">59</param>
                <param name="visible">String.IsEqual(Player.Process(video.source.hdr.type.raw), 3) + String.Contains(Player.Process(amlogic.vs10.mode),Bypass)</param>
                <param name="texture">codecs/Dolby_Vision.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="HLG_Bypass_Flag">
                <param name="groupId">60</param>
                <param name="imageId">61</param>
                <param name="visible">String.IsEqual(Player.Process(video.source.hdr.type.raw), 4) + String.Contains(Player.Process(amlogic.vs10.mode),Bypass)</param>
                <param name="texture">codecs/HLG.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="VS10_SDR_Flag">
                <param name="groupId">62</param>
                <param name="imageId">63</param>
                <param name="visible">String.Contains(Player.Process(amlogic.vs10.mode),SDR)</param>
                <param name="texture">codecs/SDR.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="VS10_HDR10_Flag">
                <param name="groupId">64</param>
                <param name="imageId">65</param>
                <param name="visible">String.Contains(Player.Process(amlogic.vs10.mode),HDR10)</param>
                <param name="texture">codecs/HDR10.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="VS10_HDR10Plus_Flag">
                <param name="groupId">66</param>
                <param name="imageId">67</param>
                <param name="visible">String.IsEqual(Player.Process(video.source.hdr.type.raw), 2) + !String.Contains(Player.Process(amlogic.vs10.mode),Dolby Vision) + !String.Contains(Player.Process(amlogic.vs10.mode),SDR) + !String.Contains(Player.Process(amlogic.vs10.mode),HLG)</param>
                <param name="texture">codecs/HDR10Plus.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="VS10_DV_Flag">
                <param name="groupId">68</param>
                <param name="imageId">69</param>
                <param name="visible">String.Contains(Player.Process(amlogic.vs10.mode),Dolby Vision)</param>
                <param name="texture">codecs/Dolby_Vision.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="VS10_HLG_Flag">
                <param name="groupId">70</param>
                <param name="imageId">71</param>
                <param name="visible">String.Contains(Player.Process(amlogic.vs10.mode),HLG)</param>
                <param name="texture">codecs/Dolby_Vision.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="Separation_Line_Flag">
                <param name="groupId">72</param>
                <param name="imageId">73</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,aac) | String.IsEqual(VideoPlayer.AudioCodec,aac_latm) | String.IsEqual(VideoPlayer.AudioCodec,ac3) | String.IsEqual(VideoPlayer.AudioCodec,dca) | String.IsEqual(VideoPlayer.AudioCodec,dolbydigital) | String.IsEqual(VideoPlayer.AudioCodec,dtshd) | String.IsEqual(VideoPlayer.AudioCodec,dtshd_ma) | String.IsEqual(VideoPlayer.AudioCodec,dtshd_hra) | String.IsEqual(VideoPlayer.AudioCodec,dtshd_ma_x) | String.IsEqual(VideoPlayer.AudioCodec,dtshd_ma_x_imax) | String.IsEqual(VideoPlayer.AudioCodec,eac3) | String.IsEqual(VideoPlayer.AudioCodec,eac3_ddp_atmos) | String.IsEqual(VideoPlayer.AudioCodec,mp3) | String.IsEqual(VideoPlayer.AudioCodec,mp3float) | String.IsEqual(VideoPlayer.AudioCodec,flac) | String.IsEqual(VideoPlayer.AudioCodec,opus) | String.IsEqual(VideoPlayer.AudioCodec,pcm) | String.IsEqual(VideoPlayer.AudioCodec,pcm_bluray) | String.IsEqual(VideoPlayer.AudioCodec,pcm_s16le) | String.IsEqual(VideoPlayer.AudioCodec,pcm_s24le) | String.IsEqual(VideoPlayer.AudioCodec,truehd) | String.IsEqual(VideoPlayer.AudioCodec,truehd_atmos)</param>
                <param name="texture">common/selectedwhite.png</param>
                <param name="colordiffuse">80FFFFFF</param>
            </include>
			
            <include content="PCM_Flag">
                <param name="groupId">74</param>
                <param name="imageId">75</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,pcm) | String.IsEqual(VideoPlayer.AudioCodec,pcm_bluray) | String.IsEqual(VideoPlayer.AudioCodec,pcm_s16le) | String.IsEqual(VideoPlayer.AudioCodec,pcm_s24le)</param>
                <param name="texture">codecs/PCM.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="AAC_Flag">
                <param name="groupId">76</param>
                <param name="imageId">77</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,aac) | String.IsEqual(VideoPlayer.AudioCodec,aac_latm)</param>
                <param name="texture">codecs/AAC.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="Dolby_Digital_Flag">
                <param name="groupId">78</param>
                <param name="imageId">79</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,dolbydigital) | String.IsEqual(VideoPlayer.AudioCodec,ac3)</param>
                <param name="texture">codecs/Dolby_Digital.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="Dolby_Digital_Plus_Flag">
                <param name="groupId">80</param>
                <param name="imageId">81</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,eac3)</param>
                <param name="texture">codecs/Dolby_Digital_Plus.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="Dolby_Atmos_Flag">
                <param name="groupId">82</param>
                <param name="imageId">83</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,truehd_atmos)</param>
                <param name="texture">codecs/Dolby_TrueHD_Atmos.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="Dolby_TrueHD_Flag">
                <param name="groupId">84</param>
                <param name="imageId">85</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,truehd)</param>
                <param name="texture">codecs/Dolby_TrueHD.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="Dolby_Atmos1_Flag">
                <param name="groupId">86</param>
                <param name="imageId">87</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,eac3_ddp_atmos)</param>
                <param name="texture">codecs/Dolby_Digital_Plus_Atmos.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="MP3_Flag">
                <param name="groupId">88</param>
                <param name="imageId">89</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,mp3) | String.IsEqual(VideoPlayer.AudioCodec,mp3float)</param>
                <param name="texture">codecs/MP3.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="DTS_Flag">
                <param name="groupId">90</param>
                <param name="imageId">91</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,dca)</param>
                <param name="texture">codecs/DTS.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="DTS_HD_MA_Flag">
                <param name="groupId">92</param>
                <param name="imageId">93</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,dtshd_ma)</param>
                <param name="texture">codecs/DTS-HD-MA.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="DTS_HD_HRA_Flag">
                <param name="groupId">94</param>
                <param name="imageId">95</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,dtshd_hra)</param>
                <param name="texture">codecs/DTS-HD-HRA.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="DTS_X_Flag">
                <param name="groupId">96</param>
                <param name="imageId">97</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,dtshd_ma_x)</param>
                <param name="texture">codecs/DTSX.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="IMAX_Flag">
                <param name="groupId">98</param>
                <param name="imageId">99</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,dtshd_ma_x_imax)</param>
                <param name="texture">codecs/IMAX.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="FLAC_Flag">
                <param name="groupId">100</param>
                <param name="imageId">101</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,flac)</param>
                <param name="texture">codecs/FLAC.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="OPUS_Flag">
                <param name="groupId">102</param>
                <param name="imageId">103</param>
                <param name="visible">String.IsEqual(VideoPlayer.AudioCodec,opus)</param>
                <param name="texture">codecs/OPUS.png</param>
                <param name="colordiffuse">dialog_fg_90</param>
            </include>
			
            <include content="VS10_Indicator_Flag">
                <param name="groupId">104</param>
                <param name="imageId">105</param>
                <param name="visible">String.Contains(Player.Process(amlogic.vs10.mode),SDR) | String.Contains(Player.Process(amlogic.vs10.mode),HDR10) | String.Contains(Player.Process(amlogic.vs10.mode),Dolby Vision)</param>
                <param name="texture">codecs/VS10.png</param>
                <param name="colordiffuse">AB16A34A</param>
            </include>
        </control>
	
		<control type="group" id="1">
			<depth>DepthOSD-</depth>
			<visible>[Window.IsActive(FullScreenVideo) | Window.IsActive(FullScreenGame)] + [Player.Paused | [Player.Caching + Integer.IsGreater(Player.CacheLevel,0)] | !String.IsEmpty(Player.SeekNumeric) | !String.IsEmpty(PVR.ChannelNumberInput)] + Skin.HasSetting(ShowFullscreenVideoPaused)</visible>
			<include>MediaViewOpenCloseAnim</include>
			
			<control type="image" id="1">
				<include>ScreenSize</include>
				<texture border="0,0,50,50">black.png</texture>
				<animation effect="fade" condition="true" end="55">Conditional</animation>
			</control>
			
			<control type="label" id="1">
				<top>250</top>
				<width>ScreenWidth</width>
				<font>PausedFont</font>
				<label>[B]$VAR[PausedLabels][/B]</label>
				<textcolor>white</textcolor>
				<align>center</align>
				<animation effect="fade" condition="true" end="50">Conditional</animation>
				<include>MediaInfoOpenCloseAnim</include>
				<visible>![Window.IsActive(subtitlesearch) | Window.IsActive(DialogSettings.xml) | Window.IsActive(VideoBookmarks) | Window.IsActive(PVROSDChannels) | Window.IsActive(GameOSD) | Window.IsVisible(pvrchannelguide)]</visible>
			</control>
		</control>
		
		<control type="group" id="1">
			<depth>DepthOSD</depth>
			<visible>[!String.IsEmpty(Player.SeekNumeric) | !String.IsEmpty(PVR.ChannelNumberInput)] + !Skin.HasSetting(ShowFullscreenVideoPaused)</visible>
			<visible>![Window.IsActive(subtitlesearch) | Window.IsActive(DialogSettings.xml) | Window.IsActive(VideoBookmarks) | Window.IsActive(PVROSDChannels) | Window.IsVisible(pvrchannelguide)]</visible>
			<include>DialogSliderOpenCloseAnim</include>
			
			<control type="image" id="1">
				<left>28</left>
				<top>-10</top>
				<width>1224</width>
				<height>60</height>
				<texture border="8">panels/panel.png</texture>
			</control>
			
			<control type="label" id="1">
				<description>Seek Label</description>
				<left>46</left>
				<top>10</top>
				<width>1132</width>
				<height>40</height>
				<font>MediaInfoFont2</font>
				<textcolor>MediaInfoItemColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$VAR[PausedLabels2]</label>
			</control>
		</control>
		
		<control type="group" id="1">
			<description>Video Info Panel</description>
			<depth>DepthOSD</depth>
			<left>28</left>
			<top>350</top>
			<visible>[Player.ShowInfo | [Skin.HasSetting(ShowInfoOnPause) + Player.Paused]] + ![Window.IsActive(OSDVideoSettings) | Window.IsActive(OSDAudioSettings) | Window.IsActive(OSDSubtitleSettings) | Window.IsActive(VideoBookmarks)
			| Window.IsVisible(PVROSDChannels) | Window.IsVisible(pvrchannelguide) | Window.IsActive(subtitlesearch) | Window.IsActive(osdcmssettings) | Window.IsActive(GameOSD)]</visible>
			<include>FSMediaInfoPanel</include>
			<include>FSMediaInfoOpenCloseAnim</include>
			
			<control type="image" id="1">
				<description>Cover</description>
				<left>4</left>
				<top>4</top>
				<width>185</width>
				<height>272</height>
				<texture diffuse="covers/list-info-poster-diffuse.png">$VAR[PosterImageOSD]</texture>
				<aspectratio aligny="center" align="center" scalediffuse="false">scale</aspectratio>
				<visible>VideoPlayer.Content(Movies) | VideoPlayer.Content(Episodes)</visible>
			</control>

			<control type="group" id="1">
				<visible>VideoPlayer.Content(Movies) | VideoPlayer.Content(Episodes)</visible>
				<left>207</left>
				<top>10</top>
				
				<control type="grouplist" id="1">
					<width>631</width>
					<height>60</height>
					<orientation>horizontal</orientation>
					<itemgap>10</itemgap>
					<usecontrolcoords>true</usecontrolcoords>
					<control type="label" id="1">
						<description>Title/Year</description>
						<width min="10" max="710">auto</width>
						<height>60</height>
						<font>FSInfoTitleFont</font>
						<textcolor>MediaInfoTitleColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>[UPPERCASE]$INFO[VideoPlayer.Title]$INFO[VideoPlayer.Year, (,)][/UPPERCASE]</label>
						<aligny>top</aligny>
						<scroll>true</scroll>
					</control>
					<control type="image" id="1">
						<description>Star Rating</description>
						<top>2</top>
						<width>100</width>
						<height>32</height>
						<texture>$VAR[PlayerStarRating]</texture>
						<aspectratio>keep</aspectratio>
						<include>StarRatingFadeAnim</include>
						<visible>![String.IsEmpty(VideoPlayer.Rating) + String.IsEmpty(VideoPlayer.UserRating)]</visible>
					</control>
				</control>

				<control type="label" id="1">
					<description>Genre</description>
					<top>30</top>
					<width>631</width>
					<height>26</height>
					<font>FSInfoFont</font>
					<textcolor>MediaInfoTitleColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>[UPPERCASE]$VAR[FSInfoLabel1][/UPPERCASE]</label>
					<aligny>center</aligny>
				</control>
				
				<control type="grouplist" id="1">
					<description>Time</description>
					<left>679</left>
					<width>320</width>
					<align>right</align>
					<orientation>horizontal</orientation>
					<itemgap>10</itemgap>
					<usecontrolcoords>true</usecontrolcoords>
					<control type="image" id="1">
						<top>6</top>
						<width>24</width>
						<height>24</height>
						<texture>pvr/status_timer_alt.png</texture>
						<aspectratio>keep</aspectratio>
					</control>
					<control type="label" id="1">
						<left>-6</left>
						<height>60</height>
						<width min="25" max="250">auto</width>
						<font>FSInfoTitleFont</font>
						<textcolor>BreadCrumbColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>[UPPERCASE]$INFO[System.Time][/UPPERCASE]</label>
						<aligny>top</aligny>
					</control>
				</control>
		
				<control type="grouplist" id="1">
					<description>Chapter / Next</description>
					<left>599</left>
					<top>30</top>
					<width>400</width>
					<align>right</align>
					<orientation>horizontal</orientation>
					<visible>Player.ChapterCount | !String.IsEmpty(VideoPlayer.offset(1).Title)</visible>
					<control type="label" id="1">
						<width min="10" max="110">auto</width>
						<height>26</height>
						<font>FSInfoFont2</font>
						<textcolor>MediaInfoItemColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>[UPPERCASE]$VAR[VideoFullscreenChapterNextLabel]:[/UPPERCASE]</label>
						<aligny>center</aligny>
					</control>
					<control type="label" id="1">
						<width min="10" max="400">auto</width>
						<height>26</height>
						<font>FSInfoFont2</font>
						<textcolor>MediaInfoItemColor2</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>[UPPERCASE]$VAR[VideoFullscreenChapterNextInfo][/UPPERCASE]</label>
						<aligny>center</aligny>
						<scroll>true</scroll>
					</control>
				</control>
				
				<control type="grouplist" id="1">
					<description>Media Info Labels</description>
					<top>66</top>
					<width>683</width>
					<orientation>horizontal</orientation>
					<control type="label" id="1">
						<width min="10" max="110">auto</width>
						<height>40</height>
						<font>MediaInfoFont</font>
						<textcolor>MediaInfoItemColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$LOCALIZE[20339]:</label>
						<aligny>center</aligny>
					</control>
					<control type="label" id="1">
						<width min="10" max="600">auto</width>
						<height>40</height>
						<font>MediaInfoFont</font>
						<textcolor>MediaInfoItemColor2</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label fallback="31001">$INFO[VideoPlayer.Director]</label>
						<aligny>center</aligny>
					</control>
				</control>

				<control type="textbox" id="1">
					<description>Plot</description>
					<top>107</top>
					<width>631</width>
					<height>98</height>
					<font>MediaInfoDescFont</font>
					<textcolor>MediaInfoColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>justify</align>
					<label fallback="31203">$INFO[VideoPlayer.Plot]</label>
					<wrapmultiline>true</wrapmultiline>
					<autoscroll time="2000" delay="6000" repeat="10000">true</autoscroll>
				</control>
			
				<control type="grouplist" id="1">
					<description>Media Flags Area</description>
					<top>218</top>
					<width>701</width>
					<height>35</height>
					<itemgap>5</itemgap>
					<align>left</align>
					<usecontrolcoords>true</usecontrolcoords>
					<orientation>horizontal</orientation>
					<include>MediaFlagFadeAnim</include>
					<include>PlayerVideoMediaFlags</include>
					<include>PlayerAudioMediaFlags</include>
					<include>PlayerAspectMediaFlags</include>
					<include>PlayerSubtitleAudioMediaFlags</include>
					<include condition="!Skin.HasSetting(HideRatingMediaFlag)">PlayerRatingMediaFlags</include>
				</control>
			</control>
			
			<control type="group" id="1">
				<visible>![VideoPlayer.Content(Movies) | VideoPlayer.Content(Episodes)]</visible>
				<left>18</left>
				<top>10</top>
				
				<control type="grouplist" id="1">
					<width>820</width>
					<height>60</height>
					<orientation>horizontal</orientation>
					<itemgap>10</itemgap>
					<usecontrolcoords>true</usecontrolcoords>
					<control type="label" id="1">
						<description>Title/Year</description>
						<width min="10" max="710">auto</width>
						<height>60</height>
						<font>FSInfoTitleFont</font>
						<textcolor>MediaInfoTitleColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>[UPPERCASE]$VAR[FSInfoTitle][/UPPERCASE]</label>
						<aligny>top</aligny>
						<scroll>true</scroll>
					</control>
					<control type="image" id="1">
						<description>Star Rating</description>
						<top>2</top>
						<width>100</width>
						<height>32</height>
						<texture>$VAR[PlayerStarRating]</texture>
						<aspectratio>keep</aspectratio>
						<include>StarRatingFadeAnim</include>
						<visible>![String.IsEmpty(VideoPlayer.Rating) + String.IsEmpty(VideoPlayer.UserRating)]</visible>
					</control>
				</control>

				<control type="label" id="1">
					<description>Genre</description>
					<top>30</top>
					<width>820</width>
					<height>26</height>
					<font>FSInfoFont</font>
					<textcolor>MediaInfoTitleColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>[UPPERCASE]$VAR[FSInfoLabel1][/UPPERCASE]</label>
					<aligny>center</aligny>
				</control>
				
				<control type="grouplist" id="1">
					<description>Time</description>
					<left>868</left>
					<width>320</width>
					<align>right</align>
					<orientation>horizontal</orientation>
					<itemgap>10</itemgap>
					<usecontrolcoords>true</usecontrolcoords>
					<control type="image" id="1">
						<top>6</top>
						<width>24</width>
						<height>24</height>
						<texture>pvr/status_timer_alt.png</texture>
						<aspectratio>keep</aspectratio>
					</control>
					<control type="label" id="1">
						<left>-6</left>
						<height>60</height>
						<width min="25" max="250">auto</width>
						<font>FSInfoTitleFont</font>
						<textcolor>BreadCrumbColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>[UPPERCASE]$INFO[System.Time][/UPPERCASE]</label>
						<aligny>top</aligny>
					</control>
				</control>
		
				<control type="grouplist" id="1">
					<description>Chapter</description>
					<left>788</left>
					<top>30</top>
					<width>400</width>
					<align>right</align>
					<orientation>horizontal</orientation>
					<visible>[Player.ChapterCount | !String.IsEmpty(VideoPlayer.offset(1).Title)] + !VideoPlayer.Content(LiveTV)</visible>
					<control type="label" id="1">
						<width min="10" max="110">auto</width>
						<height>26</height>
						<font>FSInfoFont2</font>
						<textcolor>MediaInfoItemColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>[UPPERCASE]$VAR[VideoFullscreenChapterNextLabel]:[/UPPERCASE]</label>
						<aligny>center</aligny>
					</control>
					<control type="label" id="1">
						<width min="10" max="400">auto</width>
						<height>26</height>
						<font>FSInfoFont2</font>
						<textcolor>MediaInfoItemColor2</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>[UPPERCASE]$VAR[VideoFullscreenChapterNextInfo][/UPPERCASE]</label>
						<aligny>center</aligny>
						<scroll>true</scroll>
					</control>
				</control>

				<control type="grouplist" id="1">
					<description>LiveTV NextTitle</description>
					<left>588</left>
					<top>30</top>
					<width>600</width>
					<align>right</align>
					<orientation>horizontal</orientation>
					<visible>VideoPlayer.Content(LiveTV)</visible>
					<control type="label" id="1">
						<width min="10" max="140">auto</width>
						<height>26</height>
						<font>FSInfoFont2</font>
						<textcolor>MediaInfoItemColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>[UPPERCASE]$LOCALIZE[209]:[/UPPERCASE]</label>
						<aligny>center</aligny>
					</control>
					<control type="label" id="1">
						<width min="10" max="460">auto</width>
						<height>26</height>
						<font>FSInfoFont2</font>
						<textcolor>MediaInfoItemColor2</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$INFO[VideoPlayer.NextTitle] ($INFO[VideoPlayer.NextStartTime]$INFO[VideoPlayer.NextEndTime, - ,])</label>
						<aligny>center</aligny>
						<scroll>true</scroll>
					</control>
				</control>
				
				<control type="grouplist" id="1">
					<description>Media Info Labels</description>
					<top>66</top>
					<width>820</width>
					<orientation>horizontal</orientation>
					<control type="label" id="1">
						<width min="10" max="110">auto</width>
						<height>40</height>
						<font>MediaInfoFont</font>
						<textcolor>MediaInfoItemColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$VAR[FSInfoLabel2]</label>
						<aligny>center</aligny>
					</control>
					<control type="label" id="1">
						<width min="10" max="320">auto</width>
						<height>40</height>
						<font>MediaInfoFont</font>
						<textcolor>MediaInfoItemColor2</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$VAR[FSInfoLabel2Val]</label>
						<aligny>center</aligny>
					</control>
					<control type="label" id="1">
						<width min="10" max="110">auto</width>
						<height>40</height>
						<font>MediaInfoFont</font>
						<textcolor>MediaInfoItemColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>     $VAR[FSInfoLabel3]</label>
						<aligny>center</aligny>
					</control>
					<control type="label" id="1">
						<width min="10" max="320">auto</width>
						<height>40</height>
						<font>MediaInfoFont</font>
						<textcolor>MediaInfoItemColor2</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$VAR[FSInfoLabel3Val]</label>
						<aligny>center</aligny>
					</control>
				</control>

				<control type="textbox" id="1">
					<description>Plot</description>
					<top>107</top>
					<width>820</width>
					<height>98</height>
					<font>MediaInfoDescFont</font>
					<textcolor>MediaInfoColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>justify</align>
					<label fallback="31203">$INFO[VideoPlayer.Plot]</label>
					<wrapmultiline>true</wrapmultiline>
					<autoscroll time="2000" delay="6000" repeat="10000">true</autoscroll>
				</control>
			
				<control type="grouplist" id="1">
					<description>Media Flags Area</description>
					<top>214</top>
					<width>890</width>
					<height>35</height>
					<itemgap>5</itemgap>
					<align>left</align>
					<usecontrolcoords>true</usecontrolcoords>
					<orientation>horizontal</orientation>
					<include>MediaFlagFadeAnim</include>
					<include>PlayerVideoMediaFlags</include>
					<include>PlayerAudioMediaFlags</include>
					<include>PlayerAspectMediaFlags</include>
					<include>PlayerSubtitleAudioMediaFlags</include>
					<include condition="!Skin.HasSetting(HideRatingMediaFlag)">PlayerRatingMediaFlags</include>
				</control>
				
				<control type="grouplist" id="1">
					<description>Live TV Data Labels</description>
					<top>267</top>
					<width>1192</width>
					<orientation>horizontal</orientation>
					<visible>VideoPlayer.Content(LiveTV)</visible>
					<control type="label" id="1">
						<width min="10" max="300">auto</width>
						<font>SubMenuArrowFont</font>
						<textcolor>MediaInfoItemColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$LOCALIZE[19210]: [COLOR=MediaInfoItemColor2]$INFO[Pvr.ActStreamClient][/COLOR]</label>
						<visible>!String.IsEmpty(Pvr.ActStreamClient)</visible>
					</control>
					<include condition="!String.IsEmpty(Pvr.ActStreamClient)">FullScreenInfoDot</include>
					<control type="label" id="1">
						<width min="10" max="300">auto</width>
						<font>SubMenuArrowFont</font>
						<textcolor>MediaInfoItemColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$LOCALIZE[19006]: [COLOR=MediaInfoItemColor2]$INFO[Pvr.ActStreamDevice][/COLOR]</label>
						<visible>!String.IsEmpty(Pvr.ActStreamDevice)</visible>
					</control>
					<include condition="!String.IsEmpty(Pvr.ActStreamDevice)">FullScreenInfoDot</include>
					<control type="label" id="1">
						<width min="10" max="300">auto</width>
						<font>SubMenuArrowFont</font>
						<textcolor>MediaInfoItemColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$LOCALIZE[19007]: [COLOR=MediaInfoItemColor2]$INFO[Pvr.ActStreamStatus][/COLOR]</label>
						<visible>!String.IsEmpty(Pvr.ActStreamStatus)</visible>
					</control>
					<include condition="!String.IsEmpty(Pvr.ActStreamStatus)">FullScreenInfoDot</include>
					<control type="label" id="1">
						<width min="10" max="300">auto</width>
						<font>SubMenuArrowFont</font>
						<textcolor>MediaInfoItemColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$LOCALIZE[19008]: [COLOR=MediaInfoItemColor2]$INFO[Pvr.ActStreamSignal][/COLOR]</label>
						<visible>!String.IsEmpty(Pvr.ActStreamSignal)</visible>
					</control>
					<include condition="!String.IsEmpty(Pvr.ActStreamSignal)">FullScreenInfoDot</include>
					<control type="label" id="1">
						<width min="10" max="300">auto</width>
						<font>SubMenuArrowFont</font>
						<textcolor>MediaInfoItemColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$LOCALIZE[19009]: [COLOR=MediaInfoItemColor2]$INFO[Pvr.ActStreamSnr][/COLOR]</label>
						<visible>!String.IsEmpty(Pvr.ActStreamSnr)</visible>
					</control>
					<include condition="!String.IsEmpty(Pvr.ActStreamSnr)">FullScreenInfoDot</include>
					<control type="label" id="1">
						<width min="10" max="300">auto</width>
						<font>SubMenuArrowFont</font>
						<textcolor>MediaInfoItemColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$LOCALIZE[19015]: [COLOR=MediaInfoItemColor2]$INFO[Pvr.ActStreamEncryptionName][/COLOR]</label>
						<visible>!String.IsEmpty(Pvr.ActStreamEncryptionName)</visible>
					</control>
				</control>
			</control>

			<control type="image" id="1">
				<description>Cover</description>
				<left>857</left>
				<top>90</top>
				<width>343</width>
				<height>169</height>
				<texture diffuse="covers/player-media-cover-diffuse.png">$VAR[ClearImageOSD]</texture>
				<aspectratio aligny="center" align="center">keep</aspectratio>
				<animation effect="slide" end="0,17" condition="Skin.HasSetting(ShowClearArtOSD) + [[VideoPlayer.Content(Episodes) + !String.IsEmpty(Player.Art(tvshow.clearart))] | [VideoPlayer.Content(Movies) + !String.IsEmpty(Player.Art(clearart))]]">Conditional</animation>
			</control>
		</control>
		
		<control type="group" id="0">
			<depth>DepthOSD</depth>
			
			<control type="image">
				<left>28</left>
				<top>-10</top>
				<width>1224</width>
				<height>190</height>
				<texture border="8">panels/panel.png</texture>
				<animation effect="slide" start="0,0" end="0,-110" time="0" condition="![Control.isVisible(11) + Control.IsVisible(12)]">Conditional</animation>
			</control>
			
			<control type="grouplist">
				<left>46</left>
				<top>10</top>
				<width>1132</width>
				<itemgap>10</itemgap>
				<control type="label" id="10">
					<description>Row 1</description>
					<width>1188</width>
					<height>40</height>
					<font>MediaInfoFont2</font>
					<textcolor>MediaInfoItemColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
				</control>
				<control type="label" id="11">
					<description>Row 2</description>
					<width>1188</width>
					<height>40</height>
					<font>MediaInfoFont2</font>
					<textcolor>MediaInfoItemColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
				</control>
				<control type="label" id="12">
					<description>Row 3</description>
					<width>1188</width>
					<height>60</height>
					<font>MediaInfoFont2</font>
					<textcolor>MediaInfoItemColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
				</control>
			</control>
		</control>
	</controls>
</window>
