<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include file="Defaults.xml"/>
	<include file="includes_Addons.xml"/>
	<include file="includes_Animations.xml"/>
	<include file="includes_Backgrounds.xml"/>
	<include file="includes_BreadCrumbs.xml"/>
	<include file="includes_Dialogs.xml"/>
	<include file="includes_DialogSelect.xml"/>
	<include file="includes_Fonts.xml"/>
	<include file="includes_Games.xml"/>
	<include file="includes_Home.xml"/>
	<include file="includes_HomeCustomWidgets.xml"/>
	<include file="includes_InfoPane.xml"/>
	<include file="includes_MediaFlags.xml"/>
	<include file="includes_MenuBar.xml"/>
	<include file="includes_PVR.xml"/>
	<include file="includes_Scrollbars.xml"/>
	<include file="includes_SkinSettingsBackgrounds.xml"/>
	<include file="includes_SkinSettingsGeneral.xml"/>
	<include file="includes_SkinSettingsHome.xml"/>
	<include file="includes_SkinSettingsMedia.xml"/>
	<include file="includes_SkinSettingsMenus.xml"/>
	<include file="includes_SkinSettingsViews.xml"/>
	<include file="includes_SkinSettingsWeather.xml"/>
	<include file="includes_StatusBar.xml"/>
	<include file="includes_VideoLyrics.xml"/>
	<include file="includes_Weather.xml"/>
	<include file="includes_CodecLogos.xml" />
	<include file="View_50_Icon.xml"/>
	<include file="View_52_List.xml"/>
	<include file="View_53_WrapListInfo.xml"/>
	<include file="View_54_DVDThumbs.xml"/>
	<include file="View_55_Fanart.xml"/>
	<include file="View_58_ListInfo.xml"/>
	<include file="View_59_ListInfo2.xml"/>
	<include file="View_60_ListInfo3.xml"/>
	<include file="View_63_AlbumThumbs.xml"/>
	<include file="View_65_ThumbsInfo.xml"/>
	<include file="View_69_Wall.xml"/>
	<include file="View_93_AddonsWrapListInfo.xml"/>
	<include file="View_530_VideosListInfo.xml"/>
	<include file="View_531_VideosListInfo2.xml"/>
	<include file="View_532_VideosThumbsInfo.xml"/>
	<include file="View_580_PlayList.xml"/>
	<include file="View_585_ExtendedList.xml"/>
	<include file="View_586_ExtendedList2.xml"/>
	<include file="View_588_3DWrap.xml"/>
	<include file="Views.xml"/>
	
	<constant name="ScreenWidth">1280</constant>
	<constant name="ScreenHeight">720</constant>
	<constant name="DialogHeadingOffsetX">40</constant>
	<constant name="DialogHeadingOffsetY">14</constant>
	<constant name="DialogMarginOffsetX">35</constant>
	<constant name="DialogMarginOffsetY">53</constant>
	<constant name="Dialog4MarginOffsetY">35</constant>
	<constant name="MenuBarHeight">37</constant>
	<constant name="MenuBarOffsetY">45</constant>
	<constant name="StatusBartop">0</constant>
	<constant name="BottomPaneOffsetY">655</constant>
	<constant name="BackgroundCrossfadeTime">600</constant>
	<constant name="IconCrossfadeTime">400</constant>
	<constant name="FanartCrossfadeTime">600</constant>
	<constant name="MediaFlagsCrossfadeTime">400</constant>
	<constant name="DepthDialog">0.50</constant>
	<constant name="DepthDialog+">0.54</constant>
	<constant name="DepthDialog-">0.46</constant>
	<constant name="DepthMax">0.54</constant>
	<constant name="DepthOSD">0.40</constant>
	<constant name="DepthOSD+">0.44</constant>
	<constant name="DepthOSD-">0.20</constant>
	<constant name="DepthContent">0</constant>
	<constant name="Depth3DWrapPosters">0.03</constant>
	<constant name="DepthContent+">0.06</constant>
	<constant name="DepthTopBar">0.11</constant>
	<constant name="DepthMenuBar">0.08</constant>
	<constant name="DepthHomeMenu">0.11</constant>
	<constant name="DepthHomeMenuCategoryFocus">0.15</constant>
	<constant name="DepthBackground">-0.80</constant>
	<expression name="SortMethods">String.IsEqual(Container.SortMethod,$LOCALIZE[515]) | String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[572]) | String.IsEqual(Container.SortMethod,$LOCALIZE[574]) | String.IsEqual(Container.SortMethod,$LOCALIZE[578])</expression>
	<expression name="AlbumsSongsArtists">Container.Content(Albums) | Container.Content(Songs) | Container.Content(Artists)</expression>
	<expression name="TVShowsSeasonsEpisodes">Container.Content(TVShows) | Container.Content(Seasons) | Container.Content(Episodes)</expression>
	<expression name="SetsGenresYearsActorsDirectorsStudiosCountriesTagsSeasonsArtistsAlbums">Container.Content(Sets) | Container.Content(Genres) | Container.Content(Years) | Container.Content(Actors) | Container.Content(Directors) | Container.Content(Studios) | Container.Content(Countries) | Container.Content(Tags) | Container.Content(Seasons) | Container.Content(Artists) | Container.Content(Albums)</expression>
	<expression name="AllInfoDialogs">Window.IsActive(DialogVideoInfo.xml) | Window.IsActive(DialogMusicInfo.xml) | Window.IsActive(DialogAddonInfo.xml) | Window.IsActive(DialogPVRInfo.xml)</expression>
	<expression name="EmbuaryInfoDialogs">Window.IsActive(script-embuary-person.xml) | Window.IsActive(script-embuary-video.xml)</expression>
	<expression name="HideTopBar">![System.IdleTime(3) + !Control.IsVisible(505) + Skin.HasSetting(HideTopBar) + !Control.HasFocus(555)]</expression>
	<expression name="UnwatchedEpisodes99-">!String.IsEqual(ListItem.Property(UnWatchedEpisodes),0) + Integer.IsLessOrEqual(ListItem.Property(UnWatchedEpisodes),99)</expression>
	<expression name="UnwatchedEpisodes99+">!String.IsEqual(ListItem.Property(UnWatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),99)</expression>
	<expression name="UnwatchedEpisodesOverlay">!String.IsEqual(ListItem.Property(UnWatchedEpisodes),0) + !String.IsEmpty(ListItem.Property(UnWatchedEpisodes))</expression>
	<expression name="AddonLifecycleType">String.IsEqual(ListItem.AddonLifecycleType,$LOCALIZE[24170]) | String.IsEqual(ListItem.AddonLifecycleType,$LOCALIZE[24171])</expression>
	<expression name="IsSplashScreenImage">String.EndsWith(Skin.String(SplashScreen),.jpg) | String.EndsWith(Skin.String(SplashScreen),.jpeg) | String.EndsWith(Skin.String(SplashScreen),.png) | String.EndsWith(Skin.String(SplashScreen),.tiff) | String.EndsWith(Skin.String(SplashScreen),.tif) | String.EndsWith(Skin.String(SplashScreen),.bmp) | String.EndsWith(Skin.String(SplashScreen),.gif) | String.EndsWith(Skin.String(SplashScreen),.png)</expression>
	
	<variable name="DurationVar">
		<value condition="ListItem.IsCollection + !String.IsEmpty(Window(home).Property(SkinHelper.ListItem.Runtime))">$VAR[SkinHelperDurationVar]</value>
		<value condition="Skin.HasSetting(UseAlternativeDuration)">$VAR[FormattedDurationVar]</value>
		<value>$INFO[ListItem.Duration(mins)]</value>
	</variable>
	
	<variable name="LongDurationVar">
		<value condition="ListItem.IsCollection + !String.IsEmpty(Window(home).Property(SkinHelper.ListItem.Runtime))">$VAR[SkinHelperLongDurationVar]</value>
		<value condition="Skin.HasSetting(UseAlternativeDuration)">$VAR[FormattedLongDurationVar]</value>
		<value>$INFO[ListItem.Duration(mins),, $LOCALIZE[12391]]</value>
	</variable>
	
	<variable name="Container901LongDurationVar">
		<value condition="Skin.HasSetting(UseAlternativeDuration)">$VAR[Container901FormattedLongDurationVar]</value>
		<value>$INFO[Container(901).ListItem.Duration(mins),, $LOCALIZE[12391]]</value>
	</variable>
	
	<variable name="FormattedDurationVar">
		<value condition="!String.IsEmpty(ListItem.Duration) + Integer.IsEqual(ListItem.Duration(mins),0)">$NUMBER[1]</value>
		<value condition="Integer.IsEqual(ListItem.Duration(mins),60)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[00]</value>
		<value condition="Integer.IsEqual(ListItem.Duration(h),0)">$INFO[ListItem.Duration(mins)]</value>
		<value>$INFO[ListItem.Duration(h)]$LOCALIZE[31403]$INFO[ListItem.Duration(mm)]</value>
	</variable>
	
	<variable name="FormattedLongDurationVar">
		<value condition="String.StartsWith(ListItem.Duration,01:00:) | Integer.IsEqual(ListItem.Duration(mins),60)">$NUMBER[1] $LOCALIZE[31159]</value>
		<value condition="String.StartsWith(ListItem.Duration,01:01:)">$NUMBER[1] $LOCALIZE[31159] $NUMBER[1] $LOCALIZE[31158]</value>
		<value condition="Integer.IsEqual(ListItem.Duration(h),1)">$NUMBER[1] $LOCALIZE[31159] $INFO[ListItem.Duration(m)] $LOCALIZE[12391]</value>
		<value condition="String.StartsWith(ListItem.Duration,02:00:)">$NUMBER[2] $LOCALIZE[12392]</value>
		<value condition="String.StartsWith(ListItem.Duration,02:01:)">$NUMBER[2] $LOCALIZE[12392] $NUMBER[1] $LOCALIZE[31158]</value>
		<value condition="Integer.IsEqual(ListItem.Duration(h),2)">$NUMBER[2] $LOCALIZE[12392] $INFO[ListItem.Duration(m)] $LOCALIZE[12391]</value>
		<value condition="String.StartsWith(ListItem.Duration,03:00:)">$NUMBER[3] $LOCALIZE[12392]</value>
		<value condition="String.StartsWith(ListItem.Duration,03:01:)">$NUMBER[3] $LOCALIZE[12392] $NUMBER[1] $LOCALIZE[31158]</value>
		<value condition="Integer.IsEqual(ListItem.Duration(h),3)">$NUMBER[3] $LOCALIZE[12392] $INFO[ListItem.Duration(m)] $LOCALIZE[12391]</value>
		<value condition="String.StartsWith(ListItem.Duration,04:00:)">$NUMBER[4] $LOCALIZE[12392]</value>
		<value condition="String.StartsWith(ListItem.Duration,04:01:)">$NUMBER[4] $LOCALIZE[12392] $NUMBER[1] $LOCALIZE[31158]</value>
		<value condition="Integer.IsEqual(ListItem.Duration(h),4)">$NUMBER[4] $LOCALIZE[12392] $INFO[ListItem.Duration(m)] $LOCALIZE[12391]</value>
		<value condition="String.StartsWith(ListItem.Duration,05:00:)">$NUMBER[5] $LOCALIZE[12392]</value>
		<value condition="String.StartsWith(ListItem.Duration,05:01:)">$NUMBER[5] $LOCALIZE[12392] $NUMBER[1] $LOCALIZE[31158]</value>
		<value condition="Integer.IsEqual(ListItem.Duration(h),5)">$NUMBER[5] $LOCALIZE[12392] $INFO[ListItem.Duration(m)] $LOCALIZE[12391]</value>
		<value condition="String.StartsWith(ListItem.Duration,06:00:)">$NUMBER[6] $LOCALIZE[12392]</value>
		<value condition="String.StartsWith(ListItem.Duration,06:01:)">$NUMBER[6] $LOCALIZE[12392] $NUMBER[1] $LOCALIZE[31158]</value>
		<value condition="Integer.IsEqual(ListItem.Duration(h),6)">$NUMBER[6] $LOCALIZE[12392] $INFO[ListItem.Duration(m)] $LOCALIZE[12391]</value>
		<value condition="Integer.IsEqual(ListItem.Duration(mins),0) | Integer.IsEqual(ListItem.Duration(mins),1)">1 $LOCALIZE[31158]</value>
		<value>$INFO[ListItem.Duration(mins)] $LOCALIZE[12391]</value>
	</variable>
	
	<variable name="Container901FormattedLongDurationVar">
		<value condition="String.StartsWith(Container(901).ListItem.Duration,01:00:) | Integer.IsEqual(Container(901).ListItem.Duration(mins),60)">$NUMBER[1] $LOCALIZE[31159]</value>
		<value condition="String.StartsWith(Container(901).ListItem.Duration,01:01:)">$NUMBER[1] $LOCALIZE[31159] $NUMBER[1] $LOCALIZE[31158]</value>
		<value condition="Integer.IsEqual(Container(901).ListItem.Duration(h),1)">$NUMBER[1] $LOCALIZE[31159] $INFO[ListItem.Duration(m)] $LOCALIZE[12391]</value>
		<value condition="String.StartsWith(Container(901).ListItem.Duration,02:00:)">$NUMBER[2] $LOCALIZE[12392]</value>
		<value condition="String.StartsWith(Container(901).ListItem.Duration,02:01:)">$NUMBER[2] $LOCALIZE[12392] $NUMBER[1] $LOCALIZE[31158]</value>
		<value condition="Integer.IsEqual(Container(901).ListItem.Duration(h),2)">$NUMBER[2] $LOCALIZE[12392] $INFO[ListItem.Duration(m)] $LOCALIZE[12391]</value>
		<value condition="String.StartsWith(Container(901).ListItem.Duration,03:00:)">$NUMBER[3] $LOCALIZE[12392]</value>
		<value condition="String.StartsWith(Container(901).ListItem.Duration,03:01:)">$NUMBER[3] $LOCALIZE[12392] $NUMBER[1] $LOCALIZE[31158]</value>
		<value condition="Integer.IsEqual(Container(901).ListItem.Duration(h),3)">$NUMBER[3] $LOCALIZE[12392] $INFO[ListItem.Duration(m)] $LOCALIZE[12391]</value>
		<value condition="String.StartsWith(Container(901).ListItem.Duration,04:00:)">$NUMBER[4] $LOCALIZE[12392]</value>
		<value condition="String.StartsWith(Container(901).ListItem.Duration,04:01:)">$NUMBER[4] $LOCALIZE[12392] $NUMBER[1] $LOCALIZE[31158]</value>
		<value condition="Integer.IsEqual(Container(901).ListItem.Duration(h),4)">$NUMBER[4] $LOCALIZE[12392] $INFO[ListItem.Duration(m)] $LOCALIZE[12391]</value>
		<value condition="String.StartsWith(Container(901).ListItem.Duration,05:00:)">$NUMBER[5] $LOCALIZE[12392]</value>
		<value condition="String.StartsWith(Container(901).ListItem.Duration,05:01:)">$NUMBER[5] $LOCALIZE[12392] $NUMBER[1] $LOCALIZE[31158]</value>
		<value condition="Integer.IsEqual(Container(901).ListItem.Duration(h),5)">$NUMBER[5] $LOCALIZE[12392] $INFO[ListItem.Duration(m)] $LOCALIZE[12391]</value>
		<value condition="String.StartsWith(Container(901).ListItem.Duration,06:00:)">$NUMBER[6] $LOCALIZE[12392]</value>
		<value condition="String.StartsWith(Container(901).ListItem.Duration,06:01:)">$NUMBER[6] $LOCALIZE[12392] $NUMBER[1] $LOCALIZE[31158]</value>
		<value condition="Integer.IsEqual(Container(901).ListItem.Duration(h),6)">$NUMBER[6] $LOCALIZE[12392] $INFO[ListItem.Duration(m)] $LOCALIZE[12391]</value>
		<value condition="Integer.IsEqual(Container(901).ListItem.Duration(mins),0) | Integer.IsEqual(Container(901).ListItem.Duration(mins),1)">1 $LOCALIZE[31158]</value>
		<value>$INFO[ListItem.Duration(mins)] $LOCALIZE[12391]</value>
	</variable>
	
	<variable name="Container592DurationVar">
		<value condition="Skin.HasSetting(UseAlternativeDuration)">$VAR[Container592FormattedDurationVar]</value>
		<value>$INFO[Container(592).ListItem.Duration(mins)]</value>
	</variable>
	
	<variable name="Container592FormattedDurationVar">
		<value condition="!String.IsEmpty(Container(592).ListItem.Duration) + Integer.IsEqual(Container(592).ListItem.Duration(mins),0)">$NUMBER[1]</value>
		<value condition="Integer.IsEqual(Container(592).ListItem.Duration(mins),60)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[00]</value>
		<value condition="Integer.IsEqual(Container(592).ListItem.Duration(h),0)">$INFO[Container(592).ListItem.Duration(mins)]</value>
		<value>$INFO[Container(592).ListItem.Duration(h)]$LOCALIZE[31403]$INFO[Container(592).ListItem.Duration(mm)]</value>
	</variable>
	
	<variable name="MusicDurationVar">
		<value condition="Skin.HasSetting(UseAlternativeDuration)">$VAR[MusicFormattedDurationVar]</value>
		<value>$INFO[ListItem.Duration]</value>
	</variable>
	
	<variable name="MusicLongDurationVar">
		<value condition="Skin.HasSetting(UseAlternativeDuration)">$VAR[MusicFormattedLongDurationVar]</value>
		<value>$INFO[ListItem.Duration(mins),, $LOCALIZE[12391]]$VAR[SecondsVar, ,]</value>
	</variable>
	
	<variable name="MusicFormattedDurationVar">
		<value condition="!String.IsEmpty(ListItem.Duration) + Integer.IsEqual(ListItem.Duration(mins),0)">$NUMBER[1]$LOCALIZE[31399]$INFO[ListItem.Duration(ss)]</value>
		<value condition="Integer.IsEqual(ListItem.Duration(mins),60)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[00]$LOCALIZE[31399]$INFO[ListItem.Duration(ss)]</value>
		<value condition="Integer.IsEqual(ListItem.Duration(h),0)">$INFO[ListItem.Duration(mins)]$LOCALIZE[31399]$INFO[ListItem.Duration(ss)]</value>
		<value>$INFO[ListItem.Duration(h)]$LOCALIZE[31403]$INFO[ListItem.Duration(mm)]$LOCALIZE[31399]$INFO[ListItem.Duration(ss)]</value>
	</variable>
	
	<variable name="MusicFormattedLongDurationVar">
		<value condition="String.StartsWith(ListItem.Duration,01:00:) | Integer.IsEqual(ListItem.Duration(mins),60)">$NUMBER[1] $LOCALIZE[31159]</value>
		<value condition="String.StartsWith(ListItem.Duration,01:01:)">$NUMBER[1] $LOCALIZE[31159] $NUMBER[1] $LOCALIZE[31158]</value>
		<value condition="Integer.IsEqual(ListItem.Duration(h),1)">$NUMBER[1] $LOCALIZE[31159] $INFO[ListItem.Duration(m)] $LOCALIZE[12391]</value>
		<value condition="String.StartsWith(ListItem.Duration,02:00:)">$NUMBER[2] $LOCALIZE[12392]</value>
		<value condition="String.StartsWith(ListItem.Duration,02:01:)">$NUMBER[2] $LOCALIZE[12392] $NUMBER[1] $LOCALIZE[31158]</value>
		<value condition="Integer.IsEqual(ListItem.Duration(h),2)">$NUMBER[2] $LOCALIZE[12392] $INFO[ListItem.Duration(m)] $LOCALIZE[12391]</value>
		<value condition="String.StartsWith(ListItem.Duration,03:00:)">$NUMBER[3] $LOCALIZE[12392]</value>
		<value condition="String.StartsWith(ListItem.Duration,03:01:)">$NUMBER[3] $LOCALIZE[12392] $NUMBER[1] $LOCALIZE[31158]</value>
		<value condition="Integer.IsEqual(ListItem.Duration(h),3)">$NUMBER[3] $LOCALIZE[12392] $INFO[ListItem.Duration(m)] $LOCALIZE[12391]</value>
		<value condition="String.StartsWith(ListItem.Duration,04:00:)">$NUMBER[4] $LOCALIZE[12392]</value>
		<value condition="String.StartsWith(ListItem.Duration,04:01:)">$NUMBER[4] $LOCALIZE[12392] $NUMBER[1] $LOCALIZE[31158]</value>
		<value condition="Integer.IsEqual(ListItem.Duration(h),4)">$NUMBER[4] $LOCALIZE[12392] $INFO[ListItem.Duration(m)] $LOCALIZE[12391]</value>
		<value condition="String.StartsWith(ListItem.Duration,05:00:)">$NUMBER[5] $LOCALIZE[12392]</value>
		<value condition="String.StartsWith(ListItem.Duration,05:01:)">$NUMBER[5] $LOCALIZE[12392] $NUMBER[1] $LOCALIZE[31158]</value>
		<value condition="Integer.IsEqual(ListItem.Duration(h),5)">$NUMBER[5] $LOCALIZE[12392] $INFO[ListItem.Duration(m)] $LOCALIZE[12391]</value>
		<value condition="String.StartsWith(ListItem.Duration,06:00:)">$NUMBER[6] $LOCALIZE[12392]</value>
		<value condition="String.StartsWith(ListItem.Duration,06:01:)">$NUMBER[6] $LOCALIZE[12392] $NUMBER[1] $LOCALIZE[31158]</value>
		<value condition="Integer.IsEqual(ListItem.Duration(h),6)">$NUMBER[6] $LOCALIZE[12392] $INFO[ListItem.Duration(m)] $LOCALIZE[12391]</value>
		<value condition="Integer.IsEqual(ListItem.Duration(mins),0) | Integer.IsEqual(ListItem.Duration(mins),1)">1 $LOCALIZE[31158] $VAR[SecondsVar]</value>
		<value>$INFO[ListItem.Duration(mins)] $LOCALIZE[12391] $VAR[SecondsVar]</value>
	</variable>
	
	<variable name="SecondsVar">
		<value condition="String.EndsWith(ListItem.Duration,:01)">$NUMBER[1] $LOCALIZE[31990]</value>
		<value>$INFO[ListItem.Duration(ss)] $LOCALIZE[31992]</value>
	</variable>
	
	<variable name="Container591MusicDurationVar">
		<value condition="Skin.HasSetting(UseAlternativeDuration)">$VAR[Container591MusicFormattedDurationVar]</value>
		<value>$INFO[Container(591).ListItem.Duration]</value>
	</variable>
	
	<variable name="Container591MusicFormattedDurationVar">
		<value condition="!String.IsEmpty(Container(591).ListItem.Duration) + Integer.IsEqual(Container(591).ListItem.Duration(mins),0)">$NUMBER[1]$LOCALIZE[31399]$INFO[Container(591).ListItem.Duration(ss)]</value>
		<value condition="Integer.IsEqual(Container(591).ListItem.Duration(mins),60)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[00]$LOCALIZE[31399]$INFO[Container(591).ListItem.Duration(ss)]</value>
		<value condition="Integer.IsEqual(Container(591).ListItem.Duration(h),0)">$INFO[Container(591).ListItem.Duration(mins)]$LOCALIZE[31399]$INFO[Container(591).ListItem.Duration(ss)]</value>
		<value>$INFO[Container(591).ListItem.Duration(h)]$LOCALIZE[31403]$INFO[Container(591).ListItem.Duration(mm)]$LOCALIZE[31399]$INFO[Container(591).ListItem.Duration(ss)]</value>
	</variable>
	
	<variable name="SeasonEpisodesNumberVar">
		<value condition="Integer.IsEqual(ListItem.Season,0) + Integer.IsGreater(ListItem.Episode,9) + !String.IsEmpty(ListItem.Episode)">$LOCALIZE[31213] $INFO[ListItem.Episode,E,]</value>
		<value condition="Integer.IsEqual(ListItem.Season,0) + !Integer.IsGreater(ListItem.Episode,9) + !String.IsEmpty(ListItem.Episode)">$LOCALIZE[31213] $INFO[ListItem.Episode,E0,]</value>
		<value condition="Integer.IsLessOrEqual(ListItem.Season,9) + Integer.IsLessOrEqual(ListItem.Episode,9)">$INFO[ListItem.Season,S0,]$INFO[ListItem.Episode,E0,]</value> 
		<value condition="Integer.IsLessOrEqual(ListItem.Season,9)">$INFO[ListItem.Season,S0,]$INFO[ListItem.Episode,E,]</value> 
		<value condition="Integer.IsLessOrEqual(ListItem.Episode,9)">$INFO[ListItem.Season,S,]$INFO[ListItem.Episode,E0,]</value> 
		<value>$INFO[ListItem.Season,S,]$INFO[ListItem.Episode,E,]</value>
	</variable>
	
	<variable name="RatingType">
		<value condition="Skin.HasSetting(RatingTypeUser) + ![ListItem.IsCollection + String.IsEmpty(ListItem.UserRating)]">$INFO[ListItem.UserRating]</value>
		<value>$INFO[ListItem.Rating]</value>
	</variable>
	
	<variable name="MusicYearVar">
		<value condition="!String.IsEmpty(ListItem.ReleaseDate)">$INFO[ListItem.ReleaseDate]</value>
		<value condition="!String.IsEmpty(ListItem.OriginalDate) + !String.IsEqual(ListItem.ReleaseDate, ListItem.OriginalDate)">$INFO[ListItem.OriginalDate]</value>
		<value>$INFO[ListItem.Year]</value>
	</variable>
	
	<variable name="ShutDownButton">
		<value condition="System.HasAlarm(ShutdownTimer)">$LOCALIZE[20151]</value>
		<value condition="!System.HasAlarm(ShutdownTimer)">$LOCALIZE[20150]</value>
	</variable>
	
	<variable name="MusicClearlogoVar">
		<value condition="!String.IsEmpty(ListItem.Art(artist.clearlogo))">$INFO[ListItem.Art(artist.clearlogo)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
		<value>$INFO[Skin.String(MusicLibraryClearLogosPath)]$INFO[ListItem.Artist,,/logo.png]</value>
	</variable>
	
	<variable name="ContextMenuLabel2001">
        <value condition="Container.Content(Artists) + Window.IsVisible(Music)">$LOCALIZE[31397]</value>
        <value condition="Container.Content(Actors)">$LOCALIZE[31035]</value>
        <value condition="Container.Content(Directors)">$LOCALIZE[31036]</value>
        <value>$LOCALIZE[21891]</value>
    </variable>
	
	<variable name="SettingsMenubarDescription">
		<value condition="Control.HasFocus(101)">$LOCALIZE[31136]</value>
		<value condition="Control.HasFocus(104)">$LOCALIZE[31959]</value>
		<value condition="Control.HasFocus(105)">$LOCALIZE[31140]</value>
		<value condition="Control.HasFocus(110)">$LOCALIZE[31141]</value>
		<value condition="Control.HasFocus(103)">$LOCALIZE[31954]</value>
		<value condition="Control.HasFocus(106)">$LOCALIZE[31139]</value>
		<value condition="Control.HasFocus(107)">$LOCALIZE[31137]</value>
		<value condition="Control.HasFocus(108)">$LOCALIZE[31138]</value>
		<value condition="Control.HasFocus(109)">$LOCALIZE[31143]</value>
		
	</variable>
	
	<variable name="SkinSettingsAddonsDescription">
		<value condition="Control.HasFocus(7002)">$LOCALIZE[31439]</value>
		<value condition="Control.HasFocus(7003)">$LOCALIZE[31440]</value>
		<value condition="Control.HasFocus(7004)">&#x5b;$LOCALIZE[31462]&#x5d;</value>
		<value condition="Control.HasFocus(7005)">$LOCALIZE[31441]</value>
		<value condition="Control.HasFocus(7006)">&#x5b;$LOCALIZE[31462]&#x5d; $LOCALIZE[31442]</value>
		<value condition="Control.HasFocus(7007)">$LOCALIZE[31443]</value>
		<value condition="Control.HasFocus(7008)">$LOCALIZE[31450]</value>
		<value condition="Control.HasFocus(7009)">&#x5b;$LOCALIZE[31462]&#x5d; $LOCALIZE[31472]</value>
		<value condition="Control.HasFocus(7012)">$LOCALIZE[31447]</value>
		<value condition="Control.HasFocus(7015)">$LOCALIZE[31488]</value>
		<value condition="Control.HasFocus(7017)">$LOCALIZE[31487]</value>
		<value condition="Control.HasFocus(7022)">$LOCALIZE[31449]</value>
		<value condition="Control.HasFocus(7014)">$LOCALIZE[31451]</value>
		<value condition="Control.HasFocus(7026)">$LOCALIZE[31463]</value>
		<value condition="Control.HasFocus(7016)">$LOCALIZE[31453]</value>
		<value condition="Control.HasFocus(7023)">$LOCALIZE[31454]</value>
		<value condition="Control.HasFocus(7025)">$LOCALIZE[31455]</value>
		<value condition="Control.HasFocus(7018)">$LOCALIZE[31458]</value>
		<value condition="Control.HasFocus(7020)">$LOCALIZE[31461]</value>
		<value condition="Control.HasFocus(7021)">$LOCALIZE[31460]</value>
		<value condition="Control.HasFocus(7028)">$LOCALIZE[31464]</value>
		<value condition="Control.HasFocus(7029)">$LOCALIZE[31465]</value>
		<value condition="Control.HasFocus(7032)">$LOCALIZE[31471]</value>
	</variable>
	
	<variable name="DialogSelectLabel2">
		<value condition="!String.IsEmpty(ListItem.AddonVersion)">$INFO[ListItem.AddonVersion]</value>
		<value>$INFO[ListItem.Label2]</value>
	</variable>
	
	<variable name="ViewOptionsScrollbarLabel">
		<value condition="Skin.HasSetting(EnableQuickJump)">$LOCALIZE[31135]</value>
		<value>$LOCALIZE[31025]</value>
	</variable>
	
	<variable name="TrailerButtonLabelVar">
		<value condition="!String.IsEmpty(ListItem.Trailer)">$LOCALIZE[20410]</value>
		<value>$LOCALIZE[31019]</value>
	</variable>
	
	<include name="ScreenSize">
		<width>ScreenWidth</width>
		<height>ScreenHeight</height>
	</include>
	
	<include name="BackgroundSize">
		<width>ScreenWidth</width>
		<height>ScreenHeight</height>
	</include>
	
	<variable name="VideoDecoder">
		<value condition="Player.Process(videohwdecoder)">HW</value>
		<value>SW</value>
	</variable>
	
	<variable name="SubtitleVar">
		<value condition="String.IsEmpty(VideoPlayer.SubtitlesLanguage)">$INFO[VideoPlayer.SubtitlesLangEx]</value>
		<value condition="!String.IsEmpty(VideoPlayer.SubtitlesLanguage)">[UPPERCASE]$INFO[VideoPlayer.SubtitlesLanguage][/UPPERCASE]</value>
	</variable>
	
	<variable name="SubtitleNameVar">
		<value condition="String.IsEmpty(VideoPlayer.SubtitlesName)"></value>
		<value condition="!String.IsEmpty(VideoPlayer.SubtitlesName)">$INFO[VideoPlayer.SubtitlesName,| ,, (,)]</value>
	</variable>

	<variable name="OSDCodecLogosStartupLabel">
		<value condition="Skin.HasSetting(osd.useleftCodecStartupLogos)">$LOCALIZE[32057]</value>
		<value condition="Skin.HasSetting(osd.usecenterCodecStartupLogos)">$LOCALIZE[32058]</value>
		<value condition="Skin.HasSetting(osd.userightCodecStartupLogos)">$LOCALIZE[32059]</value>
		<value>$LOCALIZE[591]</value>
	</variable>

	<variable name="OSDCodecLogosLabel">
		<value condition="Skin.HasSetting(osd.useleftCodecLogos)">$LOCALIZE[32057]</value>
		<value condition="Skin.HasSetting(osd.usecenterCodecLogos)">$LOCALIZE[32058]</value>
		<value condition="Skin.HasSetting(osd.userightCodecLogos)">$LOCALIZE[32059]</value>
		<value>$LOCALIZE[591]</value>
	</variable>

	<variable name="PPICodecLogosLabel">
		<value condition="Skin.HasSetting(ppi.useleftCodecLogos)">$LOCALIZE[32057]</value>
		<value condition="Skin.HasSetting(ppi.usecenterCodecLogos)">$LOCALIZE[32058]</value>
		<value condition="Skin.HasSetting(ppi.userightCodecLogos)">$LOCALIZE[32059]</value>
		<value>$LOCALIZE[591]</value>
	</variable>

	<variable name="DVProfileVar">
		<value condition="String.Contains(Player.Process(video.source.hdr.type),HDR10) + String.Contains(Player.Process(video.dovi.profile),8)">-&gt; Dolby Vision Profile $INFO[Player.Process(video.dovi.profile)]$VAR[DVProfileExtVar]</value>
		<value condition="String.Contains(Player.Process(video.dovi.profile),4)">Profile $INFO[Player.Process(video.dovi.profile)]$VAR[DVProfileExtVar]</value>
		<value condition="String.Contains(Player.Process(video.dovi.profile),5)">Profile $INFO[Player.Process(video.dovi.profile)]$VAR[DVProfileExtVar]</value>
		<value condition="String.Contains(Player.Process(video.dovi.profile),7)">Profile $INFO[Player.Process(video.dovi.profile)]$VAR[DVProfileExtVar]</value>
		<value condition="String.Contains(Player.Process(video.dovi.profile),8)">Profile $INFO[Player.Process(video.dovi.profile)]$VAR[DVProfileExtVar]</value>
	</variable>

	<variable name="DVProfileExtVar">
		<value condition="Integer.IsEqual(Player.Process(video.dovi.bl.signal.compatibility),0)" />
		<value condition="Integer.IsEqual(Player.Process(video.dovi.bl.signal.compatibility),1)">.1</value>
		<value condition="Integer.IsEqual(Player.Process(video.dovi.bl.signal.compatibility),2)">.2</value>
		<value condition="Integer.IsEqual(Player.Process(video.dovi.bl.signal.compatibility),3)">.3</value>
		<value condition="Integer.IsEqual(Player.Process(video.dovi.bl.signal.compatibility),6)" />
		<value condition="Integer.IsEqual(Player.Process(video.dovi.bl.signal.compatibility),8)">.8</value>
	</variable>

	<variable name="DVELVar">
		<value condition="String.Contains(Player.Process(video.dovi.el.type),minimum)">[COLOR orange] MEL[/COLOR]</value>
		<value condition="String.Contains(Player.Process(video.dovi.el.type),full)">[COLOR lightgreen] FEL[/COLOR]</value>
		<value condition="String.IsEqual(Player.Process(video.dovi.el.type),none)" />
	</variable>

	<variable name="DVELVar1">
		<value condition="String.Contains(Player.Process(video.dovi.el.type),)">[COLOR red][/COLOR]</value>
	</variable>

	<variable name="RPUPresentVar">
		<value condition="String.IsEqual(Player.Process(video.dovi.rpu.present),1)">[COLOR lightgreen][/COLOR]</value>
		<value>[COLOR red][/COLOR]</value>
	</variable>

	<variable name="BLPresentVar">
		<value condition="String.IsEqual(Player.Process(video.dovi.bl.present),1)">[COLOR lightgreen][/COLOR]</value>
		<value>[COLOR red][/COLOR]</value>
	</variable>

	<variable name="ELPresentVar">
		<value condition="String.IsEqual(Player.Process(video.dovi.el.present),1)">[COLOR lightgreen][/COLOR]</value>
		<value>[COLOR red][/COLOR]</value>
	</variable>

	<variable name="ELSourcePresentVar">
		<value condition="String.IsEqual(Player.Process(video.source.dovi.el.present),1)">[COLOR 8016A34A][/COLOR]</value>
		<value>[COLOR 80FF0000][/COLOR]</value>
	</variable>

	<variable name="VideoResolutionLabelVar">
		<value condition="String.IsEqual(ListItem.VideoResolution,4K)">$INFO[ListItem.VideoResolution]</value>
		<value>$INFO[ListItem.VideoResolution,,p]</value>
	</variable>

	<variable name="HDRTypeLabelVar">
		<value condition="String.IsEqual(ListItem.HdrType,dolbyvision)">Dolby Vision</value>
		<value condition="!String.IsEmpty(ListItem.HdrType)">[UPPERCASE]$INFO[ListItem.HdrType][/UPPERCASE]</value>
	</variable>

	<variable name="VideoConvVar">
		<value condition="String.Contains(Player.Process(video.source.hdr.type),HDR10) + String.Contains(Player.Process(video.dovi.codec.string),8)" />
		<value condition="String.Contains(Player.Process(video.source.hdr.type),HDR10) + String.Contains(Player.Process(video.dovi.codec.string),7)" />
		<value condition="String.Contains(Player.Process(video.source.hdr.type),HDR10) + String.Contains(Player.Process(video.dovi.codec.string),5)" />
		<value condition="String.Contains(Player.Process(video.source.hdr.type),HDR10) + String.Contains(Player.Process(video.dovi.codec.string),4)" />
		<value condition="String.Contains(Player.Process(video.source.hdr.type),SDR) + String.Contains(Player.Process(video.dovi.codec.string),8)" />
		<value condition="String.Contains(Player.Process(video.source.hdr.type),SDR) + String.Contains(Player.Process(video.dovi.codec.string),7)" />
		<value condition="String.Contains(Player.Process(video.source.hdr.type),SDR) + String.Contains(Player.Process(video.dovi.codec.string),5)" />
		<value condition="String.Contains(Player.Process(video.source.hdr.type),SDR) + String.Contains(Player.Process(video.dovi.codec.string),4)" />
		<value condition="String.Contains(Player.Process(video.source.hdr.type),HDR10) + String.Contains(Player.Process(amlogic.vs10.mode),Dolby Vision)">-&gt; Dolby Vision Profile 8.1</value>
		<value condition="String.Contains(Player.Process(video.source.hdr.type),HDR10) + String.Contains(Player.Process(amlogic.vs10.mode),SDR)">-&gt; SDR</value>
		<value condition="String.Contains(Player.Process(video.source.hdr.type),SDR) + String.Contains(Player.Process(amlogic.vs10.mode),HDR10)">-&gt; HDR10</value>
		<value condition="String.Contains(Player.Process(video.source.hdr.type),SDR) + String.Contains(Player.Process(amlogic.vs10.mode),Dolby Vision)">-&gt; Dolby Vision Profile 8.1</value>
		<value condition="String.Contains(Player.Process(video.source.hdr.type),Dolby Vision) + String.Contains(Player.Process(amlogic.vs10.mode),SDR)">-&gt; SDR</value>
	</variable>

	<variable name="VS10ModeVar">
		<value condition="String.Contains(Player.Process(amlogic.vs10.mode),Bypass)">[COLOR red][/COLOR]</value>
		<value condition="String.Contains(Player.Process(amlogic.vs10.mode),Dolby Vision)">[COLOR lightgreen][/COLOR]</value>
		<value condition="String.Contains(Player.Process(amlogic.vs10.mode),HDR10)">[COLOR lightgreen][/COLOR]</value>
		<value condition="String.Contains(Player.Process(amlogic.vs10.mode),SDR)">[COLOR lightgreen][/COLOR]</value>
		<value condition="String.Contains(Player.Process(amlogic.vs10.mode),)">[COLOR orange][/COLOR]</value>
	</variable>

	<variable name="DVTunnelVar">
		<value condition="Integer.IsEqual(Player.Process(amlogic.vs10.mode.raw),1)">DV Tunnel</value>
	</variable>

	<variable name="AudioCodecSpatialVar">
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,dtshd_ma_x_imax)">(IMAX)</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,eac3_ddp_atmos)">(Atmos)</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,truehd_atmos)">(Atmos)</value>
	</variable>

	<variable name="AudioCodecVar">
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,aac)">AAC</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,aac_latm)">AAC</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,ac3)">Dolby Digital</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,aif)">AIFF</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,aifc)">AIFF</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,aiff)">AIFF</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,alac)">ALAC</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,ape)">APE</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,avc)">AVC</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,cdda)">CDDA</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,dca)">DTS</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,dolbydigital)">Dolby Digital</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,dtshd)">DTS-HD</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,dtshd_ma)">DTS-HD MA</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,dtshd_hra)">DTS-HD HRA</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,dtshd_ma_x)">DTS:X MA</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,dtshd_ma_x_imax)">DTS:X</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,eac3)">Dolby Digital Plus</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,eac3_ddp_atmos)">Dolby Digital Plus</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,flac)">FLAC</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,mp1)">MP1</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,mp2)">MP2</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,mp3)">MP3</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,mp3float)">MP3</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,ogg)">OGG</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,opus)">OPUS</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,pcm)">PCM</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,pcm_bluray)">PCM</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,pcm_s16le)">PCM</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,pcm_s24le)">PCM</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,truehd)">Dolby TrueHD</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,truehd_atmos)">Dolby TrueHD</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,vorbis)">Vorbis</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,wav)">WAV</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,wavpack)">WAVP</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,wmapro)">WMA-PRO</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,wmav2)">WMA</value>
		<value condition="String.IsEmpty(VideoPlayer.AudioCodec)">$LOCALIZE[13205]</value>
	</variable>

	<variable name="AudioCodecOSDVar">
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,aac)">AAC</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,aac_latm)">AAC</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,ac3)">Dolby Digital</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,aif)">AIFF</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,aifc)">AIFF</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,aiff)">AIFF</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,alac)">ALAC</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,ape)">APE</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,avc)">AVC</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,cdda)">CDDA</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,dca)">DTS</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,dolbydigital)">Dolby Digital</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,dtshd)">DTS-HD</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,dtshd_ma)">DTS-HD MA</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,dtshd_hra)">DTS-HD HRA</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,dtshd_ma_x)">DTS:X MA</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,dtshd_ma_x_imax)">DTS:X (IMAX)</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,eac3)">DD+</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,eac3_ddp_atmos)">DD+ (Atmos)</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,flac)">FLAC</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,mp1)">MP1</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,mp2)">MP2</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,mp3)">MP3</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,mp3float)">MP3</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,ogg)">OGG</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,opus)">OPUS</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,pcm)">PCM</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,pcm_bluray)">PCM</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,pcm_s16le)">PCM</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,pcm_s24le)">PCM</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,truehd)">Dolby TrueHD</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,truehd_atmos)">TrueHD (Atmos)</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,vorbis)">Vorbis</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,wav)">WAV</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,wavpack)">WAVP</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,wmapro)">WMA-PRO</value>
		<value condition="String.IsEqual(VideoPlayer.AudioCodec,wmav2)">WMA</value>
		<value condition="String.IsEmpty(VideoPlayer.AudioCodec)">$LOCALIZE[13205]</value>
	</variable>

	<variable name="AudioChannelsVar">
		<value condition="Integer.IsEqual(VideoPlayer.AudioChannels,1)">1.0</value>
		<value condition="Integer.IsEqual(VideoPlayer.AudioChannels,2)">2.0</value>
		<value condition="Integer.IsEqual(VideoPlayer.AudioChannels,4)">4.0</value>
		<value condition="Integer.IsEqual(VideoPlayer.AudioChannels,5)">5.0</value>
		<value condition="Integer.IsEqual(VideoPlayer.AudioChannels,6)">5.1</value>
		<value condition="Integer.IsEqual(VideoPlayer.AudioChannels,7)">6.1</value>
		<value condition="Integer.IsEqual(VideoPlayer.AudioChannels,8)">7.1</value>
		<value condition="Integer.IsEqual(VideoPlayer.AudioChannels,10)">9.1</value>
	</variable>
	
	<include name="ViewsDialogPopUpScreenDim">
		<control type="image">
			<include>ScreenSize</include>
			<texture>dim.png</texture>
			<animation effect="fade" start="0" end="50" time="450">VisibleChange</animation>
			<visible>Window.IsActive(1112) | Window.IsActive(1110) | Window.IsActive(1103) | Window.IsActive(1109) | Window.IsActive(1113) | Window.IsActive(1114) | [Window.IsActive(SelectDialog) + !String.IsEmpty(Skin.String(SortMethods))]</visible>
		</control>
	</include>
	
	<include name="DialogPopUpScreenDim">
		<control type="image">
			<include>ScreenSize</include>
			<texture>dim.png</texture>
			<animation effect="fade" start="0" end="50" time="450">VisibleChange</animation>
			<visible>Window.IsActive(ShutdownMenu) | Window.IsActive(NumericInput) | Window.IsActive(LockSettings) | Window.IsActive(PlayerControls) | Window.IsActive(Favourites) | Window.IsActive(VirtualKeyboard)</visible>
		</control>
	</include>
	
	<include name="TopBarImage">
		<control type="image">
			<width>ScreenWidth</width>
			<height>47</height>
			<texture border="0,0,0,6">gui/top-bar-background.png</texture>
			<aspectratio>stretch</aspectratio>
			<animation effect="fade" end="83" condition="true">Conditional</animation>
		</control>
		
		<control type="image">
			<width>ScreenWidth</width>
			<height>43</height>
			<texture>gui/bottom-bar-overlay.png</texture>
			<animation effect="fade" end="68" condition="true">Conditional</animation>
		</control>
	</include>
	
	<include name="HomeTopBarImage">
		<control type="image">
			<width>ScreenWidth</width>
			<height>47</height>
			<texture border="0,0,0,6">gui/top-bar-background.png</texture>
			<aspectratio>stretch</aspectratio>
			<animation effect="fade" end="83" condition="true">Conditional</animation>
		</control>
	</include>
	
	<include name="HomeTopBarOverlay">
		<control type="image">
			<width>ScreenWidth</width>
			<height>43</height>
			<texture>gui/bottom-bar-overlay.png</texture>
			<animation effect="fade" end="68" condition="true">Conditional</animation>
		</control>
	</include>
	
	<include name="NotifyPanel">
		<control type="image">
			<top>-5</top>
			<width>360</width>
			<height>50</height>
			<texture border="20,0,20,8">panels/notify-panel.png</texture>
			<aspectratio>stretch</aspectratio>
		</control>
	</include>
	
	<include name="NotifyPanelIcon">
		<left>20</left>
		<top>6</top>
		<width>30</width>
		<height>30</height>
		<aspectratio>stretch</aspectratio>
		<animation effect="fade" end="70" condition="true">Conditional</animation>
	</include>
	
	<include name="NotifyPanelLabel">
		<left>60</left>
		<top>2</top>
		<width>275</width>
		<height>16</height>
		<font>NowPlayingFont</font>
		<textcolor>WhiteColor</textcolor>
		<scrollout>false</scrollout>
		<pauseatend>1500</pauseatend>
		<scroll>no</scroll>
	</include>
	
	<include name="NotifyPanelLabel2">
		<left>60</left>
		<top>20</top>
		<width>275</width>
		<height>16</height>
		<font>NowPlayingFont</font>
		<textcolor>GreyColor2</textcolor>
		<scrollout>false</scrollout>
		<pauseatend>1500</pauseatend>
		<scroll>true</scroll>
	</include>
	
	<include name="PlayerControlsPanel">
		<control type="image">
			<left>28</left>
			<width>1224</width>
			<height>75</height>
			<texture border="8">panels/panel.png</texture>
			<aspectratio>stretch</aspectratio>
		</control>
	</include>
	
	<include name="LoginScreenPaneImage">
		<control type="image">
			<left>28</left>
			<width>1224</width>
			<height>75</height>
			<texture border="8">panels/panel.png</texture>
		</control>
	</include>
	
	<include name="ContextMenuBtn">
		<width>280</width>
		<textwidth>270</textwidth>
		<scroll>true</scroll>
	</include>
	
	<include name="ShutdownContextMenuBtn">
		<width>280</width>
		<textwidth>230</textwidth>
		<scroll>true</scroll>
	</include>
	
	<variable name="AddonLifecycleType">
		<value condition="String.IsEqual(ListItem.AddonLifecycleType,$LOCALIZE[24170])">$LOCALIZE[24049]</value>
		<value condition="String.IsEqual(ListItem.AddonLifecycleType,$LOCALIZE[24171])">$LOCALIZE[24096]</value>
	</variable>
	
	<!-- Settings -->
	<include name="SettingsCatBtn">
		<width>215</width>
		<height>50</height>
		<font>SettingsCatFont</font>
		<textcolor>SettingsCatColor</textcolor>
		<shadowcolor>ShadowColor</shadowcolor>
		<textwidth>195</textwidth>
		<textoffsetx>10</textoffsetx>
		<align>left</align>
		<texturefocus border="5">controls/button-focus.png</texturefocus>
		<texturenofocus />
		<pulseonselect>false</pulseonselect>
	</include>
	
	<include name="SettingsInactiveCatBtn">
		<width>215</width>
		<height>50</height>
		<font>SettingsCatFont</font>
		<textcolor>SelectedColor</textcolor>
		<shadowcolor>ShadowColor</shadowcolor>
		<textwidth>195</textwidth>
		<textoffsetx>10</textoffsetx>
		<align>left</align>
		<texturefocus />
		<texturenofocus border="5">settings/settings-cat-button-alt-focus.png</texturenofocus>
		<pulseonselect>false</pulseonselect>
	</include>
	
	<include name="SettingsHeaderBtn">
		<width>755</width>
		<height>50</height>
		<font>SettingsHeadFont</font>
		<textcolor>SettingsContentColor</textcolor>
		<shadowcolor>ShadowColor</shadowcolor>
		<disabledcolor>ContentTitleColor</disabledcolor>
		<align>left</align>
		<textoffsetx>0</textoffsetx>
		<textwidth>755</textwidth>
		<texturefocus border="5">controls/settings-button-nofocus.png</texturefocus>
		<texturenofocus border="5">controls/settings-button-nofocus.png</texturenofocus>
		<pulseonselect>false</pulseonselect>
		<enable>false</enable>
	</include>
	
	<include name="SettingsBackBtn">
		<left>-50</left>
		<top>250</top>
		<width>28</width>
		<height>41</height>
		<texturefocus flipx="true">controls/nav-arrow-right-focus.png</texturefocus>
		<texturenofocus flipx="true">controls/nav-arrow-right-nofocus.png</texturenofocus>
	</include>
	
	<include name="SettingsInfoLabel">
		<right>125</right>
		<top>548</top>
		<width>560</width>
		<font>SettingsContentFont2</font>
		<textcolor>MediaInfoTitleColor2</textcolor>
		<shadowcolor>ShadowColor</shadowcolor>
		<align>right</align>
	</include>

	<include name="SettingsContentBtn">
		<width>755</width>
		<height>50</height>
		<font>SettingsContentFont</font>
		<textcolor>SettingsContentColor</textcolor>
		<shadowcolor>ShadowColor</shadowcolor>
		<align>left</align>
		<textoffsetx>10</textoffsetx>
		<textwidth>735</textwidth>
		<texturefocus border="5">controls/settings-button-focus.png</texturefocus>
		<texturenofocus border="5">controls/settings-button-nofocus.png</texturenofocus>
		<pulseonselect>false</pulseonselect>
	</include>
	
	<include name="SettingsSystemInfoContentBtn">
		<width>755</width>
		<height>40</height>
		<font>SettingsContentFont</font>
		<textcolor>SettingsContentColor</textcolor>
		<disabledcolor>SettingsContentColor</disabledcolor>
		<shadowcolor>ShadowColor</shadowcolor>
		<align>left</align>
		<textoffsetx>10</textoffsetx>
		<textwidth>735</textwidth>
		<texturefocus />
		<texturenofocus />
		<pulseonselect>false</pulseonselect>
		<enable>false</enable>
	</include>
	
	<include name="SettingsContentRadioBtn">
		<width>755</width>
		<height>50</height>
		<font>SettingsContentFont</font>
		<textcolor>SettingsContentColor</textcolor>
		<shadowcolor>ShadowColor</shadowcolor>
		<align>left</align>
		<textoffsetx>10</textoffsetx>
		<textwidth>675</textwidth>
		<texturefocus border="5">controls/settings-button-focus.png</texturefocus>
		<texturenofocus border="5">controls/settings-button-nofocus.png</texturenofocus>
		<pulseonselect>false</pulseonselect>
	</include>
	
	<include name="SettingsContentToggleBtn">
		<width>755</width>
		<height>50</height>
		<font>SettingsContentFont</font>
		<textcolor>SettingsContentColor</textcolor>
		<shadowcolor>ShadowColor</shadowcolor>
		<align>left</align>
		<textoffsetx>10</textoffsetx>
		<textwidth>675</textwidth>
		<texturefocus border="5">controls/settings-toggle-button-focus.png</texturefocus>
		<texturenofocus border="5">controls/settings-toggle-button-nofocus.png</texturenofocus>
		<alttexturefocus border="5">controls/settings-toggle-button-focus2.png</alttexturefocus>
		<alttexturenofocus border="5">controls/settings-toggle-button-nofocus2.png</alttexturenofocus>
		<pulseonselect>false</pulseonselect>
	</include>
	
	<include name="SettingsContentExpandBtn">
		<width>755</width>
		<height>50</height>
		<font>SettingsContentFont</font>
		<textcolor>SettingsContentColor</textcolor>
		<shadowcolor>ShadowColor</shadowcolor>
		<align>left</align>
		<textoffsetx>10</textoffsetx>
		<textwidth>675</textwidth>
		<radiowidth>50</radiowidth>
		<radioheight>25</radioheight>
		<textureradiofocus>settings/settings-expand-arrow.png</textureradiofocus>
		<textureradionofocus>settings/settings-expand-arrow.png</textureradionofocus>
		<texturefocus border="5">controls/settings-button-focus.png</texturefocus>
		<texturenofocus border="5">controls/settings-button-nofocus.png</texturenofocus>
		<pulseonselect>false</pulseonselect>
	</include>
	
	<include name="ExpandedSettingsListBtn">
		<width>540</width>
		<height>50</height>
		<font>SettingsContentFont</font>
		<textcolor>SettingsContentColor</textcolor>
		<shadowcolor>ShadowColor</shadowcolor>
		<align>left</align>
		<textoffsetx>10</textoffsetx>
		<textwidth>520</textwidth>
		<texturefocus border="5">controls/settings-button-focus.png</texturefocus>
		<texturenofocus border="5">controls/settings-button-nofocus.png</texturenofocus>
		<pulseonselect>false</pulseonselect>
	</include>
	
	<include name="ExpandedSettingsHeaderBtn">
		<width>540</width>
		<height>50</height>
		<font>SettingsHeadFont</font>
		<textcolor>SettingsContentColor</textcolor>
		<shadowcolor>ShadowColor</shadowcolor>
		<disabledcolor>ContentTitleColor</disabledcolor>
		<align>left</align>
		<textoffsetx>0</textoffsetx>
		<textwidth>540</textwidth>
		<texturefocus border="5">controls/settings-button-nofocus.png</texturefocus>
		<texturenofocus border="5">controls/settings-button-nofocus.png</texturenofocus>
		<enable>false</enable>
	</include>
	
	<include name="ExpandedSettingsGroupRadioBtn">
		<width>174</width>
		<height>50</height>
		<font>SettingsContentFont</font>
		<textcolor>SettingsContentColor</textcolor>
		<shadowcolor>ShadowColor</shadowcolor>
		<align>left</align>
		<textoffsetx>10</textoffsetx>
		<textwidth>114</textwidth>
		<radioposx>126</radioposx>
		<textureradiofocus>controls/radio-button-focus3.png</textureradiofocus>
		<textureradionofocus>controls/radio-button-nofocus3.png</textureradionofocus>
		<texturefocus border="5">controls/button-focus.png</texturefocus>
		<texturenofocus border="5">controls/button-nofocus.png</texturenofocus>
		<alttexturefocus border="5">controls/button-focus.png</alttexturefocus>
		<alttexturenofocus border="5">controls/button-nofocus.png</alttexturenofocus>
		<pulseonselect>false</pulseonselect>
	</include>

	<include name="ExpandedSettingsToggleBtn">
		<width>561</width>
		<height>50</height>
		<font>SettingsContentFont</font>
		<textcolor>SettingsContentColor</textcolor>
		<shadowcolor>ShadowColor</shadowcolor>
		<align>left</align>
		<textoffsetx>10</textoffsetx>
		<textwidth>481</textwidth>
		<texturefocus border="5">controls/settings-toggle-button2-focus.png</texturefocus>
		<texturenofocus border="5">controls/settings-toggle-button2-nofocus.png</texturenofocus>
		<alttexturefocus border="5">controls/settings-toggle-button2-focus2.png</alttexturefocus>
		<alttexturenofocus border="5">controls/settings-toggle-button2-nofocus2.png</alttexturenofocus>
		<pulseonselect>false</pulseonselect>
	</include>

	<include name="ExpandedSettingsBtn">
		<width>279</width>
		<height>35</height>
		<font>SettingsContentFont</font>
		<textcolor>SettingsContentColor</textcolor>
		<shadowcolor>ShadowColor</shadowcolor>
		<align>left</align>
		<textoffsetx>10</textoffsetx>
		<textwidth>259</textwidth>
		<texturefocus border="5">controls/button-focus.png</texturefocus>
		<texturenofocus border="5">controls/button-nofocus.png</texturenofocus>
		<pulseonselect>false</pulseonselect>
	</include>
	
	<include name="ExpandedSettingsRadioBtn">
		<width>205</width>
		<height>50</height>
		<font>SettingsContentFont</font>
		<textcolor>SettingsContentColor</textcolor>
		<shadowcolor>ShadowColor</shadowcolor>
		<align>left</align>
		<textoffsetx>10</textoffsetx>
		<textwidth>125</textwidth>
		<radioposx>144</radioposx>
		<textureradiofocus>controls/radio-button-focus.png</textureradiofocus>
		<textureradionofocus>controls/radio-button-nofocus.png</textureradionofocus>
		<texturefocus border="5">controls/button-focus.png</texturefocus>
		<texturenofocus border="5">controls/button-nofocus.png</texturenofocus>
		<alttexturefocus border="5">controls/button-focus.png</alttexturefocus>
		<alttexturenofocus border="5">controls/button-nofocus.png</alttexturenofocus>
		<pulseonselect>false</pulseonselect>
	</include>
	
	<include name="ExpandedSettingsImagePreview">
		<width>205</width>
		<height>195</height>
		<bordersize>6</bordersize>
		<aspectratio>keep</aspectratio>
		<fadetime>IconCrossfadeTime</fadetime>
		<include>ControlsOpenCloseAnim</include>
	</include>
	<!-- END Settings -->
	
	<include name="KeyboardSmallBtn">
		<width>48</width>
	    <height>48</height>
	    <font>IconFont</font>
	</include>
	
	<include name="KeyboardBigBtn">
		<width>148</width>
	    <height>48</height>
	</include>

	<include name="FileManagerInfoLabel">
		<width>180</width>
		<height>10</height>
		<font>FileManagerInfoFont</font>
		<textcolor>MediaInfoItemColor</textcolor>
		<shadowcolor>ShadowColor</shadowcolor>
		<align>center</align>
	</include>
	
	<include name="FileManagerInfoLabel2">
		<width>180</width>
		<height>32</height>
		<font>FileManagerInfoFont</font>
		<textcolor>MediaInfoItemColor2</textcolor>
		<shadowcolor>ShadowColor</shadowcolor>
		<align>center</align>
	</include>

	<include name="FSMediaInfoBackgroundDim">
		<control type="image">
			<depth>DepthBackground</depth>
			<include>BackgroundSize</include>
			<texture>views/fanart-dim.png</texture>
			<include>MediaViewOpenCloseAnim</include>
			<animation effect="fade" end="60" condition="true">Conditional</animation>
		</control>
	</include>
	
	<include name="FSMediaInfoBackgroundDim2">
		<control type="image">
			<depth>DepthBackground</depth>
			<include>BackgroundSize</include>
			<texture>views/fanart-dim.png</texture>
			<include>MediaViewOpenCloseAnim</include>
			<animation effect="fade" end="80" condition="true">Conditional</animation>
		</control>
	</include>
	
	<include name="PlaylistEditorInfoLabel1">
		<width>176</width>
		<height>10</height>
		<align>center</align>
		<font>DialogHeadFont</font>
		<textcolor>MediaInfoItemColor</textcolor>
		<shadowcolor>ShadowColor</shadowcolor>
	</include>
	
	<include name="PlaylistEditorInfoLabel2">
		<width>176</width>
		<height>24</height>
		<align>center</align>
		<scroll>true</scroll>
		<font>DialogHeadFont</font>
		<textcolor>MediaInfoItemColor2</textcolor>
		<shadowcolor>ShadowColor</shadowcolor>
	</include>
	
	<!-- Sort Letter Notification -->
	<variable name="SortLetterNotificationVar">
		<value condition="!String.IsEmpty(PVR.ChannelNumberInput)">$INFO[PVR.ChannelNumberInput]</value>
		<value condition="Control.HasFocus(584)">$INFO[Container(584).ListItem.SortLetter]</value>
		<value condition="Control.HasFocus(120)">$INFO[Container(120).ListItem.SortLetter]</value>
		<value condition="Control.HasFocus(145)">$INFO[Container(145).ListItem.SortLetter]</value>
		<value condition="!String.IsEmpty(Container.ListItem.SortLetter)">$INFO[Container.ListItem.SortLetter]</value>
		<value>$INFO[ListItem.SortLetter]</value>
	</variable>

	<include name="SortLetterNotification">
		<control type="group">
			<visible>[Container.Scrolling + $EXP[SortMethods]] | Container(584).Scrolling | !String.IsEmpty(PVR.ChannelNumberInput)</visible>
		
			<animation type="Visible">
				<effect type="fade" start="0" end="100" time="300" delay="100"/>
				<effect type="slide" start="-60,0" time="400" tween="cubic" easing="out" delay="100"/>
			</animation>
			
			<animation type="Hidden">
				<effect type="fade" start="100" end="0" time="300" delay="1000"/>
				<effect type="slide" end="-60,0" time="400" delay="1000" tween="cubic" easing="out"/>
			</animation>
			
			<control type="label">
				<height>43</height>
				<width>42</width>
				<align>center</align>
				<aligny>center</aligny>
				<font>BreadCrumbFontBold</font>
				<textcolor>BreadCrumbColor</textcolor>
				<label>$VAR[SortLetterNotificationVar]</label>
			</control>
		</control>
	</include>
	
	<include name="SortLetterNotification2">
		<control type="group">
			<visible>Container.Scrolling</visible>
		
			<animation type="Visible">
				<effect type="fade" start="0" end="100" time="300" delay="100"/>
				<effect type="slide" start="-60,0" time="400" tween="cubic" easing="out" delay="100"/>
			</animation>
			
			<animation type="Hidden">
				<effect type="fade" start="100" end="0" time="300" delay="1000"/>
				<effect type="slide" end="-60,0" time="400" delay="1000" tween="cubic" easing="out"/>
			</animation>
			
			<control type="label">
				<height>43</height>
				<width>42</width>
				<align>center</align>
				<aligny>center</aligny>
				<font>BreadCrumbFontBold</font>
				<textcolor>BreadCrumbColor</textcolor>
				<label>$VAR[SortLetterNotificationVar]</label>
			</control>
		</control>
	</include>
	<!-- END Sort Letter Notification -->
	
	<include name="RedirectBtn">
		<left>-1</left>
		<top>-1</top>
		<width>1</width>
		<height>1</height>
		<texturefocus />
		<texturenofocus />
	</include>
	
	<include name="DropDownMenuCloseHitRect">
		<include>ScreenSize</include>
		<texturenofocus />
		<texturefocus />
		<onclick>Control.SetFocus(500)</onclick>
	</include>
	
	<include name="ReloadSkinNotification">
		<onclick>Notification($LOCALIZE[32070],$LOCALIZE[31219],3000,)</onclick>
	</include>
	
	<include name="VideoOverlays">
		<control type="image">
			<description>Quality</description>
			<left>$PARAM[left]</left>
			<top>$PARAM[top]</top>
			<width>24</width>
			<height>24</height>
			<texture background="true">$VAR[VideoQualityOverlayUnwatched]</texture>
			<aspectratio>keep</aspectratio>
			<visible>!String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
			<include>ListViewOverlayFadeAnim</include>
		</control>
		<control type="image">
			<description>Quality</description>
			<left>$PARAM[left]</left>
			<top>$PARAM[top]</top>
			<width>24</width>
			<height>24</height>
			<texture background="true">$VAR[VideoQualityOverlayWatched]</texture>
			<aspectratio>keep</aspectratio>
			<visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
			<include>ListViewOverlayFadeAnim</include>
		</control>
		<control type="image">
			<description>Watched Partial</description>
			<left>$PARAM[left]</left>
			<top>$PARAM[top]</top>
			<width>24</width>
			<height>24</height>
			<texture background="true">$VAR[WatchedPartial]</texture>
			<aspectratio>keep</aspectratio>
			<visible>ListItem.IsResumable</visible>
			<include>ListViewPartialWatchedOverlayFadeAnim</include>
			<include>ListViewWatchedOverlayFadeAnim</include>
		</control>
	</include>
	
	<include name="VideoOverlays2">
		<control type="image">
			<description>Quality</description>
			<left>$PARAM[left]</left>
			<top>$PARAM[top]</top>
			<width>24</width>
			<height>24</height>
			<texture background="true">$VAR[VideoQualityOverlayUnwatched]</texture>
			<aspectratio>keep</aspectratio>
			<visible>!String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
		</control>
		<control type="image">
			<description>Quality</description>
			<left>$PARAM[left]</left>
			<top>$PARAM[top]</top>
			<width>24</width>
			<height>24</height>
			<texture background="true">$VAR[VideoQualityOverlayWatched]</texture>
			<aspectratio>keep</aspectratio>
			<visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
		</control>
		<control type="image">
			<description>Watched Partial</description>
			<left>$PARAM[left]</left>
			<top>$PARAM[top]</top>
			<width>24</width>
			<height>24</height>
			<texture background="true">$VAR[WatchedPartial]</texture>
			<aspectratio align="right">keep</aspectratio>
			<visible>ListItem.IsResumable</visible>
			<include>ListViewPartialWatchedOverlayFadeAnim</include>
			<include>ListViewWatchedOverlayFadeAnim</include>
		</control>
	</include>
	
	<!-- DialogAddonInfo.xml -->
	<variable name="AddonInfoTextbox">
		<value condition="Skin.String(AddonInfoContentToggle,news)">$INFO[ListItem.AddonNews]</value>
		<value condition="Skin.String(AddonInfoContentToggle,changelog)">$INFO[Window(Home).Property(Changelog)]</value>
		<value condition="Skin.String(AddonInfoContentToggle,screenshots)">$LOCALIZE[31964]</value>
		<value>[B]$INFO[ListItem.AddonSummary][/B][CR][CR]$INFO[ListItem.AddonDescription]</value>
	</variable>
	
	<!-- DialogVideoInfo.xml -->
	<variable name="DialogVideoInfoActorImage">
		<value condition="Control.HasFocus(50) + !String.IsEmpty(Container(50).ListItem.Thumb) + !System.AddonIsEnabled(plugin.video.themoviedb.helper)">$INFO[Container(50).ListItem.Thumb]</value>
		<value>$VAR[PosterThumb]</value>
	</variable>
	
	<variable name="DialogVideoInfoButton8">
		<value condition="String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo) | String.IsEqual(ListItem.DBTYPE,video)">$LOCALIZE[208]</value>
		<value>$LOCALIZE[21385]</value>
	</variable>
	
	<variable name="DialogVideoInfoLabel">
        <value condition="Skin.String(DialogVideoInfoButtonMenu,director)">$LOCALIZE[31036]</value>
        <value condition="Skin.String(DialogVideoInfoButtonMenu,writer)">$LOCALIZE[31037]</value>
        <value condition="Skin.String(DialogVideoInfoButtonMenu,artist)">$LOCALIZE[21891]</value>
    </variable>
	
	<include name="DialogVideoInfoMediaFlags">
		<control type="grouplist">
			<left>510</left>
			<top>650</top>
			<width>580</width>
			<height>60</height>
			<itemgap>5</itemgap>
			<align>left</align>
			<orientation>horizontal</orientation>
			<usecontrolcoords>true</usecontrolcoords>
			<include>MediaFlagFadeAnim</include>
			<include>VideoSourceMediaFlags</include>
			<include>VideoCodecMediaFlags</include>
			<include>AudioMediaFlags</include>
			<include>AspectMediaFlags</include>
			<include>SubtitleMediaFlags</include>
			<include>StudioMediaFlag2</include>
		</control>
	</include>
	
	<include name="DialogVideoInfoActors1">
		<left>470</left>
		<top>460</top>
		<width>710</width>
		<height>175</height>
		<onup>901</onup>
		<itemlayout height="35" width="355">
			<control type="image">
				<left>5</left>
				<top>5</top>
				<width>24</width>
				<height>24</height>
				<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
			</control>
			<control type="label">
				<top>6</top>
				<left>35</left>
				<width>318</width>
				<height>23</height>
				<font>FullMediaInfoDescFont</font>
				<textcolor>GreyColor2</textcolor>
				<selectedcolor>SelectedColor</selectedcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>left</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Label]$INFO[ListItem.Label2, $LOCALIZE[20347] ,]</label>
			</control>
		</itemlayout>
		<focusedlayout height="35" width="355">
			<control type="image">
				<width>355</width>
				<height>33</height>
				<texture border="4">views/list-focus.png</texture>
				<include>ListViewSelectFadeAnim</include>
			</control>
			<control type="image">
				<left>5</left>
				<top>5</top>
				<width>24</width>
				<height>24</height>
				<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
			</control>
			<control type="label">
				<top>6</top>
				<left>35</left>
				<width>318</width>
				<height>23</height>
				<font>FullMediaInfoDescFont</font>
				<textcolor>GreyColor2</textcolor>
				<selectedcolor>SelectedColor</selectedcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>left</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Label]$INFO[ListItem.Label2, $LOCALIZE[20347] ,]</label>
			</control>
		</focusedlayout>
	</include>
	
	<include name="DialogVideoInfoActors2">
		<left>61</left>
		<top>470</top>
		<width>1160</width>
		<height>140</height>
		<onup>901</onup>
		<itemlayout height="35" width="386">
			<control type="image">
				<left>5</left>
				<top>5</top>
				<width>24</width>
				<height>24</height>
				<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
			</control>
			<control type="label">
				<top>6</top>
				<left>35</left>
				<width>346</width>
				<height>23</height>
				<font>FullMediaInfoDescFont</font>
				<textcolor>GreyColor2</textcolor>
				<selectedcolor>SelectedColor</selectedcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>left</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Label]$INFO[ListItem.Label2, $LOCALIZE[20347] ,]</label>
			</control>
		</itemlayout>
		<focusedlayout height="35" width="386">
			<control type="image">
				<width>386</width>
				<height>33</height>
				<texture border="4">views/list-focus.png</texture>
				<include>ListViewSelectFadeAnim</include>
			</control>
			<control type="image">
				<left>5</left>
				<top>5</top>
				<width>24</width>
				<height>24</height>
				<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
			</control>
			<control type="label">
				<top>6</top>
				<left>35</left>
				<width>346</width>
				<height>23</height>
				<font>FullMediaInfoDescFont</font>
				<textcolor>GreyColor2</textcolor>
				<selectedcolor>SelectedColor</selectedcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>left</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Label]$INFO[ListItem.Label2, $LOCALIZE[20347] ,]</label>
			</control>
		</focusedlayout>
	</include>
	
	<include name="DialogVideoInfoActors3">
		<left>652</left>
		<top>409</top>
		<width>408</width>
		<height>232</height>
		<onup>505</onup>
		<itemlayout height="29">
			<control type="image">
				<left>5</left>
				<top>3</top>
				<width>24</width>
				<height>24</height>
				<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
			</control>
			<control type="label">
				<top>3</top>
				<left>35</left>
				<width>368</width>
				<height>23</height>
				<font>FullMediaInfoDescFont</font>
				<textcolor>GreyColor2</textcolor>
				<selectedcolor>SelectedColor</selectedcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>left</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Label]$INFO[ListItem.Label2, $LOCALIZE[20347] ,]</label>
			</control>
		</itemlayout>
		<focusedlayout height="29">
			<control type="image">
				<width>408</width>
				<height>29</height>
				<texture border="4">views/list-focus.png</texture>
				<include>ListViewSelectFadeAnim</include>
				<animation effect="slide" start="0,-29" time="200" tween="quadratic" easing="out" reversible="false" condition="Container(50).OnNext">Focus</animation>
				<animation effect="slide" start="0,29" time="200" tween="quadratic" easing="out" reversible="false" condition="Container(50).OnPrevious">Focus</animation>
			</control>
			<control type="image">
				<left>5</left>
				<top>3</top>
				<width>24</width>
				<height>24</height>
				<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
			</control>
			<control type="label">
				<top>3</top>
				<left>35</left>
				<width>368</width>
				<height>23</height>
				<font>FullMediaInfoDescFont</font>
				<textcolor>GreyColor2</textcolor>
				<selectedcolor>SelectedColor</selectedcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>left</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Label]$INFO[ListItem.Label2, $LOCALIZE[20347] ,]</label>
			</control>
		</focusedlayout>
	</include>
	
	<include name="DialogVideoInfoActors">
		<left>$PARAM[left]</left>
		<top>$PARAM[top]</top>
		<width>$PARAM[width]</width>
		<height>$PARAM[height]</height>
		<onup>$PARAM[onup]</onup>
		<orientation>horizontal</orientation>
		<itemlayout width="$PARAM[layout_width]">
			<control type="image">
				<width>$PARAM[item_width]</width>
				<height>$PARAM[height]</height>
				<bordertexture border="4">covers/cover-case2.png</bordertexture>
				<bordersize>4</bordersize>
				<aspectratio align="center" aligny="center">scale</aspectratio>
				<texture background="true">$INFO[ListItem.Thumb]</texture>
			</control>
			<control type="image">
				<width>$PARAM[item_width]</width>
				<height>$PARAM[height]</height>
				<texture border="4">covers/cover-case2.png</texture>
				<visible>String.IsEmpty(ListItem.Thumb)</visible>
			</control>
			<control type="image">
				<top>$PARAM[defaultimage_top]</top>
				<width>$PARAM[item_width]</width>
				<height>$PARAM[defaultimage_height]</height>
				<texture background="true">DefaultActor.png</texture>
				<aspectratio align="center" aligny="top">keep</aspectratio>
				<visible>String.IsEmpty(ListItem.Thumb)</visible>
			</control>
			<control type="image">
				<left>$PARAM[genrebg_left]</left>
				<top>$PARAM[genrebg_top]</top>
				<width>$PARAM[genrebg_width]</width>
				<height>27</height>
				<texture border="8">views/genre-background.png</texture>
				<visible>!String.IsEmpty(ListItem.Label)</visible>
			</control>
			<control type="label">
				<left>$PARAM[label_left]</left>
				<top>$PARAM[label_top]</top>
				<width>$PARAM[label_width]</width>
				<align>center</align>
				<font>SubMenuArrowFont</font>
				<textcolor>WhiteColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Label]</label>
				<visible>!String.IsEmpty(ListItem.Label)</visible>
			</control>
		</itemlayout>
		<focusedlayout width="143">
			<control type="group">
				<include>ListViewCoverFocusAnim</include>
				<control type="image">
					<width>$PARAM[item_width]</width>
					<height>$PARAM[height]</height>
					<texture border="4">covers/cover-case-noshadow-focus.png</texture>
					<include>ListViewOverlayFadeAnim</include>
				</control>
				<control type="image">
					<width>$PARAM[item_width]</width>
					<height>$PARAM[height]</height>
					<texture border="4">black.png</texture>
					<bordersize>3</bordersize>
					<visible>String.IsEmpty(ListItem.Thumb)</visible>
				</control>
				<control type="image">
					<top>$PARAM[defaultimage_top]</top>
					<width>$PARAM[item_width]</width>
					<height>$PARAM[defaultimage_height]</height>
					<texture background="true">DefaultActor.png</texture>
					<aspectratio align="center" aligny="top">keep</aspectratio>
					<visible>String.IsEmpty(ListItem.Thumb)</visible>
				</control>
				<control type="image">
					<top>2</top>
					<left>2</left>
					<width>$PARAM[focusedthumb_width]</width>
					<height>$PARAM[focusedthumb_height]</height>
					<bordertexture border="4">black.png</bordertexture>
					<bordersize>2</bordersize>
					<aspectratio align="center" aligny="center">scale</aspectratio>
					<texture background="true">$INFO[ListItem.Thumb]</texture>
				</control>
				<control type="image">
					<left>$PARAM[genrebg_left]</left>
					<top>$PARAM[genrebg_top]</top>
					<width>$PARAM[genrebg_width]</width>
					<height>27</height>
					<texture border="8">views/genre-background.png</texture>
					<visible>!String.IsEmpty(ListItem.Label)</visible>
				</control>
				<control type="label">
					<left>$PARAM[label_left]</left>
					<top>$PARAM[label_top]</top>
					<width>$PARAM[label_width]</width>
					<align>center</align>
					<font>SubMenuArrowFont</font>
					<textcolor>SelectedColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Label]</label>
					<visible>!String.IsEmpty(ListItem.Label)</visible>
				</control>
			</control>
		</focusedlayout>
	</include>
	
	<include name="DialogVideoInfoActors4">
		<include content="DialogVideoInfoActors">
			<param name="left" value="469" />
			<param name="top" value="459" />
			<param name="width" value="715" />
			<param name="height" value="175" />
			<param name="onup" value="901" />
			<param name="layout_width" value="143" />
			<param name="item_width" value="140" />
			<param name="defaultimage_top" value="7" />
			<param name="defaultimage_height" value="140" />
			<param name="genrebg_left" value="10" />
			<param name="genrebg_top" value="140" />
			<param name="genrebg_width" value="120" />
			<param name="label_left" value="15" />
			<param name="label_top" value="144" />
			<param name="label_width" value="110" />
			<param name="focusedthumb_width" value="136" />
			<param name="focusedthumb_height" value="171" />
		</include>
	</include>
	
	<include name="DialogVideoInfoActors5">
		<include content="DialogVideoInfoActors">
			<param name="left" value="61" />
			<param name="top" value="460" />
			<param name="width" value="1160" />
			<param name="height" value="173" />
			<param name="onup" value="901" />
			<param name="layout_width" value="145" />
			<param name="item_width" value="142" />
			<param name="defaultimage_top" value="2" />
			<param name="defaultimage_height" value="142" />
			<param name="genrebg_left" value="10" />
			<param name="genrebg_top" value="137" />
			<param name="genrebg_width" value="122" />
			<param name="label_left" value="15" />
			<param name="label_top" value="141" />
			<param name="label_width" value="112" />
			<param name="focusedthumb_width" value="138" />
			<param name="focusedthumb_height" value="169" />
		</include>
	</include>
	
	<include name="DialogVideoInfoActors6">
		<include content="DialogVideoInfoActors">
			<param name="left" value="651" />
			<param name="top" value="418" />
			<param name="width" value="580" />
			<param name="height" value="214" />
			<param name="onup" value="505" />
			<param name="layout_width" value="145" />
			<param name="item_width" value="142" />
			<param name="defaultimage_top" value="30" />
			<param name="defaultimage_height" value="130" />
			<param name="genrebg_left" value="8" />
			<param name="genrebg_top" value="180" />
			<param name="genrebg_width" value="126" />
			<param name="label_left" value="13" />
			<param name="label_top" value="184" />
			<param name="label_width" value="116" />
			<param name="focusedthumb_width" value="138" />
			<param name="focusedthumb_height" value="210" />
		</include>
	</include>
	
	<include name="DialogVideoInfoSet">
		<left>465</left>
		<top>250</top>
		<width>482</width>
		<height>300</height>
		<onup>987</onup>
		<onclick condition="!System.HasAddon(script.embuary.info)">InstallAddon(script.embuary.info)</onclick>
		<onclick condition="System.HasAddon(script.embuary.info) + !System.AddonIsEnabled(script.embuary.info)">EnableAddon(script.embuary.info)</onclick>
		<onright condition="System.AddonIsEnabled(script.embuary.info)">RunScript(script.embuary.info,call=movie,query='"$INFO[Container(50).ListItem.Title]"')</onright>
		<itemlayout height="30">
			<control type="image">
				<top>28</top>
				<left>5</left>
				<width>472</width>
				<height>2</height>
				<animation effect="fade" end="30" condition="true">Conditional</animation>
				<texture>views/videoinfo-separator.png</texture>
			</control>
			<control type="label">
				<left>5</left>
				<width>382</width>
				<height>30</height>
				<font>FullMediaInfoFont</font>
				<aligny>center</aligny>
				<textcolor>MediaInfoItemColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>[UPPERCASE]$INFO[ListItem.Title][/UPPERCASE]</label>
			</control>
			<control type="label">
				<left>392</left>
				<width>100</width>
				<height>30</height>
				<font>FullMediaInfoFont</font>
				<aligny>center</aligny>
				<textcolor>MediaInfoItemColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Year]</label>
			</control>
			<control type="image">
				<left>446</left>
				<width>24</width>
				<height>30</height>
				<aligny>center</aligny>
				<texture>$INFO[ListItem.Overlay]</texture>
				<aspectratio>keep</aspectratio>
				<visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
			</control>
			<control type="image">
				<description>Watched Partial</description>
				<left>446</left>
				<width>24</width>
				<height>30</height>
				<aligny>center</aligny>
				<texture background="true">$VAR[WatchedPartial]</texture>
				<aspectratio>keep</aspectratio>
				<visible>ListItem.IsResumable</visible>
				<include>ListViewOverlayFadeAnim</include>
				<include>ListViewWatchedOverlayFadeAnim</include>
			</control>
		</itemlayout>
		<focusedlayout height="30">
			<control type="image">
				<top>28</top>
				<left>5</left>
				<width>472</width>
				<height>2</height>
				<animation effect="fade" end="30" condition="true">Conditional</animation>
				<texture>views/videoinfo-separator.png</texture>
			</control>
			<control type="image">
				<width>482</width>
				<height>30</height>
				<texture border="4">views/list-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>Control.HasFocus(50)</visible>
				<include>ListViewSelectFadeAnim</include>
				<animation effect="slide" start="0,-30" time="200" tween="quadratic" easing="out" reversible="false" condition="Container(50).OnNext">Focus</animation>
				<animation effect="slide" start="0,30" time="200" tween="quadratic" easing="out" reversible="false" condition="Container(50).OnPrevious">Focus</animation>
			</control>
			<control type="label">
				<left>5</left>
				<width>382</width>
				<height>30</height>
				<font>FullMediaInfoFont</font>
				<aligny>center</aligny>
				<textcolor>MediaInfoItemColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>[UPPERCASE]$INFO[ListItem.Title][/UPPERCASE]</label>
			</control>
			<control type="label">
				<left>392</left>
				<width>100</width>
				<height>30</height>
				<font>FullMediaInfoFont</font>
				<aligny>center</aligny>
				<textcolor>MediaInfoItemColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Year]</label>
			</control>
			<control type="image">
				<left>446</left>
				<width>24</width>
				<height>30</height>
				<aligny>center</aligny>
				<texture>$INFO[ListItem.Overlay]</texture>
				<aspectratio>keep</aspectratio>
				<visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
			</control>
			<control type="image">
				<description>Watched Partial</description>
				<left>446</left>
				<width>24</width>
				<height>30</height>
				<aligny>center</aligny>
				<texture background="true">$VAR[WatchedPartial]</texture>
				<aspectratio>keep</aspectratio>
				<visible>ListItem.IsResumable</visible>
				<include>ListViewOverlayFadeAnim</include>
				<include>ListViewWatchedOverlayFadeAnim</include>
			</control>
		</focusedlayout>
	</include>
	
	<include name="DialogVideoInfoPoster">
		<left>469</left>
		<top>459</top>
		<width>715</width>
		<height>175</height>
		<onup>901</onup>
		<onleft>987</onleft>
		<itemlayout width="143">
			<control type="image">
				<width>138</width>
				<height>175</height>
				<bordertexture border="4">covers/cover-case2.png</bordertexture>
				<bordersize>4</bordersize>
				<aspectratio align="center" aligny="center">scale</aspectratio>
				<texture background="true">$INFO[ListItem.Art(poster)]</texture>
			</control>
			<control type="image">
				<width>138</width>
				<height>175</height>
				<texture border="4">covers/cover-case2.png</texture>
				<visible>String.IsEmpty(ListItem.Art(poster))</visible>
			</control>
			<control type="image">
				<width>138</width>
				<height>175</height>
				<texture background="true">DefaultMovies.png</texture>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<visible>String.IsEmpty(ListItem.Art(poster))</visible>
			</control>
			<control type="group">
				<visible>Skin.String(VideoInfoMenubar,TVShowSeasons)</visible>
				<top>8</top>
				<left>104</left>
				<control type="label">
					<description>Unwatched Episodes</description>
					<width>26</width>
					<height>26</height>
					<font>ListFont3</font>
					<textcolor>ListColor</textcolor>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<visible>$EXP[UnwatchedEpisodes99-]</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<width>26</width>
					<height>26</height>
					<font>ListFont4</font>
					<textcolor>ListColor</textcolor>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<visible>$EXP[UnwatchedEpisodes99+]</visible>
				</control>
				<control type="image">
					<description>Unwatched Overlay</description>
					<width>26</width>
					<height>26</height>
					<texture background="true">OverlayClean.png</texture>
					<aspectratio>keep</aspectratio>
					<visible>$EXP[UnwatchedEpisodesOverlay]</visible>
				</control>
				<control type="image">
					<description>Watched Overlay</description>
					<width>26</width>
					<height>26</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio>keep</aspectratio>
					<visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
				</control>
			</control>
		</itemlayout>
		<focusedlayout width="143">
			<control type="group">
				<include>ListViewCoverFocusAnim</include>
				<control type="image">
					<width>138</width>
					<height>175</height>
					<texture border="4">covers/cover-case-noshadow-focus.png</texture>
					<include>ListViewOverlayFadeAnim</include>
				</control>
				<control type="image">
					<width>138</width>
					<height>175</height>
					<texture border="4">black.png</texture>
					<bordersize>3</bordersize>
					<visible>String.IsEmpty(ListItem.Art(poster))</visible>
				</control>
				<control type="image">
					<width>138</width>
					<height>175</height>
					<texture background="true">DefaultMovies.png</texture>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<visible>String.IsEmpty(ListItem.Art(poster))</visible>
				</control>
				<control type="image">
					<top>2</top>
					<left>2</left>
					<width>134</width>
					<height>171</height>
					<bordertexture border="4">black.png</bordertexture>
					<bordersize>2</bordersize>
					<aspectratio align="center" aligny="center">scale</aspectratio>
					<texture background="true">$INFO[ListItem.Art(poster)]</texture>
				</control>
				<control type="group">
					<visible>Skin.String(VideoInfoMenubar,TVShowSeasons)</visible>
					<top>8</top>
					<left>104</left>
					<control type="label">
						<description>Unwatched Episodes</description>
						<width>26</width>
						<height>26</height>
						<font>ListFont3</font>
						<textcolor>ListColor</textcolor>
						<align>center</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<visible>$EXP[UnwatchedEpisodes99-]</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<width>26</width>
						<height>26</height>
						<font>ListFont4</font>
						<textcolor>ListColor</textcolor>
						<align>center</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<visible>$EXP[UnwatchedEpisodes99+]</visible>
					</control>
					<control type="image">
						<description>Unwatched Overlay</description>
						<width>26</width>
						<height>26</height>
						<texture background="true">OverlayClean.png</texture>
						<aspectratio>keep</aspectratio>
						<visible>$EXP[UnwatchedEpisodesOverlay]</visible>
					</control>
					<control type="image">
						<description>Watched Overlay</description>
						<width>26</width>
						<height>26</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
					</control>
				</control>
			</control>
		</focusedlayout>
	</include>
	
	<include name="DialogVideoInfoBanner">
		<left>651</left>
		<top>424</top>
		<width>580</width>
		<height>202</height>
		<onup>987</onup>
		<onleft>901</onleft>
		<orientation>horizontal</orientation>
		<itemlayout width="145">
			<control type="image">
				<width>142</width>
				<height>202</height>
				<bordertexture border="4">covers/cover-case2.png</bordertexture>
				<bordersize>4</bordersize>
				<aspectratio align="center" aligny="center">scale</aspectratio>
				<texture background="true">$INFO[ListItem.Art(poster)]</texture>
			</control>
			<control type="image">
				<width>142</width>
				<height>202</height>
				<texture border="4">covers/cover-case2.png</texture>
				<visible>String.IsEmpty(ListItem.Art(poster))</visible>
			</control>
			<control type="image">
				<width>142</width>
				<height>202</height>
				<texture background="true">DefaultMovies.png</texture>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<visible>String.IsEmpty(ListItem.Art(poster))</visible>
			</control>
			<control type="group">
				<visible>Skin.String(VideoInfoMenubar,TVShowSeasons)</visible>
				<top>8</top>
				<left>108</left>
				<control type="label">
					<description>Unwatched Episodes</description>
					<width>26</width>
					<height>26</height>
					<font>ListFont3</font>
					<textcolor>ListColor</textcolor>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<visible>$EXP[UnwatchedEpisodes99-]</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<width>26</width>
					<height>26</height>
					<font>ListFont4</font>
					<textcolor>ListColor</textcolor>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<visible>$EXP[UnwatchedEpisodes99+]</visible>
				</control>
				<control type="image">
					<description>Unwatched Overlay</description>
					<width>26</width>
					<height>26</height>
					<texture background="true">OverlayClean.png</texture>
					<aspectratio>keep</aspectratio>
					<visible>$EXP[UnwatchedEpisodesOverlay]</visible>
				</control>
				<control type="image">
					<description>Watched Overlay</description>
					<width>26</width>
					<height>26</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio>keep</aspectratio>
					<visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
				</control>
			</control>
		</itemlayout>
		<focusedlayout width="145">
			<control type="group">
				<include>ListViewCoverFocusAnim</include>
				<control type="image">
					<width>142</width>
					<height>202</height>
					<texture border="4">covers/cover-case-noshadow-focus.png</texture>
					<include>ListViewOverlayFadeAnim</include>
				</control>
				<control type="image">
					<width>142</width>
					<height>202</height>
					<texture border="4">black.png</texture>
					<bordersize>3</bordersize>
					<visible>String.IsEmpty(ListItem.Art(poster))</visible>
				</control>
				<control type="image">
					<width>142</width>
					<height>202</height>
					<texture background="true">DefaultMovies.png</texture>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<visible>String.IsEmpty(ListItem.Art(poster))</visible>
				</control>
				<control type="image">
					<top>2</top>
					<left>2</left>
					<width>138</width>
					<height>198</height>
					<bordertexture border="4">black.png</bordertexture>
					<bordersize>2</bordersize>
					<aspectratio align="center" aligny="center">scale</aspectratio>
					<texture background="true">$INFO[ListItem.Art(poster)]</texture>
				</control>
				<control type="group">
					<visible>Skin.String(VideoInfoMenubar,TVShowSeasons)</visible>
					<top>8</top>
					<left>108</left>
					<control type="label">
						<description>Unwatched Episodes</description>
						<width>26</width>
						<height>26</height>
						<font>ListFont3</font>
						<textcolor>ListColor</textcolor>
						<align>center</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<visible>$EXP[UnwatchedEpisodes99-]</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<width>26</width>
						<height>26</height>
						<font>ListFont4</font>
						<textcolor>ListColor</textcolor>
						<align>center</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<visible>$EXP[UnwatchedEpisodes99+]</visible>
					</control>
					<control type="image">
						<description>Unwatched Overlay</description>
						<width>26</width>
						<height>26</height>
						<texture background="true">OverlayClean.png</texture>
						<aspectratio>keep</aspectratio>
						<visible>$EXP[UnwatchedEpisodesOverlay]</visible>
					</control>
					<control type="image">
						<description>Watched Overlay</description>
						<width>26</width>
						<height>26</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
					</control>
				</control>
			</control>
		</focusedlayout>
	</include>
	
	<include name="NextUpEpisodesPoster">
		<top>459</top>
		<left>469</left>
		<width>715</width>
		<itemlayout width="239">
			<control type="image">
				<width>234</width>
				<height>175</height>
				<bordertexture border="4">covers/cover-case2.png</bordertexture>
				<bordersize>4</bordersize>
				<aspectratio align="center" aligny="center">scale</aspectratio>
				<texture background="true">$INFO[ListItem.Art(thumb)]</texture>
			</control>
			<control type="image">
				<width>234</width>
				<height>175</height>
				<texture border="4">covers/cover-case2.png</texture>
				<visible>String.IsEmpty(ListItem.Art(thumb))</visible>
			</control>
			<control type="image">
				<width>234</width>
				<height>175</height>
				<texture background="true">DefaultMovies.png</texture>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<visible>String.IsEmpty(ListItem.Art(thumb))</visible>
			</control>
			<control type="image">
				<left>8</left>
				<top>141</top>
				<width>218</width>
				<height>27</height>
				<texture border="8">views/genre-background.png</texture>
			</control>
			<control type="label">
				<left>13</left>
				<top>145</top>
				<width>208</width>
				<align>center</align>
				<font>SubMenuArrowFont</font>
				<textcolor>WhiteColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$VAR[SeasonEpisodesNumberVar,,. ]$INFO[ListItem.Title]</label>
			</control>
			<include content="VideoOverlays">
				<param name="top" value="10"/>
				<param name="left" value="200"/>
			</include>
		</itemlayout>
		<focusedlayout width="239">
			<control type="group">
				<include>ListViewCoverFocusAnim</include>
				<control type="image">
					<width>234</width>
					<height>175</height>
					<texture border="4">covers/cover-case-noshadow-focus.png</texture>
					<include>ListViewOverlayFadeAnim</include>
				</control>
				<control type="image">
					<width>234</width>
					<height>175</height>
					<texture border="4">black.png</texture>
					<bordersize>3</bordersize>
					<visible>String.IsEmpty(ListItem.Art(thumb))</visible>
				</control>
				<control type="image">
					<width>234</width>
					<height>175</height>
					<texture background="true">DefaultMovies.png</texture>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<visible>String.IsEmpty(ListItem.Art(thumb))</visible>
				</control>
				<control type="image">
					<top>2</top>
					<left>2</left>
					<width>230</width>
					<height>171</height>
					<bordertexture border="4">black.png</bordertexture>
					<bordersize>2</bordersize>
					<aspectratio align="center" aligny="center">scale</aspectratio>
					<texture background="true">$INFO[ListItem.Art(thumb)]</texture>
				</control>
				<control type="image">
					<left>8</left>
					<top>141</top>
					<width>218</width>
					<height>27</height>
					<texture border="8">views/genre-background.png</texture>
				</control>
				<control type="label">
					<left>13</left>
					<top>145</top>
					<width>208</width>
					<align>center</align>
					<font>SubMenuArrowFont</font>
					<textcolor>SelectedColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$VAR[SeasonEpisodesNumberVar,,. ]$INFO[ListItem.Title]</label>
				</control>
				<include content="VideoOverlays">
					<param name="top" value="10"/>
					<param name="left" value="200"/>
				</include>
			</control>
		</focusedlayout>
	</include>
	
	<include name="NextUpEpisodesBanner">
		<top>443</top>
		<left>646</left>
		<width>588</width>
		<itemlayout width="294">
			<control type="image">
				<width>289</width>
				<height>163</height>
				<bordertexture border="4">covers/cover-case2.png</bordertexture>
				<bordersize>4</bordersize>
				<aspectratio align="center" aligny="center">scale</aspectratio>
				<texture background="true">$INFO[ListItem.Art(thumb)]</texture>
			</control>
			<control type="image">
				<width>289</width>
				<height>163</height>
				<texture border="4">covers/cover-case2.png</texture>
				<visible>String.IsEmpty(ListItem.Art(thumb))</visible>
			</control>
			<control type="image">
				<width>289</width>
				<height>163</height>
				<texture background="true">DefaultMovies.png</texture>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<visible>String.IsEmpty(ListItem.Art(thumb))</visible>
			</control>
			<control type="image">
				<left>8</left>
				<top>129</top>
				<width>273</width>
				<height>27</height>
				<texture border="8">views/genre-background.png</texture>
			</control>
			<control type="label">
				<left>13</left>
				<top>133</top>
				<width>269</width>
				<align>center</align>
				<font>SubMenuArrowFont</font>
				<textcolor>WhiteColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$VAR[SeasonEpisodesNumberVar,,. ]$INFO[ListItem.Title]</label>
			</control>
			<include content="VideoOverlays">
				<param name="top" value="10"/>
				<param name="left" value="255"/>
			</include>
		</itemlayout>
		<focusedlayout width="294">
			<control type="group">
				<include>ListViewCoverFocusAnim</include>
				<control type="image">
					<width>289</width>
					<height>163</height>
					<texture border="4">covers/cover-case-noshadow-focus.png</texture>
					<include>ListViewOverlayFadeAnim</include>
				</control>
				<control type="image">
					<width>289</width>
					<height>163</height>
					<texture border="4">black.png</texture>
					<bordersize>3</bordersize>
					<visible>String.IsEmpty(ListItem.Art(thumb))</visible>
				</control>
				<control type="image">
					<width>289</width>
					<height>163</height>
					<texture background="true">DefaultMovies.png</texture>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<visible>String.IsEmpty(ListItem.Art(thumb))</visible>
				</control>
				<control type="image">
					<top>2</top>
					<left>2</left>
					<width>285</width>
					<height>158</height>
					<bordertexture border="4">black.png</bordertexture>
					<bordersize>2</bordersize>
					<aspectratio align="center" aligny="center">scale</aspectratio>
					<texture background="true">$INFO[ListItem.Art(thumb)]</texture>
				</control>
				<control type="image">
					<left>8</left>
					<top>129</top>
					<width>274</width>
					<height>27</height>
					<texture border="8">views/genre-background.png</texture>
				</control>
				<control type="label">
					<left>13</left>
					<top>133</top>
					<width>269</width>
					<align>center</align>
					<font>SubMenuArrowFont</font>
					<textcolor>SelectedColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$VAR[SeasonEpisodesNumberVar,,. ]$INFO[ListItem.Title]</label>
				</control>
				<include content="VideoOverlays">
				<param name="top" value="10"/>
				<param name="left" value="255"/>
			</include>
			</control>
		</focusedlayout>
	</include>
	<!-- END DialogVideoInfo.xml -->
	
	<!-- DialogMusicInfo.xml -->
	<variable name="MusicInfoLabel1">
		<value condition="Container.Content(Artists)">$INFO[ListItem.Artist]</value>
		<value condition="Container.Content(Albums)">$INFO[ListItem.Album]</value>
		<value condition="Container.Content(Songs)">$INFO[ListItem.Title,","]</value>
	</variable>
	
	<variable name="MusicInfoLabel2">
		<value condition="Container.Content(Artists)">$INFO[ListItem.Genre]</value>
		<value condition="Container.Content(Songs) | Container.Content(Albums)">$INFO[ListItem.Artist]</value>
	</variable>
	
	<variable name="MusicInfoTextbox">
		<value condition="Container.Content(Artists) + !String.IsEmpty(ListItem.Property(Artist_Description))">$INFO[ListItem.Property(Artist_Description)]</value>
		<value condition="Container.Content(Artists)">$LOCALIZE[547].</value>
		<value condition="Container.Content(Albums) + !String.IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Album_Description)]</value>
		<value condition="Container.Content(Albums)">$LOCALIZE[31204]</value>
		<value condition="Container.Content(Songs) + !String.IsEmpty(ListItem.Comment)">$INFO[ListItem.Comment]</value>
		<value condition="Container.Content(Songs)">$LOCALIZE[31205]</value>
	</variable>
	
	<variable name="MusicInfoTextboxButtonLabel1">
		<value condition="String.IsEqual(ListItem.DBTYPE,artist)">$LOCALIZE[132]</value>
		<value condition="String.IsEqual(ListItem.DBTYPE,album) + !Integer.IsEqual(Container(50).NumItems,0)">$LOCALIZE[182]</value>
		<value condition="String.IsEqual(ListItem.DBTYPE,album)">$LOCALIZE[183]</value>
		<value condition="String.IsEqual(ListItem.DBTYPE,song) + !Integer.IsEqual(Container(50).NumItems,0)">$LOCALIZE[31182]</value>
		<value condition="String.IsEqual(ListItem.DBTYPE,song)">$LOCALIZE[569]</value>
	</variable>
	
	<variable name="MusicInfoTextboxButtonLabel2">
		<value condition="String.IsEqual(ListItem.DBTYPE,artist)">$LOCALIZE[21887]</value>
		<value condition="String.IsEqual(ListItem.DBTYPE,album)">$LOCALIZE[183]</value>
		<value condition="String.IsEqual(ListItem.DBTYPE,song)">$LOCALIZE[569]</value>
	</variable>
	
	<variable name="MusicInfoAlbumTypeVar">
		<value condition="ListItem.IsBoxset">$INFO[ListItem.Property(Album_Type)]$INFO[ListItem.TotalDiscs, (, $LOCALIZE[14087])]</value>
		<value>$INFO[ListItem.Property(Album_Type)]</value>
	</variable>
	
	<include name="MusicVideosPanel">
		<control type="panel" id="969">
			<description>Music Videos</description>
			<left>100</left>
			<top>459</top>
			<width>1084</width>
			<height>173</height>
			<scrolltime>200</scrolltime>
			<pagecontrol>61</pagecontrol>
			<orientation>horizontal</orientation>
			<onleft>987</onleft>
			<ondown condition="Control.IsVisible(61)">61</ondown>
			<onup>901</onup>
			<onright condition="Control.IsVisible(61)">61</onright>
			<onclick>Dialog.Close(musicinformation)</onclick>
			<onclick>PlayMedia($INFO[ListItem.FolderPath])</onclick>
			<include>FSMediaInfoOpenCloseAnim</include>
			<visible>$PARAM[visible] + System.AddonIsEnabled(plugin.video.youtube)</visible>
			<itemlayout height="173" width="271">
				<control type="image">
					<width>268</width>
					<height>173</height>
					<bordertexture border="4">covers/cover-case2.png</bordertexture>
					<bordersize>4</bordersize>
					<aspectratio align="center" aligny="center">scale</aspectratio>
					<texture background="true">$INFO[ListItem.Thumb]</texture>
				</control>
				<control type="image">
					<width>268</width>
					<height>173</height>
					<texture border="4">covers/cover-case2.png</texture>
					<visible>String.IsEmpty(ListItem.Thumb)</visible>
				</control>
				<control type="image">
					<top>2</top>
					<width>268</width>
					<height>142</height>
					<texture background="true">DefaultAudio.png</texture>
					<aspectratio align="center" aligny="top">keep</aspectratio>
					<visible>String.IsEmpty(ListItem.Thumb)</visible>
				</control>
				<control type="image">
					<left>10</left>
					<top>137</top>
					<width>248</width>
					<height>27</height>
					<texture border="8">views/genre-background.png</texture>
					<visible>!String.IsEmpty(ListItem.Label)</visible>
				</control>
				<control type="label">
					<left>15</left>
					<top>141</top>
					<width>238</width>
					<align>center</align>
					<font>SubMenuArrowFont</font>
					<textcolor>WhiteColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Label]</label>
					<visible>!String.IsEmpty(ListItem.Label)</visible>
				</control>
			</itemlayout>
			<focusedlayout height="173" width="271">
				<control type="group">
					<include>ListViewCoverFocusAnim</include>
					<control type="image">
						<width>268</width>
						<height>173</height>
						<texture border="4">covers/cover-case-noshadow-focus.png</texture>
						<include>ListViewOverlayFadeAnim</include>
					</control>
					<control type="image">
						<width>268</width>
						<height>173</height>
						<texture border="4">black.png</texture>
						<bordersize>3</bordersize>
						<visible>String.IsEmpty(ListItem.Thumb)</visible>
					</control>
					<control type="image">
						<top>2</top>
						<width>268</width>
						<height>142</height>
						<texture background="true">DefaultAudio.png</texture>
						<aspectratio align="center" aligny="top">keep</aspectratio>
						<visible>String.IsEmpty(ListItem.Thumb)</visible>
					</control>
					<control type="image">
						<top>2</top>
						<left>2</left>
						<width>264</width>
						<height>169</height>
						<bordertexture border="4">black.png</bordertexture>
						<bordersize>2</bordersize>
						<aspectratio align="center" aligny="center">scale</aspectratio>
						<texture background="true">$INFO[ListItem.Thumb]</texture>
					</control>
					<control type="image">
						<left>10</left>
						<top>137</top>
						<width>248</width>
						<height>27</height>
						<texture border="8">views/genre-background.png</texture>
						<visible>!String.IsEmpty(ListItem.Label)</visible>
					</control>
					<control type="label">
						<left>15</left>
						<top>141</top>
						<width>238</width>
						<align>center</align>
						<font>SubMenuArrowFont</font>
						<textcolor>SelectedColor2</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$INFO[ListItem.Label]</label>
						<visible>!String.IsEmpty(ListItem.Label)</visible>
					</control>
				</control>
			</focusedlayout>
			<content target="video">$PARAM[content]</content>
		</control>
	</include>
	<!-- END DialogMusicInfo.xml -->
	
	<!-- Skin Settings -->
	<variable name="RatingTypeLabel">
		<value condition="Skin.HasSetting(RatingTypeUser)">$LOCALIZE[38018]</value>
		<value condition="Skin.HasSetting(RatingTypeDefault)">$LOCALIZE[571]</value>
		<value>$LOCALIZE[571]</value>
	</variable>
	
	<variable name="MusicBackgroundLabel">
		<value condition="Skin.HasSetting(UseVisualizationAndFanartForMusicPlayingBG)">$LOCALIZE[31171]</value>
		<value condition="!Skin.HasSetting(UseFanartForMusicPlayingBG)">$LOCALIZE[31170]</value>
		<value condition="Skin.HasSetting(UseFanartForMusicPlayingBG)">$LOCALIZE[31169]</value>
		<value>$LOCALIZE[31438]</value>
	</variable>
	
	<variable name="SkinSettingOSDAutoCloseTime">
		<value condition="!String.IsEmpty(Skin.String(OSDAutoCloseTime))">$INFO[Skin.String(OSDAutoCloseTime)]</value>
		<value>4</value>
	</variable>
	
	<variable name="StatusUISoundsVar">
		<value condition="System.AddonIsEnabled(resource.uisounds.rapier)">$INFO[System.AddonVersion(resource.uisounds.rapier)] $LOCALIZE[31437]</value>
		<value condition="System.HasAddon(resource.uisounds.rapier) + !System.AddonIsEnabled(resource.uisounds.rapier)">$LOCALIZE[24023]</value>
		<value>$LOCALIZE[31492]</value>
	</variable>
	
	<variable name="StatusImageResourceSelectVar">
		<value condition="System.AddonIsEnabled(script.image.resource.select)">$INFO[System.AddonVersion(script.image.resource.select)] $LOCALIZE[31437]</value>
		<value condition="System.HasAddon(script.image.resource.select) + !System.AddonIsEnabled(script.image.resource.select)">$LOCALIZE[24023]</value>
		<value>$LOCALIZE[31492]</value>
	</variable>
	
	<variable name="StatusStudioIconsVar">
		<value condition="System.AddonIsEnabled(resource.images.studios.white)">$INFO[System.AddonVersion(resource.images.studios.white)] $LOCALIZE[31437]</value>
		<value condition="System.HasAddon(resource.images.studios.white) + !System.AddonIsEnabled(resource.images.studios.white)">$LOCALIZE[24023]</value>
		<value>$LOCALIZE[31492]</value>
	</variable>
	
	<variable name="StatusSkinHelperServiceVar">
		<value condition="System.AddonIsEnabled(script.skin.helper.service)">$INFO[System.AddonVersion(script.skin.helper.service)] $LOCALIZE[31437]</value>
		<value condition="System.HasAddon(script.skin.helper.service) + !System.AddonIsEnabled(script.skin.helper.service)">$LOCALIZE[24023]</value>
		<value>$LOCALIZE[31492]</value>
	</variable>
	
	<variable name="StatusSkinHelperWidgetsVar">
		<value condition="System.AddonIsEnabled(script.skin.helper.widgets)">$INFO[System.AddonVersion(script.skin.helper.widgets)] $LOCALIZE[31437]</value>
		<value condition="System.HasAddon(script.skin.helper.widgets) + !System.AddonIsEnabled(script.skin.helper.widgets)">$LOCALIZE[24023]</value>
		<value>$LOCALIZE[31492]</value>
	</variable>
	
	<variable name="StatusFavouritesScriptVar">
		<value condition="System.AddonIsEnabled(script.favourites)">$INFO[System.AddonVersion(script.favourites)] $LOCALIZE[31437]</value>
		<value condition="System.HasAddon(script.favourites) + !System.AddonIsEnabled(script.favourites)">$LOCALIZE[24023]</value>
		<value>$LOCALIZE[31492]</value>
	</variable>
	
	<variable name="StatusArtistSlideshowVar">
		<value condition="System.AddonIsEnabled(script.artistslideshow)">$INFO[System.AddonVersion(script.artistslideshow)] $LOCALIZE[31437]</value>
		<value condition="System.HasAddon(script.artistslideshow) + !System.AddonIsEnabled(script.artistslideshow)">$LOCALIZE[24023]</value>
		<value>$LOCALIZE[31492]</value>
	</variable>
	
	<variable name="StatusGlobalSearchVar">
		<value condition="System.AddonIsEnabled(script.globalsearch)">$INFO[System.AddonVersion(script.globalsearch)] $LOCALIZE[31437]</value>
		<value condition="System.HasAddon(script.globalsearch) + !System.AddonIsEnabled(script.globalsearch)">$LOCALIZE[24023]</value>
		<value>$LOCALIZE[31492]</value>
	</variable>
	
	<variable name="StatusCULRCLyricsVar">
		<value condition="System.AddonIsEnabled(script.cu.lrclyrics)">$INFO[System.AddonVersion(script.cu.lrclyrics)] $LOCALIZE[31437]</value>
		<value condition="System.HasAddon(script.cu.lrclyrics) + !System.AddonIsEnabled(script.cu.lrclyrics)">$LOCALIZE[24023]</value>
		<value>$LOCALIZE[31492]</value>
	</variable>
	
	<variable name="StatusSkinShortcutsVar">
		<value condition="System.AddonIsEnabled(script.skinshortcuts)">$INFO[System.AddonVersion(script.skinshortcuts)] $LOCALIZE[31437]</value>
		<value condition="System.HasAddon(script.skinshortcuts) + !System.AddonIsEnabled(script.skinshortcuts)">$LOCALIZE[24023]</value>
		<value>$LOCALIZE[31492]</value>
	</variable>
	
	<variable name="StatusSkinHelperSkinbackupVar">
		<value condition="System.AddonIsEnabled(script.skin.helper.skinbackup)">$INFO[System.AddonVersion(script.skin.helper.skinbackup)] $LOCALIZE[31437]</value>
		<value condition="System.HasAddon(script.skin.helper.skinbackup) + !System.AddonIsEnabled(script.skin.helper.skinbackup)">$LOCALIZE[24023]</value>
		<value>$LOCALIZE[31492]</value>
	</variable>
	
	<variable name="StatusEmbuaryInfoVar">
		<value condition="System.AddonIsEnabled(script.embuary.info)">$INFO[System.AddonVersion(script.embuary.info)] $LOCALIZE[31437]</value>
		<value condition="System.HasAddon(script.embuary.info) + !System.AddonIsEnabled(script.embuary.info)">$LOCALIZE[24023]</value>
		<value>$LOCALIZE[31492]</value>
	</variable>
	
	<variable name="StatusEmbuaryHelperVar">
		<value condition="System.AddonIsEnabled(script.embuary.helper)">$INFO[System.AddonVersion(script.embuary.helper)] $LOCALIZE[31437]</value>
		<value condition="System.HasAddon(script.embuary.helper) + !System.AddonIsEnabled(script.embuary.helper)">$LOCALIZE[24023]</value>
		<value>$LOCALIZE[31492]</value>
	</variable>
	
	<variable name="StatusAutoCompletionVar">
		<value condition="System.AddonIsEnabled(plugin.program.autocompletion)">$INFO[System.AddonVersion(plugin.program.autocompletion)] $LOCALIZE[31437]</value>
		<value condition="System.HasAddon(plugin.program.autocompletion) + !System.AddonIsEnabled(plugin.program.autocompletion)">$LOCALIZE[24023]</value>
		<value>$LOCALIZE[31492]</value>
	</variable>
	
	<variable name="StatusMultiWeatherVar">
		<value condition="System.AddonIsEnabled(weather.multi)">$INFO[System.AddonVersion(weather.multi)] $LOCALIZE[31437]</value>
		<value condition="System.HasAddon(weather.multi) + !System.AddonIsEnabled(weather.multi)">$LOCALIZE[24023]</value>
		<value>$LOCALIZE[31492]</value>
	</variable>
	
	<variable name="StatusUpnextVar">
		<value condition="System.AddonIsEnabled(service.upnext)">$INFO[System.AddonVersion(service.upnext)] $LOCALIZE[31437]</value>
		<value condition="System.HasAddon(service.upnext) + !System.AddonIsEnabled(service.upnext)">$LOCALIZE[24023]</value>
		<value>$LOCALIZE[31492]</value>
	</variable>
	
	<variable name="StatusLibraryNodeEditorVar">
		<value condition="System.AddonIsEnabled(plugin.library.node.editor)">$INFO[System.AddonVersion(plugin.library.node.editor)] $LOCALIZE[31437]</value>
		<value condition="System.HasAddon(plugin.library.node.editor) + !System.AddonIsEnabled(plugin.library.node.editor)">$LOCALIZE[24023]</value>
		<value>$LOCALIZE[31492]</value>
	</variable>
	
	<variable name="StatusUserRatingVar">
		<value condition="System.AddonIsEnabled(script.user.rating)">$INFO[System.AddonVersion(script.user.rating)] $LOCALIZE[31437]</value>
		<value condition="System.HasAddon(script.user.rating) + !System.AddonIsEnabled(script.user.rating)">$LOCALIZE[24023]</value>
		<value>$LOCALIZE[31492]</value>
	</variable>
	
	<variable name="StatusPreShowExperienceVar">
		<value condition="System.AddonIsEnabled(script.preshowexperience)">$INFO[System.AddonVersion(script.preshowexperience)] $LOCALIZE[31437]</value>
		<value condition="System.HasAddon(script.preshowexperience)´+ !System.AddonIsEnabled(script.preshowexperience)">$LOCALIZE[24023]</value>
		<value>$LOCALIZE[31492]</value>
	</variable>
	
	<variable name="StatusSpecialFeaturesVar">
		<value condition="System.AddonIsEnabled(plugin.video.specialfeatures)">$INFO[System.AddonVersion(plugin.video.specialfeatures)] $LOCALIZE[31437]</value>
		<value condition="System.HasAddon(plugin.video.specialfeatures) + !System.AddonIsEnabled(plugin.video.specialfeatures)">$LOCALIZE[24023]</value>
		<value>$LOCALIZE[31492]</value>
	</variable>
	
	<variable name="StatusTheMovieDbHelperVar">
		<value condition="System.AddonIsEnabled(plugin.video.themoviedb.helper)">$INFO[System.AddonVersion(plugin.video.themoviedb.helper)] $LOCALIZE[31437]</value>
		<value condition="System.HasAddon(plugin.video.themoviedb.helper) + !System.AddonIsEnabled(plugin.video.themoviedb.helper)">$LOCALIZE[24023]</value>
		<value>$LOCALIZE[31492]</value>
	</variable>
	
	<variable name="StatusLibraryEditorVar">
		<value condition="System.AddonIsEnabled(script.libraryeditor)">$INFO[System.AddonVersion(script.libraryeditor)] $LOCALIZE[31437]</value>
		<value condition="System.HasAddon(script.libraryeditor) + !System.AddonIsEnabled(script.libraryeditor)">$LOCALIZE[24023]</value>
		<value>$LOCALIZE[31492]</value>
	</variable>
	
	<variable name="StatusMyPicsDBVar">
		<value condition="System.AddonIsEnabled(plugin.image.mypicsdb)">$INFO[System.AddonVersion(plugin.image.mypicsdb)] $LOCALIZE[31437]</value>
		<value condition="System.HasAddon(plugin.image.mypicsdb) + !System.AddonIsEnabled(plugin.image.mypicsdb)">$LOCALIZE[24023]</value>
		<value>$LOCALIZE[31492]</value>
	</variable>
	<!-- END Skin Settings -->
	
	<!-- Fullscreen / OSD -->
	<variable name="VideoOSDCurrentControlLabel">
		<value condition="ControlGroup(400).HasFocus">$LOCALIZE[36501]</value>
		<value condition="ControlGroup(401).HasFocus">$LOCALIZE[31154]</value>
		<value condition="ControlGroup(402).HasFocus">$LOCALIZE[19033]</value>
		<value condition="ControlGroup(407).HasFocus">$LOCALIZE[31149]</value>
		<value>$INFO[System.CurrentControl]</value>
	</variable>
	
	<variable name="TimeLabels">
		<value condition="Player.Seeking + VideoPlayer.HasEPG">$INFO[PVR.EpgEventSeekTime]$INFO[PVR.EpgEventDuration, / ,]</value>
		<value condition="Player.Seeking">$INFO[Player.SeekTime]$INFO[Player.Duration, / ,]</value>
		<value condition="VideoPlayer.HasEpg">$INFO[PVR.EpgEventElapsedTime]$INFO[PVR.EpgEventDuration, / ,]</value>
		<value>$INFO[VideoPlayer.Time]$INFO[Player.Duration, / ,]</value>
	</variable>
	
	<variable name="SeekbarLabels">
		<value condition="Player.Caching">$INFO[Player.CacheLevel,,%]</value>
		<value condition="!String.IsEmpty(Player.SeekStepSize)">$INFO[Player.SeekStepSize]</value>
		<value condition="!String.IsEmpty(Player.SeekOffset) + Player.HasPerformedSeek(3)">[UPPERCASE]$INFO[Player.SeekOffset][/UPPERCASE]</value>
		<value condition="Player.Paused">[UPPERCASE]$LOCALIZE[112][/UPPERCASE]</value>
		<value condition="Player.Forwarding2x">+2X</value>
		<value condition="Player.Forwarding4x">+4X</value>
		<value condition="Player.Forwarding8x">+8X</value>
		<value condition="Player.Forwarding16x">+16X</value>
		<value condition="Player.Forwarding32x">+32X</value>
		<value condition="Player.Rewinding2x">-2X</value>
		<value condition="Player.Rewinding4x">-4X</value>
		<value condition="Player.Rewinding8x">-8X</value>
		<value condition="Player.Rewinding16x">-16X</value>
		<value condition="Player.Rewinding32x">-32X</value>
		<value condition="Player.IsTempo">[UPPERCASE]$INFO[Player.PlaySpeed,+,X][/UPPERCASE]</value>
	</variable>
	
	<variable name="PausedLabels">
		<value condition="!String.IsEmpty(PVR.ChannelNumberInput)">$INFO[PVR.ChannelNumberInput]</value>
		<value condition="!String.IsEmpty(Player.SeekNumeric)">$INFO[Player.SeekNumeric(hh:mm:ss)]</value>
		<value condition="Player.Caching">$INFO[Player.CacheLevel,$LOCALIZE[10213] ,%]</value>
		<value condition="Player.Paused">$LOCALIZE[112]</value>
		<value>$LOCALIZE[31184]</value>
	</variable>
	
	<variable name="PausedLabels2">
		<value condition="!String.IsEmpty(PVR.ChannelNumberInput)">$INFO[PVR.ChannelNumberInput]</value>
		<value condition="!String.IsEmpty(Player.SeekNumeric)">$INFO[Player.SeekNumeric(hh:mm:ss)]</value>
	</variable>
	
	<variable name="FinishTimeLabels">
		<value condition="VideoPlayer.HasEpg">$INFO[PVR.EpgEventFinishTime]</value>
		<value>$INFO[Player.FinishTime]</value>
	</variable>
	
	<variable name="VideoPlayerSeasonEpisodesNumberVar">
		<value condition="Integer.IsEqual(VideoPlayer.Season,0) + Integer.IsGreater(VideoPlayer.Episode,9) + !String.IsEmpty(VideoPlayer.Episode)">$LOCALIZE[31213] $INFO[VideoPlayer.Episode,E,]</value>
		<value condition="Integer.IsEqual(VideoPlayer.Season,0) + !Integer.IsGreater(VideoPlayer.Episode,9) + !String.IsEmpty(VideoPlayer.Episode)">$LOCALIZE[31213] $INFO[VideoPlayer.Episode,E0,]</value>
		<value condition="Integer.IsLessOrEqual(VideoPlayer.Season,9) + Integer.IsLessOrEqual(VideoPlayer.Episode,9)">$INFO[VideoPlayer.Season,S0,]$INFO[VideoPlayer.Episode,E0,]</value> 
		<value condition="Integer.IsLessOrEqual(VideoPlayer.Season,9)">$INFO[VideoPlayer.Season,S0,]$INFO[VideoPlayer.Episode,E,]</value> 
		<value condition="Integer.IsLessOrEqual(VideoPlayer.Episode,9)">$INFO[VideoPlayer.Season,S,]$INFO[VideoPlayer.Episode,E0,]</value> 
		<value>$INFO[VideoPlayer.Season,S,]$INFO[VideoPlayer.Episode,E,]</value>
	</variable>
	
	<variable name="VideoPlayerSeasonEpisodesOffset1NumberVar">
		<value condition="Integer.IsEqual(VideoPlayer.offset(1).Season,0) + Integer.IsGreater(VideoPlayer.offset(1).Episode,9) + !String.IsEmpty(VideoPlayer.offset(1).Episode)">$LOCALIZE[31213] $INFO[VideoPlayer.offset(1).Episode,E,]</value>
		<value condition="Integer.IsEqual(VideoPlayer.offset(1).Season,0) + !Integer.IsGreater(VideoPlayer.offset(1).Episode,9) + !String.IsEmpty(VideoPlayer.offset(1).Episode)">$LOCALIZE[31213] $INFO[VideoPlayer.offset(1).Episode,E0,]</value>
		<value condition="Integer.IsLessOrEqual(VideoPlayer.offset(1).Season,9) + Integer.IsLessOrEqual(VideoPlayer.offset(1).Episode,9)">$INFO[VideoPlayer.offset(1).Season,S0,]$INFO[VideoPlayer.offset(1).Episode,E0,]</value> 
		<value condition="Integer.IsLessOrEqual(VideoPlayer.offset(1).Season,9)">$INFO[VideoPlayer.offset(1).Season,S0,]$INFO[VideoPlayer.offset(1).Episode,E,]</value> 
		<value condition="Integer.IsLessOrEqual(VideoPlayer.offset(1).Episode,9)">$INFO[VideoPlayer.offset(1).Season,S,]$INFO[VideoPlayer.offset(1).Episode,E0,]</value> 
		<value>$INFO[VideoPlayer.offset(1).Season,S,]$INFO[VideoPlayer.offset(1).Episode,E,]</value>
	</variable>
	
	<variable name="FSInfoTitle">
		<value condition="[VideoPlayer.Content(LiveTV) | PVR.IsPlayingRecording | PVR.IsPlayingEpgTag] + ![String.IsEmpty(VideoPlayer.Title) + String.IsEmpty(VideoPlayer.Year) + String.IsEmpty(VideoPlayer.Episode)]">$VAR[VideoPlayerSeasonEpisodesNumberVar,,. ]$INFO[VideoPlayer.Title]$INFO[VideoPlayer.Year, (,)]</value>
		<value condition="![String.IsEmpty(VideoPlayer.Title) + String.IsEmpty(VideoPlayer.Year)]">$INFO[VideoPlayer.Title]$INFO[VideoPlayer.Year, (,)]</value>
		<value>$LOCALIZE[19055]</value>
	</variable>
	
	<variable name="FSInfoLabel1">
		<value condition="VideoPlayer.Content(Movies) | VideoPlayer.Content(MusicVideos)">$INFO[VideoPlayer.Genre]</value>
		<value condition="VideoPlayer.Content(Episodes)">$INFO[VideoPlayer.TVShowTitle]$VAR[VideoPlayerSeasonEpisodesNumberVar, (,)]</value>
		<value condition="VideoPlayer.Content(LiveTV) | PVR.IsPlayingRecording | PVR.IsPlayingEpgTag">$INFO[VideoPlayer.ChannelNumberLabel]$INFO[VideoPlayer.ChannelName,.  ]</value>
	</variable>
	
	<variable name="FSInfoLabel2">
		<value condition="[VideoPlayer.Content(LiveTV) | PVR.IsPlayingRecording | PVR.IsPlayingEpgTag] + !String.IsEmpty(VideoPlayer.Director)">$LOCALIZE[20339]:</value>
		<value condition="VideoPlayer.Content(LiveTV) | PVR.IsPlayingRecording | PVR.IsPlayingEpgTag">$LOCALIZE[19127]:</value>
		<value condition="VideoPlayer.Content(MusicVideos)">$LOCALIZE[557]:</value>
	</variable>
	
	<variable name="FSInfoLabel2Val">
		<value condition="[VideoPlayer.Content(LiveTV) | PVR.IsPlayingRecording | PVR.IsPlayingEpgTag] + !String.IsEmpty(VideoPlayer.Director)">$INFO[VideoPlayer.Director]</value>
		<value condition="VideoPlayer.Content(LiveTV) | PVR.IsPlayingRecording | PVR.IsPlayingEpgTag">$INFO[VideoPlayer.EndTime]</value>
		<value condition="VideoPlayer.Content(MusicVideos)">$INFO[VideoPlayer.Artist]</value>
	</variable>
	
	<variable name="FSInfoLabel3">
		<value condition="[VideoPlayer.Content(LiveTV) | PVR.IsPlayingRecording | PVR.IsPlayingEpgTag] + !String.IsEmpty(VideoPlayer.Writer)">$LOCALIZE[20417]:</value>
		<value condition="VideoPlayer.Content(LiveTV) | PVR.IsPlayingRecording | PVR.IsPlayingEpgTag">$LOCALIZE[19141]:</value>
		<value condition="VideoPlayer.Content(MusicVideos)">$LOCALIZE[558]:</value>
	</variable>
	
	<variable name="FSInfoLabel3Val">
		<value condition="[VideoPlayer.Content(LiveTV) | PVR.IsPlayingRecording | PVR.IsPlayingEpgTag] + !String.IsEmpty(VideoPlayer.Writer)">$INFO[VideoPlayer.Writer]</value>
		<value condition="VideoPlayer.Content(LiveTV) | PVR.IsPlayingRecording | PVR.IsPlayingEpgTag">$INFO[VideoPlayer.ChannelGroup]</value>
		<value condition="VideoPlayer.Content(MusicVideos)">$INFO[VideoPlayer.Album]</value>
	</variable>
	
	<variable name="VideoPlayerSeekBar1Var">
		<value condition="VideoPlayer.Content(LiveTV) | PVR.IsPlayingRecording | PVR.IsPlayingEpgTag">$INFO[VideoPlayer.ChannelName]</value>
		<value condition="!String.IsEmpty(VideoPlayer.TVShowTitle)">$INFO[VideoPlayer.TVShowTitle]</value>
		<value>$INFO[VideoPlayer.Title]</value>
	</variable>
	
	<variable name="VideoPlayerSeekBar2Var">
		<value condition="!String.IsEmpty(VideoPlayer.Season)">$VAR[VideoPlayerSeasonEpisodesNumberVar,,. ]$INFO[VideoPlayer.Title]</value>
		<value condition="VideoPlayer.Content(LiveTV) | PVR.IsPlayingRecording | PVR.IsPlayingEpgTag">$INFO[VideoPlayer.Title]</value>
		<value>$INFO[VideoPlayer.Year]</value>
	</variable>
	
	<variable name="VideoFullscreenChapterNextLabel">
		<value condition="Player.ChapterCount">$LOCALIZE[21396]</value>
		<value>$LOCALIZE[209]</value>
	</variable>
	
	<variable name="VideoFullscreenChapterNextInfo">
		<value condition="Player.ChapterCount">$INFO[Player.Chapter]$INFO[Player.ChapterCount, / ]$INFO[Player.ChapterName, - ,]</value>
		<value condition="VideoPlayer.Content(Movies)">$INFO[VideoPlayer.offset(1).Title]$INFO[VideoPlayer.offset(1).Year, (,)]</value>
		<value>$VAR[VideoPlayerSeasonEpisodesOffset1NumberVar,,. ]$INFO[VideoPlayer.offset(1).Title]</value>
	</variable>
	
	<variable name="PosterImageOSD">
		<value condition="!String.IsEmpty(Player.Art(tvshow.poster))">$INFO[Player.Art(tvshow.poster)]</value>
		<value condition="!String.IsEmpty(Player.Art(poster))">$INFO[Player.Art(poster)]</value>
		<value condition="!String.IsEmpty(Player.Art(thumb))">$INFO[Player.Art(thumb)]</value>
	</variable>
	
	<variable name="ClearImageOSD">
		<value condition="VideoPlayer.Content(Movies) + [Skin.HasSetting(ShowClearArtOSD) + !String.IsEmpty(Player.Art(clearart))]">$INFO[Player.Art(clearart)]</value>
		<value condition="VideoPlayer.Content(Movies) + [[Skin.HasSetting(ShowClearLogoOSD) + !String.IsEmpty(Player.Art(clearlogo))] | [Skin.HasSetting(ShowClearArtOSD) + String.IsEmpty(Player.Art(clearart)) + !String.IsEmpty(Player.Art(clearlogo))]]">$INFO[Player.Art(clearlogo)]</value>
		<value condition="VideoPlayer.Content(Episodes) + [Skin.HasSetting(ShowClearArtOSD) + !String.IsEmpty(Player.Art(tvshow.clearart))]">$INFO[Player.Art(tvshow.clearart)]</value>
		<value condition="VideoPlayer.Content(Episodes) + [[Skin.HasSetting(ShowClearLogoOSD) + !String.IsEmpty(Player.Art(tvshow.clearlogo))] | [Skin.HasSetting(ShowClearArtOSD) + String.IsEmpty(Player.Art(tvshow.clearart)) + !String.IsEmpty(Player.Art(tvshow.clearlogo))]]">$INFO[Player.Art(tvshow.clearlogo)]</value>
		<value condition="Window.IsActive(PlayerControls) + VideoPlayer.Content(Movies)">$INFO[Player.Art(poster)]</value>
		<value condition="VideoPlayer.Content(Movies)">$INFO[Player.Art(fanart)]</value>
		<value>$INFO[VideoPlayer.Cover]</value>
	</variable>
	
	<variable name="ClearImageOSD1">
		<value condition="VideoPlayer.Content(Episodes) + [Skin.HasSetting(ShowClearArtOSD) + !String.IsEmpty(Player.Art(tvshow.clearart))]">$INFO[Player.Art(tvshow.clearart)]</value>
		<value condition="VideoPlayer.Content(Episodes) + [[Skin.HasSetting(ShowClearLogoOSD) + !String.IsEmpty(Player.Art(tvshow.clearlogo))] | [Skin.HasSetting(ShowClearArtOSD) + String.IsEmpty(Player.Art(tvshow.clearart)) + !String.IsEmpty(Player.Art(tvshow.clearlogo))]]">$INFO[Player.Art(tvshow.clearlogo)]</value>
		<value condition="Skin.HasSetting(ShowClearArtOSD) + !String.IsEmpty(Player.Art(clearart))">$INFO[Player.Art(clearart)]</value>
		<value condition="[Skin.HasSetting(ShowClearLogoOSD) + !String.IsEmpty(Player.Art(clearlogo))] | [Skin.HasSetting(ShowClearArtOSD) + String.IsEmpty(Player.Art(clearart)) + !String.IsEmpty(Player.Art(clearlogo))]">$INFO[Player.Art(clearlogo)]</value>
	</variable>
	
	<variable name="ClearImageOSD2">
		<value condition="!String.IsEmpty(Player.Art(tvshow.poster))">$INFO[Player.Art(tvshow.poster)]</value>
		<value>$INFO[Player.Art(poster)]</value>
	</variable>
	
	<variable name="SubtitleDelayLabel">
		<value condition="!String.IsEqual(Player.SubtitleDelay,0.000 s)">$INFO[Player.SubtitleDelay]</value>
	</variable>
	
	<variable name="PVRChannelManagerHeader">
		<value condition="!String.IsEmpty(Window.Property(IsRadio))">$LOCALIZE[19199] • $LOCALIZE[19024]</value>
		<value>$LOCALIZE[19199] • $LOCALIZE[19023]</value>
	</variable>
	
	<variable name="PVRGroupManagerHeader">
		<value condition="!String.IsEmpty(Window.Property(IsRadio))">$LOCALIZE[19048] • $LOCALIZE[19174]</value>
		<value>$LOCALIZE[19048] • $LOCALIZE[19173]</value>
	</variable>
	
	<variable name="MusicInfoGenre">
		<value condition="!String.IsEmpty(MusicPlayer.Genre)">$INFO[MusicPlayer.Genre]</value>
		<value>$INFO[RDS.GetLine(0)]</value>
	</variable>
	
	<include name="OSDButton">
		<width>$PARAM[size]</width>
		<height>$PARAM[size]</height>
		<aspectratio>keep</aspectratio>
		<pulseonselect>false</pulseonselect>
	</include>
	
	<include name="FSMediaInfoPanel">
		<control type="group" id="1">
			<visible>![Pvr.IsPlayingTv | Pvr.IsPlayingRadio]</visible>
			
			<control type="image" id="1">
				<width>1224</width>
				<height>280</height>
				<texture border="8">panels/panel.png</texture>
			</control>
			
			<control type="image" id="1">
				<left>4</left>
				<top>4</top>
				<width>1216</width>
				<height>70</height>
				<texture border="5">panels/panel-content-border2.png</texture>
				<animation effect="fade" end="5" condition="true">Conditional</animation>
				<visible>![VideoPlayer.Content(Movies) | VideoPlayer.Content(Episodes)]</visible>
			</control>
			
			<control type="image" id="1">
				<left>193</left>
				<top>4</top>
				<width>1027</width>
				<height>70</height>
				<texture border="5">panels/panel-content-border2.png</texture>
				<animation effect="fade" end="5" condition="true">Conditional</animation>
				<visible>VideoPlayer.Content(Movies) | VideoPlayer.Content(Episodes)</visible>
			</control>
		</control>
		
		<control type="group" id="1">
			<visible>Pvr.IsPlayingTv | Pvr.IsPlayingRadio</visible>
			
			<control type="image" id="1">
				<width>1224</width>
				<height>300</height>
				<texture border="8">panels/panel.png</texture>
			</control>
			
			<control type="image" id="1">
				<left>4</left>
				<top>4</top>
				<width>1216</width>
				<height>70</height>
				<texture border="5">panels/panel-content-border2.png</texture>
				<animation effect="fade" end="5" condition="true">Conditional</animation>
			</control>
			
			<control type="image" id="1">
				<left>4</left>
				<top>275</top>
				<width>1216</width>
				<height>21</height>
				<texture border="5">panels/panel-content-border2.png</texture>
				<animation effect="fade" end="5" condition="true">Conditional</animation>
			</control>
		</control>
	</include>
	
	<include name="FullScreenInfoDot">
		<control type="label" id="1">
			<height>20</height>
			<width>15</width>
			<align>center</align>
			<aligny>center</aligny>
			<font>PanelStatsFont</font>
			<textcolor>MediaInfoItemColor2</textcolor>
			<shadowcolor>ShadowColor</shadowcolor>
			<label>&#x2022;</label>
		</control>
	</include>
	
	<include name="VideoOSDItemgap1">
		<itemgap>10</itemgap>
	</include>
	
	<include name="VideoOSDItemgap2">
		<itemgap>3</itemgap>
	</include>
	
	<include name="FSSeekBar">
		<control type="image">
			<left>6</left>
			<width>474</width>
			<height>75</height>
			<texture border="8">panels/panel.png</texture>
			<aspectratio>stretch</aspectratio>
		</control>
	</include>
	
	<variable name="PlayerStarRating">
		<value condition="Player.HasVideo + Skin.HasSetting(RatingTypeUser)">flagging/imdbstarrating/$INFO[VideoPlayer.UserRating],0.png</value>
		<value condition="Player.HasVideo + Integer.IsLess(VideoPlayer.Rating,1)">flagging/imdbstarrating/0,0.png</value>
		<value condition="Player.HasVideo + Integer.IsLess(VideoPlayer.Rating,2)">flagging/imdbstarrating/1,0.png</value>
		<value condition="Player.HasVideo + Integer.IsLess(VideoPlayer.Rating,3)">flagging/imdbstarrating/2,0.png</value>
		<value condition="Player.HasVideo + Integer.IsLess(VideoPlayer.Rating,4)">flagging/imdbstarrating/3,0.png</value>
		<value condition="Player.HasVideo + Integer.IsLess(VideoPlayer.Rating,5)">flagging/imdbstarrating/4,0.png</value>
		<value condition="Player.HasVideo + Integer.IsLess(VideoPlayer.Rating,6)">flagging/imdbstarrating/5,0.png</value>
		<value condition="Player.HasVideo + Integer.IsLess(VideoPlayer.Rating,7)">flagging/imdbstarrating/6,0.png</value>
		<value condition="Player.HasVideo + Integer.IsLess(VideoPlayer.Rating,8)">flagging/imdbstarrating/7,0.png</value>
		<value condition="Player.HasVideo + Integer.IsLess(VideoPlayer.Rating,9)">flagging/imdbstarrating/8,0.png</value>
		<value condition="Player.HasVideo + Integer.IsLess(VideoPlayer.Rating,10)">flagging/imdbstarrating/9,0.png</value>
		<value condition="Player.HasVideo">flagging/imdbstarrating/10,0.png</value>
		<value condition="Player.HasAudio + Skin.HasSetting(RatingTypeUser)">flagging/imdbstarrating/$INFO[MusicPlayer.UserRating],0.png</value>
		<value condition="Player.HasAudio + Integer.IsLess(MusicPlayer.Rating,1)">flagging/imdbstarrating/0,0.png</value>
		<value condition="Player.HasAudio + Integer.IsLess(MusicPlayer.Rating,2)">flagging/imdbstarrating/1,0.png</value>
		<value condition="Player.HasAudio + Integer.IsLess(MusicPlayer.Rating,3)">flagging/imdbstarrating/2,0.png</value>
		<value condition="Player.HasAudio + Integer.IsLess(MusicPlayer.Rating,4)">flagging/imdbstarrating/3,0.png</value>
		<value condition="Player.HasAudio + Integer.IsLess(MusicPlayer.Rating,5)">flagging/imdbstarrating/4,0.png</value>
		<value condition="Player.HasAudio + Integer.IsLess(MusicPlayer.Rating,6)">flagging/imdbstarrating/5,0.png</value>
		<value condition="Player.HasAudio + Integer.IsLess(MusicPlayer.Rating,7)">flagging/imdbstarrating/6,0.png</value>
		<value condition="Player.HasAudio + Integer.IsLess(MusicPlayer.Rating,8)">flagging/imdbstarrating/7,0.png</value>
		<value condition="Player.HasAudio + Integer.IsLess(MusicPlayer.Rating,9)">flagging/imdbstarrating/8,0.png</value>
		<value condition="Player.HasAudio + Integer.IsLess(MusicPlayer.Rating,10)">flagging/imdbstarrating/9,0.png</value>
		<value condition="Player.HasAudio">flagging/imdbstarrating/10,0.png</value>
	</variable>
	
	<include name="TVGuideNormal">
		<width>1200</width>
		<height>370</height>
		<onback>850</onback>
		<onup>850</onup>
		<ondown>50</ondown>
		<onright condition="!Control.IsVisible(904)">850</onright>
	</include>
	
	<include name="TVGuideFullscreen">
		<width>929</width>
		<height>492</height>
		<onback>9200</onback>
		<onup>9000</onup>
		<ondown>9000</ondown>
		<onright condition="!Control.IsVisible(904)">9000</onright>
	</include>
	
	<include name="TVGuideNormalWidth">
		<width>542</width>
	</include>
	
	<include name="TVGuideFullscreenWidth">
		<width>271</width>
	</include>
	
	<include name="TVGuideNormalWidth4">
		<width>980</width>
	</include>
	
	<include name="TVGuideFullscreenWidth4">
		<width>709</width>
	</include>
	<!-- END Fullscreen / OSD -->
	
	<!-- Music Visualization -->
	<variable name="DiscartImageVar">
		<value condition="!String.IsEmpty(Player.Art(album.discart))">$INFO[Player.Art(album.discart)]</value>
		<value>$INFO[Player.FolderPath,,cdart.png]</value>
	</variable>
	
	<variable name="MusicPlayingTitle">
		<value condition="!String.IsEmpty(MusicPlayer.ChannelName)">$INFO[MusicPlayer.ChannelName]</value>
		<value>$INFO[MusicPlayer.Title]</value>
	</variable>
	
	<variable name="MusicPlayingLine3Label">
		<value condition="MusicPlayer.IsMultiDisc">$LOCALIZE[427]</value>
		<value>$LOCALIZE[31148]</value>
	</variable>
	
	<variable name="MusicPlayingLine3Value">
		<value condition="MusicPlayer.IsMultiDisc">$INFO[MusicPlayer.DiscNumber]$INFO[MusicPlayer.TotalDiscs,/,: ]$INFO[MusicPlayer.DiscTitle]</value>
		<value>$INFO[MusicPlayer.Station]</value>
	</variable>
	
	<variable name="MusicVizDescription">
		<value condition="System.AddonIsEnabled(script.artistslideshow) + [Skin.HasSetting(UseFanartForMusicPlayingBG) | Skin.HasSetting(UseVisualizationAndFanartForMusicPlayingBG)] + Skin.HasSetting(EnableArtistFanartSlideshow)">$INFO[Window(Visualisation).Property(ArtistSlideshow.ArtistBiography)]</value>
		<value>$INFO[MusicPlayer.Property(Album_Description)]</value>
	</variable>
	
	<variable name="MusicPlayingCover">
		<value condition="!String.IsEmpty(MusicPlayer.Cover)">$INFO[MusicPlayer.Cover]</value>
		<value condition="!String.IsEmpty(Player.Art(album.thumb))">$INFO[Player.Art(album.thumb)]</value>
		<value condition="!String.IsEmpty(Player.Art(thumb))">$INFO[Player.Art(thumb)]</value>
		<value>$INFO[Player.Icon]</value>
	</variable>
	<!-- END Music Visualization -->
	
	<!-- SlideShow -->
	<variable name="SlideShowCaptionVar">
		<value condition="!String.IsEmpty(Slideshow.EXIFDescription)">$INFO[Slideshow.EXIFDescription]</value>
		<value condition="!String.IsEmpty(Slideshow.EXIFComment)">$INFO[Slideshow.EXIFComment]</value>
		<value condition="!String.IsEmpty(Slideshow.Caption)">$INFO[Slideshow.Caption]</value>
	</variable>
	
	<variable name="SplashScreenImageDuration">
		<value condition="!String.IsEmpty(Skin.String(SplashScreenImageDuration))">$INFO[Skin.String(SplashScreenImageDuration)]</value>
		<value>5</value>
	</variable>
	<!-- END SlideShow -->
	
	<!-- Custom Windows -->
	<variable name="Window1117PosterThumb">
		<value condition="!String.IsEmpty(Container(901).ListItem.Art(poster))">$INFO[Container(901).ListItem.Art(poster)]</value>
		<value>$INFO[Container(901).ListItem.Thumb]</value>
	</variable>
	<!-- END Custom Windows -->
	
	<!-- Dialog Player Process Info -->
	<variable name="videohwdecoder">
		<value condition="Player.Process(videohwdecoder)">$LOCALIZE[13281]</value>
		<value>$LOCALIZE[13419]</value>
	</variable>
	<!-- END Dialog Player Process Info -->
	
	<!-- PARAMS -->
	<include name="MenubarTopbar">
		<control type="group" id="505">
			<description>Menu Bar Area</description>
			<depth>DepthMenuBar</depth>
			<top>MenuBarOffsetY</top>
			<include>MenuBarImage</include>
			<include>MenuBarOpenCloseAnim2</include>
			<include>$PARAM[Menubar]</include>
		</control>
		
		<control type="group">
			<description>Top Bar Area</description>
			<depth>DepthTopBar</depth>
			<include>TopBarImage</include>
			<include>$PARAM[Breadcrumbs]</include>
			<include>Notifications</include>
		</control>
	</include>
	
	<include name="DialogCustomBackgroundTypeButton">
		<control type="button" id="$PARAM[id]">
			<description>$PARAM[description]</description>
			<include>ContextMenuBtn</include>
			<label>$PARAM[label]</label>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings) + Skin.String(SelectedExpandedBtn,1)">Skin.SetString(AddMoreCategoryBtn1BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings) + Skin.String(SelectedExpandedBtn,2)">Skin.SetString(AddMoreCategoryBtn2BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings) + Skin.String(SelectedExpandedBtn,3)">Skin.SetString(AddMoreCategoryBtn3BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings) + Skin.String(SelectedExpandedBtn,4)">Skin.SetString(AddMoreCategoryBtn4BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings2) + Skin.String(SelectedExpandedBtn,1)">Skin.SetString(AddMoreCategoryBtn5BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings2) + Skin.String(SelectedExpandedBtn,2)">Skin.SetString(AddMoreCategoryBtn6BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings2) + Skin.String(SelectedExpandedBtn,3)">Skin.SetString(AddMoreCategoryBtn7BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings2) + Skin.String(SelectedExpandedBtn,4)">Skin.SetString(AddMoreCategoryBtn8BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings3) + Skin.String(SelectedExpandedBtn,1)">Skin.SetString(AddMoreCategoryBtn9BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings3) + Skin.String(SelectedExpandedBtn,2)">Skin.SetString(AddMoreCategoryBtn10BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings3) + Skin.String(SelectedExpandedBtn,3)">Skin.SetString(AddMoreCategoryBtn11BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings3) + Skin.String(SelectedExpandedBtn,4)">Skin.SetString(AddMoreCategoryBtn12BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings4) + Skin.String(SelectedExpandedBtn,1)">Skin.SetString(AddMoreCategoryBtn13BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings4) + Skin.String(SelectedExpandedBtn,2)">Skin.SetString(AddMoreCategoryBtn14BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings4) + Skin.String(SelectedExpandedBtn,3)">Skin.SetString(AddMoreCategoryBtn15BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings4) + Skin.String(SelectedExpandedBtn,4)">Skin.SetString(AddMoreCategoryBtn16BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick>Dialog.Close(1132)</onclick>
		</control>
	</include>
	
	<include name="DialogCustomBackgroundTypeButton2">
		<control type="button" id="$PARAM[id]">
			<description>$PARAM[description]</description>
			<include>ContextMenuBtn</include>
			<label>$PARAM[label]</label>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings) + Skin.String(SelectedExpandedBtn,1)">Skin.SetString(AddMoreCategoryBtn1BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings) + Skin.String(SelectedExpandedBtn,1)">Skin.SetFile(Custom1BackgroundImagePath,.xsp,special://profile/playlists/video/)</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings) + Skin.String(SelectedExpandedBtn,2)">Skin.SetString(AddMoreCategoryBtn2BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings) + Skin.String(SelectedExpandedBtn,2)">Skin.SetFile(Custom2BackgroundImagePath,.xsp,special://profile/playlists/video/)</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings) + Skin.String(SelectedExpandedBtn,3)">Skin.SetString(AddMoreCategoryBtn3BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings) + Skin.String(SelectedExpandedBtn,3)">Skin.SetFile(Custom3BackgroundImagePath,.xsp,special://profile/playlists/video/)</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings) + Skin.String(SelectedExpandedBtn,4)">Skin.SetString(AddMoreCategoryBtn4BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings) + Skin.String(SelectedExpandedBtn,4)">Skin.SetFile(Custom4BackgroundImagePath,.xsp,special://profile/playlists/video/)</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings2) + Skin.String(SelectedExpandedBtn,1)">Skin.SetString(AddMoreCategoryBtn5BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings2) + Skin.String(SelectedExpandedBtn,1)">Skin.SetFile(Custom5BackgroundImagePath,.xsp,special://profile/playlists/video/)</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings2) + Skin.String(SelectedExpandedBtn,2)">Skin.SetString(AddMoreCategoryBtn6BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings2) + Skin.String(SelectedExpandedBtn,2)">Skin.SetFile(Custom6BackgroundImagePath,.xsp,special://profile/playlists/video/)</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings2) + Skin.String(SelectedExpandedBtn,3)">Skin.SetString(AddMoreCategoryBtn7BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings2) + Skin.String(SelectedExpandedBtn,3)">Skin.SetFile(Custom7BackgroundImagePath,.xsp,special://profile/playlists/video/)</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings2) + Skin.String(SelectedExpandedBtn,4)">Skin.SetString(AddMoreCategoryBtn8BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings2) + Skin.String(SelectedExpandedBtn,4)">Skin.SetFile(Custom8BackgroundImagePath,.xsp,special://profile/playlists/video/)</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings3) + Skin.String(SelectedExpandedBtn,1)">Skin.SetString(AddMoreCategoryBtn9BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings3) + Skin.String(SelectedExpandedBtn,1)">Skin.SetFile(Custom9BackgroundImagePath,.xsp,special://profile/playlists/video/)</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings3) + Skin.String(SelectedExpandedBtn,2)">Skin.SetString(AddMoreCategoryBtn10BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings3) + Skin.String(SelectedExpandedBtn,2)">Skin.SetFile(Custom10BackgroundImagePath,.xsp,special://profile/playlists/video/)</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings3) + Skin.String(SelectedExpandedBtn,3)">Skin.SetString(AddMoreCategoryBtn11BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings3) + Skin.String(SelectedExpandedBtn,3)">Skin.SetFile(Custom11BackgroundImagePath,.xsp,special://profile/playlists/video/)</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings3) + Skin.String(SelectedExpandedBtn,4)">Skin.SetString(AddMoreCategoryBtn12BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings3) + Skin.String(SelectedExpandedBtn,4)">Skin.SetFile(Custom12BackgroundImagePath,.xsp,special://profile/playlists/video/)</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings4) + Skin.String(SelectedExpandedBtn,1)">Skin.SetString(AddMoreCategoryBtn13BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings4) + Skin.String(SelectedExpandedBtn,1)">Skin.SetFile(Custom13BackgroundImagePath,.xsp,special://profile/playlists/video/)</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings4) + Skin.String(SelectedExpandedBtn,2)">Skin.SetString(AddMoreCategoryBtn14BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings4) + Skin.String(SelectedExpandedBtn,2)">Skin.SetFile(Custom14BackgroundImagePath,.xsp,special://profile/playlists/video/)</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings4) + Skin.String(SelectedExpandedBtn,3)">Skin.SetString(AddMoreCategoryBtn15BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings4) + Skin.String(SelectedExpandedBtn,3)">Skin.SetFile(Custom15BackgroundImagePath,.xsp,special://profile/playlists/video/)</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings4) + Skin.String(SelectedExpandedBtn,4)">Skin.SetString(AddMoreCategoryBtn16BackgroundImagePathLabel,$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(ExpandAddMoreCategorySettings4) + Skin.String(SelectedExpandedBtn,4)">Skin.SetFile(Custom16BackgroundImagePath,.xsp,special://profile/playlists/video/)</onclick>
			<onclick>Dialog.Close(1132)</onclick>
		</control>
	</include>
	<!-- END PARAMS -->
</includes>